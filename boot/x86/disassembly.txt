
./build/output/kernel.exe:	file format elf32-i386

Disassembly of section .text:

c0101000 <toupper>:
c0101000: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101004: 8d 50 9f                     	lea	edx, [eax - 97]
c0101007: 83 fa 19                     	cmp	edx, 25
c010100a: 77 03                        	ja	0xc010100f <toupper+0xf>
c010100c: 83 e8 20                     	sub	eax, 32
c010100f: c3                           	ret

c0101010 <tolower>:
c0101010: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101014: 8d 50 bf                     	lea	edx, [eax - 65]
c0101017: 83 fa 19                     	cmp	edx, 25
c010101a: 77 03                        	ja	0xc010101f <tolower+0xf>
c010101c: 83 c0 20                     	add	eax, 32
c010101f: c3                           	ret

c0101020 <isalpha>:
c0101020: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101024: 83 e0 df                     	and	eax, -33
c0101027: 83 e8 41                     	sub	eax, 65
c010102a: 83 f8 19                     	cmp	eax, 25
c010102d: 0f 96 c0                     	setbe	al
c0101030: 0f b6 c0                     	movzx	eax, al
c0101033: c3                           	ret

c0101034 <isalnum>:
c0101034: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c0101038: 52                           	push	edx
c0101039: e8 e2 ff ff ff               	call	0xc0101020 <isalpha>
c010103e: 59                           	pop	ecx
c010103f: 89 c1                        	mov	ecx, eax
c0101041: b8 01 00 00 00               	mov	eax, 1
c0101046: 85 c9                        	test	ecx, ecx
c0101048: 75 0b                        	jne	0xc0101055 <isalnum+0x21>
c010104a: 83 ea 30                     	sub	edx, 48
c010104d: 31 c0                        	xor	eax, eax
c010104f: 83 fa 09                     	cmp	edx, 9
c0101052: 0f 96 c0                     	setbe	al
c0101055: c3                           	ret

c0101056 <iscntrl>:
c0101056: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c010105a: 83 fa 1f                     	cmp	edx, 31
c010105d: 0f 9e c0                     	setle	al
c0101060: 83 fa 7f                     	cmp	edx, 127
c0101063: 0f 94 c2                     	sete	dl
c0101066: 09 d0                        	or	eax, edx
c0101068: 0f b6 c0                     	movzx	eax, al
c010106b: c3                           	ret

c010106c <isblank>:
c010106c: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c0101070: 83 fa 09                     	cmp	edx, 9
c0101073: 0f 94 c0                     	sete	al
c0101076: 83 fa 20                     	cmp	edx, 32
c0101079: 0f 94 c2                     	sete	dl
c010107c: 09 d0                        	or	eax, edx
c010107e: 0f b6 c0                     	movzx	eax, al
c0101081: c3                           	ret

c0101082 <isdigit>:
c0101082: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101086: 83 e8 30                     	sub	eax, 48
c0101089: 83 f8 09                     	cmp	eax, 9
c010108c: 0f 96 c0                     	setbe	al
c010108f: 0f b6 c0                     	movzx	eax, al
c0101092: c3                           	ret

c0101093 <islower>:
c0101093: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101097: 83 e8 61                     	sub	eax, 97
c010109a: 83 f8 19                     	cmp	eax, 25
c010109d: 0f 96 c0                     	setbe	al
c01010a0: 0f b6 c0                     	movzx	eax, al
c01010a3: c3                           	ret

c01010a4 <ispunct>:
c01010a4: 8b 4c 24 04                  	mov	ecx, dword ptr [esp + 4]
c01010a8: ba 00 42 10 c0               	mov	edx, 3222290944
c01010ad: 0f be 02                     	movsx	eax, byte ptr [edx]
c01010b0: 84 c0                        	test	al, al
c01010b2: 74 0b                        	je	0xc01010bf <ispunct+0x1b>
c01010b4: 42                           	inc	edx
c01010b5: 39 c8                        	cmp	eax, ecx
c01010b7: 75 f4                        	jne	0xc01010ad <ispunct+0x9>
c01010b9: b8 01 00 00 00               	mov	eax, 1
c01010be: c3                           	ret
c01010bf: 31 c0                        	xor	eax, eax
c01010c1: c3                           	ret

c01010c2 <isgraph>:
c01010c2: 53                           	push	ebx
c01010c3: 8b 5c 24 08                  	mov	ebx, dword ptr [esp + 8]
c01010c7: 53                           	push	ebx
c01010c8: e8 67 ff ff ff               	call	0xc0101034 <isalnum>
c01010cd: 59                           	pop	ecx
c01010ce: 89 c2                        	mov	edx, eax
c01010d0: b8 01 00 00 00               	mov	eax, 1
c01010d5: 85 d2                        	test	edx, edx
c01010d7: 75 0f                        	jne	0xc01010e8 <isgraph+0x26>
c01010d9: 53                           	push	ebx
c01010da: e8 c5 ff ff ff               	call	0xc01010a4 <ispunct>
c01010df: 5a                           	pop	edx
c01010e0: 85 c0                        	test	eax, eax
c01010e2: 0f 95 c0                     	setne	al
c01010e5: 0f b6 c0                     	movzx	eax, al
c01010e8: 5b                           	pop	ebx
c01010e9: c3                           	ret

c01010ea <isprint>:
c01010ea: 53                           	push	ebx
c01010eb: 8b 5c 24 08                  	mov	ebx, dword ptr [esp + 8]
c01010ef: 53                           	push	ebx
c01010f0: e8 cd ff ff ff               	call	0xc01010c2 <isgraph>
c01010f5: 83 fb 20                     	cmp	ebx, 32
c01010f8: 5a                           	pop	edx
c01010f9: 5b                           	pop	ebx
c01010fa: 89 c2                        	mov	edx, eax
c01010fc: 0f 94 c0                     	sete	al
c01010ff: 85 d2                        	test	edx, edx
c0101101: 0f 95 c2                     	setne	dl
c0101104: 09 d0                        	or	eax, edx
c0101106: 0f b6 c0                     	movzx	eax, al
c0101109: c3                           	ret

c010110a <isspace>:
c010110a: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c010110e: 8d 42 f7                     	lea	eax, [edx - 9]
c0101111: 83 f8 04                     	cmp	eax, 4
c0101114: 0f 96 c0                     	setbe	al
c0101117: 83 fa 20                     	cmp	edx, 32
c010111a: 0f 94 c2                     	sete	dl
c010111d: 09 d0                        	or	eax, edx
c010111f: 0f b6 c0                     	movzx	eax, al
c0101122: c3                           	ret

c0101123 <isupper>:
c0101123: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101127: 83 e8 41                     	sub	eax, 65
c010112a: 83 f8 19                     	cmp	eax, 25
c010112d: 0f 96 c0                     	setbe	al
c0101130: 0f b6 c0                     	movzx	eax, al
c0101133: c3                           	ret

c0101134 <isxdigit>:
c0101134: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101138: ba 01 00 00 00               	mov	edx, 1
c010113d: 8d 48 d0                     	lea	ecx, [eax - 48]
c0101140: 83 f9 09                     	cmp	ecx, 9
c0101143: 76 0e                        	jbe	0xc0101153 <isxdigit+0x1f>
c0101145: 83 e0 df                     	and	eax, -33
c0101148: 31 d2                        	xor	edx, edx
c010114a: 83 e8 41                     	sub	eax, 65
c010114d: 83 f8 05                     	cmp	eax, 5
c0101150: 0f 96 c2                     	setbe	dl
c0101153: 89 d0                        	mov	eax, edx
c0101155: c3                           	ret

c0101156 <memchr>:
c0101156: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c010115a: 8b 54 24 0c                  	mov	edx, dword ptr [esp + 12]
c010115e: 8b 4c 24 08                  	mov	ecx, dword ptr [esp + 8]
c0101162: 01 c2                        	add	edx, eax
c0101164: 39 d0                        	cmp	eax, edx
c0101166: 74 07                        	je	0xc010116f <memchr+0x19>
c0101168: 38 08                        	cmp	byte ptr [eax], cl
c010116a: 74 05                        	je	0xc0101171 <memchr+0x1b>
c010116c: 40                           	inc	eax
c010116d: eb f5                        	jmp	0xc0101164 <memchr+0xe>
c010116f: 31 c0                        	xor	eax, eax
c0101171: c3                           	ret

c0101172 <memcmp>:
c0101172: 56                           	push	esi
c0101173: 53                           	push	ebx
c0101174: 8b 44 24 0c                  	mov	eax, dword ptr [esp + 12]
c0101178: 8b 74 24 14                  	mov	esi, dword ptr [esp + 20]
c010117c: 8b 54 24 10                  	mov	edx, dword ptr [esp + 16]
c0101180: 01 c6                        	add	esi, eax
c0101182: 39 f0                        	cmp	eax, esi
c0101184: 74 15                        	je	0xc010119b <memcmp+0x29>
c0101186: 8a 08                        	mov	cl, byte ptr [eax]
c0101188: 8a 1a                        	mov	bl, byte ptr [edx]
c010118a: 38 d9                        	cmp	cl, bl
c010118c: 72 11                        	jb	0xc010119f <memcmp+0x2d>
c010118e: 40                           	inc	eax
c010118f: 42                           	inc	edx
c0101190: 38 cb                        	cmp	bl, cl
c0101192: 73 ee                        	jae	0xc0101182 <memcmp+0x10>
c0101194: b8 01 00 00 00               	mov	eax, 1
c0101199: eb 07                        	jmp	0xc01011a2 <memcmp+0x30>
c010119b: 31 c0                        	xor	eax, eax
c010119d: eb 03                        	jmp	0xc01011a2 <memcmp+0x30>
c010119f: 83 c8 ff                     	or	eax, -1
c01011a2: 5b                           	pop	ebx
c01011a3: 5e                           	pop	esi
c01011a4: c3                           	ret

c01011a5 <memcpy>:
c01011a5: 57                           	push	edi
c01011a6: 56                           	push	esi
c01011a7: 8b 44 24 0c                  	mov	eax, dword ptr [esp + 12]
c01011ab: 8b 74 24 10                  	mov	esi, dword ptr [esp + 16]
c01011af: 8b 4c 24 14                  	mov	ecx, dword ptr [esp + 20]
c01011b3: 89 c7                        	mov	edi, eax
c01011b5: f3 a4                        	rep		movsb	byte ptr es:[edi], byte ptr [esi]
c01011b7: 5e                           	pop	esi
c01011b8: 5f                           	pop	edi
c01011b9: c3                           	ret

c01011ba <memmove>:
c01011ba: 57                           	push	edi
c01011bb: 56                           	push	esi
c01011bc: 8b 54 24 0c                  	mov	edx, dword ptr [esp + 12]
c01011c0: 8b 74 24 10                  	mov	esi, dword ptr [esp + 16]
c01011c4: 8b 44 24 14                  	mov	eax, dword ptr [esp + 20]
c01011c8: 39 d6                        	cmp	esi, edx
c01011ca: 72 0b                        	jb	0xc01011d7 <memmove+0x1d>
c01011cc: 01 d0                        	add	eax, edx
c01011ce: 89 d7                        	mov	edi, edx
c01011d0: 39 c7                        	cmp	edi, eax
c01011d2: 74 10                        	je	0xc01011e4 <memmove+0x2a>
c01011d4: a4                           	movsb	byte ptr es:[edi], byte ptr [esi]
c01011d5: eb f9                        	jmp	0xc01011d0 <memmove+0x16>
c01011d7: 83 e8 01                     	sub	eax, 1
c01011da: 72 08                        	jb	0xc01011e4 <memmove+0x2a>
c01011dc: 8a 0c 06                     	mov	cl, byte ptr [esi + eax]
c01011df: 88 0c 02                     	mov	byte ptr [edx + eax], cl
c01011e2: eb f3                        	jmp	0xc01011d7 <memmove+0x1d>
c01011e4: 89 d0                        	mov	eax, edx
c01011e6: 5e                           	pop	esi
c01011e7: 5f                           	pop	edi
c01011e8: c3                           	ret

c01011e9 <memset>:
c01011e9: 57                           	push	edi
c01011ea: 8a 44 24 0c                  	mov	al, byte ptr [esp + 12]
c01011ee: 8b 4c 24 10                  	mov	ecx, dword ptr [esp + 16]
c01011f2: 8b 7c 24 08                  	mov	edi, dword ptr [esp + 8]
c01011f6: f3 aa                        	rep		stosb	byte ptr es:[edi], al
c01011f8: 8b 44 24 08                  	mov	eax, dword ptr [esp + 8]
c01011fc: 5f                           	pop	edi
c01011fd: c3                           	ret

c01011fe <strcat>:
c01011fe: 53                           	push	ebx
c01011ff: 8b 4c 24 08                  	mov	ecx, dword ptr [esp + 8]
c0101203: 89 ca                        	mov	edx, ecx
c0101205: 80 39 00                     	cmp	byte ptr [ecx], 0
c0101208: 74 06                        	je	0xc0101210 <strcat+0x12>
c010120a: 42                           	inc	edx
c010120b: 80 3a 00                     	cmp	byte ptr [edx], 0
c010120e: eb f8                        	jmp	0xc0101208 <strcat+0xa>
c0101210: 31 c0                        	xor	eax, eax
c0101212: 8b 5c 24 0c                  	mov	ebx, dword ptr [esp + 12]
c0101216: 8a 1c 03                     	mov	bl, byte ptr [ebx + eax]
c0101219: 88 1c 02                     	mov	byte ptr [edx + eax], bl
c010121c: 40                           	inc	eax
c010121d: 84 db                        	test	bl, bl
c010121f: 75 f1                        	jne	0xc0101212 <strcat+0x14>
c0101221: 89 c8                        	mov	eax, ecx
c0101223: 5b                           	pop	ebx
c0101224: c3                           	ret

c0101225 <strchr>:
c0101225: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101229: 8a 10                        	mov	dl, byte ptr [eax]
c010122b: 3a 54 24 08                  	cmp	dl, byte ptr [esp + 8]
c010122f: 74 07                        	je	0xc0101238 <strchr+0x13>
c0101231: 40                           	inc	eax
c0101232: 84 d2                        	test	dl, dl
c0101234: 75 f3                        	jne	0xc0101229 <strchr+0x4>
c0101236: 31 c0                        	xor	eax, eax
c0101238: c3                           	ret

c0101239 <strcmp>:
c0101239: 31 c9                        	xor	ecx, ecx
c010123b: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c010123f: 8b 54 24 08                  	mov	edx, dword ptr [esp + 8]
c0101243: 0f b6 04 08                  	movzx	eax, byte ptr [eax + ecx]
c0101247: 0f b6 14 0a                  	movzx	edx, byte ptr [edx + ecx]
c010124b: 84 c0                        	test	al, al
c010124d: 74 05                        	je	0xc0101254 <strcmp+0x1b>
c010124f: 41                           	inc	ecx
c0101250: 38 d0                        	cmp	al, dl
c0101252: 74 e7                        	je	0xc010123b <strcmp+0x2>
c0101254: 29 d0                        	sub	eax, edx
c0101256: c3                           	ret

c0101257 <strcpy>:
c0101257: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c010125b: 31 c0                        	xor	eax, eax
c010125d: 8b 4c 24 08                  	mov	ecx, dword ptr [esp + 8]
c0101261: 8a 0c 01                     	mov	cl, byte ptr [ecx + eax]
c0101264: 88 0c 02                     	mov	byte ptr [edx + eax], cl
c0101267: 40                           	inc	eax
c0101268: 84 c9                        	test	cl, cl
c010126a: 75 f1                        	jne	0xc010125d <strcpy+0x6>
c010126c: 89 d0                        	mov	eax, edx
c010126e: c3                           	ret

c010126f <strerror>:
c010126f: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c0101273: b8 21 42 10 c0               	mov	eax, 3222290977
c0101278: 83 fa 1b                     	cmp	edx, 27
c010127b: 77 07                        	ja	0xc0101284 <strerror+0x15>
c010127d: 8b 04 95 00 40 10 c0         	mov	eax, dword ptr [4*edx - 1072676864]
c0101284: c3                           	ret

c0101285 <strlen>:
c0101285: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c0101289: 31 c0                        	xor	eax, eax
c010128b: 80 3c 02 00                  	cmp	byte ptr [edx + eax], 0
c010128f: 74 03                        	je	0xc0101294 <strlen+0xf>
c0101291: 40                           	inc	eax
c0101292: eb f7                        	jmp	0xc010128b <strlen+0x6>
c0101294: c3                           	ret

c0101295 <strncpy>:
c0101295: 56                           	push	esi
c0101296: 53                           	push	ebx
c0101297: 8b 54 24 0c                  	mov	edx, dword ptr [esp + 12]
c010129b: 8b 74 24 14                  	mov	esi, dword ptr [esp + 20]
c010129f: 8b 4c 24 10                  	mov	ecx, dword ptr [esp + 16]
c01012a3: 89 d0                        	mov	eax, edx
c01012a5: 01 d6                        	add	esi, edx
c01012a7: 39 f0                        	cmp	eax, esi
c01012a9: 74 0e                        	je	0xc01012b9 <strncpy+0x24>
c01012ab: 8a 19                        	mov	bl, byte ptr [ecx]
c01012ad: 40                           	inc	eax
c01012ae: 80 fb 01                     	cmp	bl, 1
c01012b1: 88 58 ff                     	mov	byte ptr [eax - 1], bl
c01012b4: 83 d9 ff                     	sbb	ecx, -1
c01012b7: eb ee                        	jmp	0xc01012a7 <strncpy+0x12>
c01012b9: 89 d0                        	mov	eax, edx
c01012bb: 5b                           	pop	ebx
c01012bc: 5e                           	pop	esi
c01012bd: c3                           	ret

c01012be <strdup>:
c01012be: 56                           	push	esi
c01012bf: 53                           	push	ebx
c01012c0: 50                           	push	eax
c01012c1: 8b 74 24 10                  	mov	esi, dword ptr [esp + 16]
c01012c5: 56                           	push	esi
c01012c6: e8 ba ff ff ff               	call	0xc0101285 <strlen>
c01012cb: 40                           	inc	eax
c01012cc: 52                           	push	edx
c01012cd: 52                           	push	edx
c01012ce: 50                           	push	eax
c01012cf: e8 1c 0f 00 00               	call	0xc01021f0 <AllocHeap>
c01012d4: 59                           	pop	ecx
c01012d5: 89 c3                        	mov	ebx, eax
c01012d7: 58                           	pop	eax
c01012d8: 56                           	push	esi
c01012d9: 53                           	push	ebx
c01012da: e8 78 ff ff ff               	call	0xc0101257 <strcpy>
c01012df: 83 c4 14                     	add	esp, 20
c01012e2: 89 d8                        	mov	eax, ebx
c01012e4: 5b                           	pop	ebx
c01012e5: 5e                           	pop	esi
c01012e6: c3                           	ret

c01012e7 <strncmp>:
c01012e7: 53                           	push	ebx
c01012e8: 8b 44 24 08                  	mov	eax, dword ptr [esp + 8]
c01012ec: 8b 54 24 0c                  	mov	edx, dword ptr [esp + 12]
c01012f0: 8b 4c 24 10                  	mov	ecx, dword ptr [esp + 16]
c01012f4: 85 c9                        	test	ecx, ecx
c01012f6: 74 0f                        	je	0xc0101307 <strncmp+0x20>
c01012f8: 8a 18                        	mov	bl, byte ptr [eax]
c01012fa: 84 db                        	test	bl, bl
c01012fc: 74 0d                        	je	0xc010130b <strncmp+0x24>
c01012fe: 3a 1a                        	cmp	bl, byte ptr [edx]
c0101300: 75 09                        	jne	0xc010130b <strncmp+0x24>
c0101302: 40                           	inc	eax
c0101303: 42                           	inc	edx
c0101304: 49                           	dec	ecx
c0101305: eb ed                        	jmp	0xc01012f4 <strncmp+0xd>
c0101307: 31 c0                        	xor	eax, eax
c0101309: eb 08                        	jmp	0xc0101313 <strncmp+0x2c>
c010130b: 0f b6 00                     	movzx	eax, byte ptr [eax]
c010130e: 0f b6 12                     	movzx	edx, byte ptr [edx]
c0101311: 29 d0                        	sub	eax, edx
c0101313: 5b                           	pop	ebx
c0101314: c3                           	ret

c0101315 <AvlGetHeight>:
c0101315: 55                           	push	ebp
c0101316: 57                           	push	edi
c0101317: 31 ff                        	xor	edi, edi
c0101319: 56                           	push	esi
c010131a: 53                           	push	ebx
c010131b: 89 c3                        	mov	ebx, eax
c010131d: 83 ec 0c                     	sub	esp, 12
c0101320: 85 db                        	test	ebx, ebx
c0101322: 74 1f                        	je	0xc0101343 <AvlGetHeight+0x2e>
c0101324: 8b 33                        	mov	esi, dword ptr [ebx]
c0101326: 89 f0                        	mov	eax, esi
c0101328: e8 e8 ff ff ff               	call	0xc0101315 <AvlGetHeight>
c010132d: 8b 5b 04                     	mov	ebx, dword ptr [ebx + 4]
c0101330: 89 c5                        	mov	ebp, eax
c0101332: 89 d8                        	mov	eax, ebx
c0101334: e8 dc ff ff ff               	call	0xc0101315 <AvlGetHeight>
c0101339: 39 c5                        	cmp	ebp, eax
c010133b: 0f 4e f3                     	cmovle	esi, ebx
c010133e: 47                           	inc	edi
c010133f: 89 f3                        	mov	ebx, esi
c0101341: eb dd                        	jmp	0xc0101320 <AvlGetHeight+0xb>
c0101343: 83 c4 0c                     	add	esp, 12
c0101346: 89 f8                        	mov	eax, edi
c0101348: 5b                           	pop	ebx
c0101349: 5e                           	pop	esi
c010134a: 5f                           	pop	edi
c010134b: 5d                           	pop	ebp
c010134c: c3                           	ret

c010134d <AvlGet>:
c010134d: 57                           	push	edi
c010134e: 89 cf                        	mov	edi, ecx
c0101350: 56                           	push	esi
c0101351: 89 d6                        	mov	esi, edx
c0101353: 53                           	push	ebx
c0101354: 89 c3                        	mov	ebx, eax
c0101356: 85 db                        	test	ebx, ebx
c0101358: 74 29                        	je	0xc0101383 <AvlGet+0x36>
c010135a: 50                           	push	eax
c010135b: 50                           	push	eax
c010135c: 56                           	push	esi
c010135d: ff 73 08                     	push	dword ptr [ebx + 8]
c0101360: ff d7                        	call	edi
c0101362: 83 c4 10                     	add	esp, 16
c0101365: 85 c0                        	test	eax, eax
c0101367: 74 14                        	je	0xc010137d <AvlGet+0x30>
c0101369: 8b 03                        	mov	eax, dword ptr [ebx]
c010136b: 89 f9                        	mov	ecx, edi
c010136d: 89 f2                        	mov	edx, esi
c010136f: e8 d9 ff ff ff               	call	0xc010134d <AvlGet>
c0101374: 85 c0                        	test	eax, eax
c0101376: 75 09                        	jne	0xc0101381 <AvlGet+0x34>
c0101378: 8b 5b 04                     	mov	ebx, dword ptr [ebx + 4]
c010137b: eb d9                        	jmp	0xc0101356 <AvlGet+0x9>
c010137d: 89 f3                        	mov	ebx, esi
c010137f: eb 02                        	jmp	0xc0101383 <AvlGet+0x36>
c0101381: 89 c3                        	mov	ebx, eax
c0101383: 89 d8                        	mov	eax, ebx
c0101385: 5b                           	pop	ebx
c0101386: 5e                           	pop	esi
c0101387: 5f                           	pop	edi
c0101388: c3                           	ret

c0101389 <AvlContains>:
c0101389: 85 c0                        	test	eax, eax
c010138b: 74 46                        	je	0xc01013d3 <AvlContains+0x4a>
c010138d: 57                           	push	edi
c010138e: 89 cf                        	mov	edi, ecx
c0101390: 56                           	push	esi
c0101391: 89 d6                        	mov	esi, edx
c0101393: 53                           	push	ebx
c0101394: 89 c3                        	mov	ebx, eax
c0101396: 50                           	push	eax
c0101397: 50                           	push	eax
c0101398: 52                           	push	edx
c0101399: ff 73 08                     	push	dword ptr [ebx + 8]
c010139c: ff d1                        	call	ecx
c010139e: 89 c2                        	mov	edx, eax
c01013a0: b0 01                        	mov	al, 1
c01013a2: 83 c4 10                     	add	esp, 16
c01013a5: 85 d2                        	test	edx, edx
c01013a7: 74 2d                        	je	0xc01013d6 <AvlContains+0x4d>
c01013a9: 8b 03                        	mov	eax, dword ptr [ebx]
c01013ab: 89 f2                        	mov	edx, esi
c01013ad: 89 f9                        	mov	ecx, edi
c01013af: e8 d5 ff ff ff               	call	0xc0101389 <AvlContains>
c01013b4: 89 c2                        	mov	edx, eax
c01013b6: b8 01 00 00 00               	mov	eax, 1
c01013bb: 84 d2                        	test	dl, dl
c01013bd: 75 0f                        	jne	0xc01013ce <AvlContains+0x45>
c01013bf: 8b 43 04                     	mov	eax, dword ptr [ebx + 4]
c01013c2: 89 f9                        	mov	ecx, edi
c01013c4: 89 f2                        	mov	edx, esi
c01013c6: e8 be ff ff ff               	call	0xc0101389 <AvlContains>
c01013cb: 0f b6 c0                     	movzx	eax, al
c01013ce: 83 e0 01                     	and	eax, 1
c01013d1: eb 03                        	jmp	0xc01013d6 <AvlContains+0x4d>
c01013d3: 31 c0                        	xor	eax, eax
c01013d5: c3                           	ret
c01013d6: 5b                           	pop	ebx
c01013d7: 5e                           	pop	esi
c01013d8: 5f                           	pop	edi
c01013d9: c3                           	ret

c01013da <AvlDefaultComparator>:
c01013da: 8b 54 24 08                  	mov	edx, dword ptr [esp + 8]
c01013de: 31 c0                        	xor	eax, eax
c01013e0: 39 54 24 04                  	cmp	dword ptr [esp + 4], edx
c01013e4: 74 05                        	je	0xc01013eb <AvlDefaultComparator+0x11>
c01013e6: 19 c0                        	sbb	eax, eax
c01013e8: 83 c8 01                     	or	eax, 1
c01013eb: c3                           	ret

c01013ec <AvlDestroy>:
c01013ec: 85 c0                        	test	eax, eax
c01013ee: 74 36                        	je	0xc0101426 <AvlDestroy+0x3a>
c01013f0: 56                           	push	esi
c01013f1: 89 d6                        	mov	esi, edx
c01013f3: 53                           	push	ebx
c01013f4: 89 c3                        	mov	ebx, eax
c01013f6: 51                           	push	ecx
c01013f7: 8b 00                        	mov	eax, dword ptr [eax]
c01013f9: e8 ee ff ff ff               	call	0xc01013ec <AvlDestroy>
c01013fe: 8b 43 04                     	mov	eax, dword ptr [ebx + 4]
c0101401: 89 f2                        	mov	edx, esi
c0101403: e8 e4 ff ff ff               	call	0xc01013ec <AvlDestroy>
c0101408: 85 f6                        	test	esi, esi
c010140a: 74 0b                        	je	0xc0101417 <AvlDestroy+0x2b>
c010140c: 83 ec 0c                     	sub	esp, 12
c010140f: ff 73 08                     	push	dword ptr [ebx + 8]
c0101412: ff d6                        	call	esi
c0101414: 83 c4 10                     	add	esp, 16
c0101417: 83 ec 0c                     	sub	esp, 12
c010141a: 53                           	push	ebx
c010141b: e8 f4 0d 00 00               	call	0xc0102214 <FreeHeap>
c0101420: 83 c4 14                     	add	esp, 20
c0101423: 5b                           	pop	ebx
c0101424: 5e                           	pop	esi
c0101425: c3                           	ret
c0101426: c3                           	ret

c0101427 <AvlGetBalance>:
c0101427: 85 c0                        	test	eax, eax
c0101429: 74 20                        	je	0xc010144b <AvlGetBalance+0x24>
c010142b: 83 ec 0c                     	sub	esp, 12
c010142e: 89 c1                        	mov	ecx, eax
c0101430: 8b 00                        	mov	eax, dword ptr [eax]
c0101432: e8 de fe ff ff               	call	0xc0101315 <AvlGetHeight>
c0101437: 89 c2                        	mov	edx, eax
c0101439: 8b 41 04                     	mov	eax, dword ptr [ecx + 4]
c010143c: e8 d4 fe ff ff               	call	0xc0101315 <AvlGetHeight>
c0101441: 83 c4 0c                     	add	esp, 12
c0101444: 89 c1                        	mov	ecx, eax
c0101446: 89 d0                        	mov	eax, edx
c0101448: 29 c8                        	sub	eax, ecx
c010144a: c3                           	ret
c010144b: 31 c0                        	xor	eax, eax
c010144d: c3                           	ret

c010144e <AvlBalance>:
c010144e: 56                           	push	esi
c010144f: 53                           	push	ebx
c0101450: 89 c3                        	mov	ebx, eax
c0101452: 51                           	push	ecx
c0101453: 85 c0                        	test	eax, eax
c0101455: 74 59                        	je	0xc01014b0 <AvlBalance+0x62>
c0101457: e8 cb ff ff ff               	call	0xc0101427 <AvlGetBalance>
c010145c: 83 f8 fe                     	cmp	eax, -2
c010145f: 75 26                        	jne	0xc0101487 <AvlBalance+0x39>
c0101461: 8b 73 04                     	mov	esi, dword ptr [ebx + 4]
c0101464: 89 f0                        	mov	eax, esi
c0101466: e8 bc ff ff ff               	call	0xc0101427 <AvlGetBalance>
c010146b: 48                           	dec	eax
c010146c: 75 0d                        	jne	0xc010147b <AvlBalance+0x2d>
c010146e: 8b 06                        	mov	eax, dword ptr [esi]
c0101470: 8b 50 04                     	mov	edx, dword ptr [eax + 4]
c0101473: 89 70 04                     	mov	dword ptr [eax + 4], esi
c0101476: 89 16                        	mov	dword ptr [esi], edx
c0101478: 89 43 04                     	mov	dword ptr [ebx + 4], eax
c010147b: 8b 43 04                     	mov	eax, dword ptr [ebx + 4]
c010147e: 8b 10                        	mov	edx, dword ptr [eax]
c0101480: 89 18                        	mov	dword ptr [eax], ebx
c0101482: 89 53 04                     	mov	dword ptr [ebx + 4], edx
c0101485: eb 27                        	jmp	0xc01014ae <AvlBalance+0x60>
c0101487: 83 f8 02                     	cmp	eax, 2
c010148a: 75 24                        	jne	0xc01014b0 <AvlBalance+0x62>
c010148c: 8b 33                        	mov	esi, dword ptr [ebx]
c010148e: 89 f0                        	mov	eax, esi
c0101490: e8 92 ff ff ff               	call	0xc0101427 <AvlGetBalance>
c0101495: 40                           	inc	eax
c0101496: 75 0c                        	jne	0xc01014a4 <AvlBalance+0x56>
c0101498: 8b 46 04                     	mov	eax, dword ptr [esi + 4]
c010149b: 8b 10                        	mov	edx, dword ptr [eax]
c010149d: 89 30                        	mov	dword ptr [eax], esi
c010149f: 89 56 04                     	mov	dword ptr [esi + 4], edx
c01014a2: 89 03                        	mov	dword ptr [ebx], eax
c01014a4: 8b 03                        	mov	eax, dword ptr [ebx]
c01014a6: 8b 50 04                     	mov	edx, dword ptr [eax + 4]
c01014a9: 89 58 04                     	mov	dword ptr [eax + 4], ebx
c01014ac: 89 13                        	mov	dword ptr [ebx], edx
c01014ae: 89 c3                        	mov	ebx, eax
c01014b0: 89 d8                        	mov	eax, ebx
c01014b2: 5a                           	pop	edx
c01014b3: 5b                           	pop	ebx
c01014b4: 5e                           	pop	esi
c01014b5: c3                           	ret

c01014b6 <AvlDelete>:
c01014b6: 85 c0                        	test	eax, eax
c01014b8: 0f 84 96 00 00 00            	je	0xc0101554 <AvlDelete+0x9e>
c01014be: 57                           	push	edi
c01014bf: 56                           	push	esi
c01014c0: 89 d6                        	mov	esi, edx
c01014c2: 53                           	push	ebx
c01014c3: 89 c3                        	mov	ebx, eax
c01014c5: 83 ec 18                     	sub	esp, 24
c01014c8: ff 70 08                     	push	dword ptr [eax + 8]
c01014cb: 52                           	push	edx
c01014cc: 89 4c 24 1c                  	mov	dword ptr [esp + 28], ecx
c01014d0: ff d1                        	call	ecx
c01014d2: 83 c4 10                     	add	esp, 16
c01014d5: 8b 4c 24 0c                  	mov	ecx, dword ptr [esp + 12]
c01014d9: 85 c0                        	test	eax, eax
c01014db: 79 0d                        	jns	0xc01014ea <AvlDelete+0x34>
c01014dd: 8b 03                        	mov	eax, dword ptr [ebx]
c01014df: 89 f2                        	mov	edx, esi
c01014e1: e8 d0 ff ff ff               	call	0xc01014b6 <AvlDelete>
c01014e6: 89 03                        	mov	dword ptr [ebx], eax
c01014e8: eb 24                        	jmp	0xc010150e <AvlDelete+0x58>
c01014ea: 50                           	push	eax
c01014eb: 50                           	push	eax
c01014ec: ff 73 08                     	push	dword ptr [ebx + 8]
c01014ef: 56                           	push	esi
c01014f0: 89 4c 24 1c                  	mov	dword ptr [esp + 28], ecx
c01014f4: ff d1                        	call	ecx
c01014f6: 83 c4 10                     	add	esp, 16
c01014f9: 8b 4c 24 0c                  	mov	ecx, dword ptr [esp + 12]
c01014fd: 85 c0                        	test	eax, eax
c01014ff: 8b 43 04                     	mov	eax, dword ptr [ebx + 4]
c0101502: 7e 10                        	jle	0xc0101514 <AvlDelete+0x5e>
c0101504: 89 f2                        	mov	edx, esi
c0101506: e8 ab ff ff ff               	call	0xc01014b6 <AvlDelete>
c010150b: 89 43 04                     	mov	dword ptr [ebx + 4], eax
c010150e: 89 de                        	mov	esi, ebx
c0101510: 31 db                        	xor	ebx, ebx
c0101512: eb 2a                        	jmp	0xc010153e <AvlDelete+0x88>
c0101514: 8b 33                        	mov	esi, dword ptr [ebx]
c0101516: 85 f6                        	test	esi, esi
c0101518: 74 22                        	je	0xc010153c <AvlDelete+0x86>
c010151a: 85 c0                        	test	eax, eax
c010151c: 74 20                        	je	0xc010153e <AvlDelete+0x88>
c010151e: 89 c2                        	mov	edx, eax
c0101520: 89 d7                        	mov	edi, edx
c0101522: 8b 12                        	mov	edx, dword ptr [edx]
c0101524: 85 d2                        	test	edx, edx
c0101526: 75 f8                        	jne	0xc0101520 <AvlDelete+0x6a>
c0101528: 8b 57 08                     	mov	edx, dword ptr [edi + 8]
c010152b: 89 de                        	mov	esi, ebx
c010152d: 89 53 08                     	mov	dword ptr [ebx + 8], edx
c0101530: e8 81 ff ff ff               	call	0xc01014b6 <AvlDelete>
c0101535: 89 43 04                     	mov	dword ptr [ebx + 4], eax
c0101538: 89 fb                        	mov	ebx, edi
c010153a: eb 02                        	jmp	0xc010153e <AvlDelete+0x88>
c010153c: 89 c6                        	mov	esi, eax
c010153e: 83 ec 0c                     	sub	esp, 12
c0101541: 53                           	push	ebx
c0101542: e8 cd 0c 00 00               	call	0xc0102214 <FreeHeap>
c0101547: 83 c4 20                     	add	esp, 32
c010154a: 89 f0                        	mov	eax, esi
c010154c: 5b                           	pop	ebx
c010154d: 5e                           	pop	esi
c010154e: 5f                           	pop	edi
c010154f: e9 fa fe ff ff               	jmp	0xc010144e <AvlBalance>
c0101554: 31 c0                        	xor	eax, eax
c0101556: c3                           	ret

c0101557 <AvlInsert>:
c0101557: 55                           	push	ebp
c0101558: 57                           	push	edi
c0101559: 89 d7                        	mov	edi, edx
c010155b: 56                           	push	esi
c010155c: 53                           	push	ebx
c010155d: 89 c3                        	mov	ebx, eax
c010155f: 83 ec 24                     	sub	esp, 36
c0101562: ff 70 08                     	push	dword ptr [eax + 8]
c0101565: 52                           	push	edx
c0101566: 89 4c 24 1c                  	mov	dword ptr [esp + 28], ecx
c010156a: ff d1                        	call	ecx
c010156c: 83 c4 10                     	add	esp, 16
c010156f: 8b 4c 24 0c                  	mov	ecx, dword ptr [esp + 12]
c0101573: 85 c0                        	test	eax, eax
c0101575: 79 41                        	jns	0xc01015b8 <AvlInsert+0x61>
c0101577: 8b 03                        	mov	eax, dword ptr [ebx]
c0101579: 85 c0                        	test	eax, eax
c010157b: 75 1b                        	jne	0xc0101598 <AvlInsert+0x41>
c010157d: 83 ec 0c                     	sub	esp, 12
c0101580: 6a 0c                        	push	12
c0101582: e8 69 0c 00 00               	call	0xc01021f0 <AllocHeap>
c0101587: 31 d2                        	xor	edx, edx
c0101589: 83 c4 10                     	add	esp, 16
c010158c: 89 10                        	mov	dword ptr [eax], edx
c010158e: 89 c6                        	mov	esi, eax
c0101590: 89 50 04                     	mov	dword ptr [eax + 4], edx
c0101593: 89 78 08                     	mov	dword ptr [eax + 8], edi
c0101596: eb 09                        	jmp	0xc01015a1 <AvlInsert+0x4a>
c0101598: 89 fa                        	mov	edx, edi
c010159a: e8 b8 ff ff ff               	call	0xc0101557 <AvlInsert>
c010159f: 89 c6                        	mov	esi, eax
c01015a1: 83 ec 0c                     	sub	esp, 12
c01015a4: 8b 6b 04                     	mov	ebp, dword ptr [ebx + 4]
c01015a7: 8b 7b 08                     	mov	edi, dword ptr [ebx + 8]
c01015aa: 6a 0c                        	push	12
c01015ac: e8 3f 0c 00 00               	call	0xc01021f0 <AllocHeap>
c01015b1: 89 30                        	mov	dword ptr [eax], esi
c01015b3: 89 68 04                     	mov	dword ptr [eax + 4], ebp
c01015b6: eb 3f                        	jmp	0xc01015f7 <AvlInsert+0xa0>
c01015b8: 8b 43 04                     	mov	eax, dword ptr [ebx + 4]
c01015bb: 85 c0                        	test	eax, eax
c01015bd: 75 1b                        	jne	0xc01015da <AvlInsert+0x83>
c01015bf: 83 ec 0c                     	sub	esp, 12
c01015c2: 6a 0c                        	push	12
c01015c4: e8 27 0c 00 00               	call	0xc01021f0 <AllocHeap>
c01015c9: 83 c4 10                     	add	esp, 16
c01015cc: 89 c6                        	mov	esi, eax
c01015ce: 31 c0                        	xor	eax, eax
c01015d0: 89 06                        	mov	dword ptr [esi], eax
c01015d2: 89 46 04                     	mov	dword ptr [esi + 4], eax
c01015d5: 89 7e 08                     	mov	dword ptr [esi + 8], edi
c01015d8: eb 09                        	jmp	0xc01015e3 <AvlInsert+0x8c>
c01015da: 89 fa                        	mov	edx, edi
c01015dc: e8 76 ff ff ff               	call	0xc0101557 <AvlInsert>
c01015e1: 89 c6                        	mov	esi, eax
c01015e3: 83 ec 0c                     	sub	esp, 12
c01015e6: 8b 2b                        	mov	ebp, dword ptr [ebx]
c01015e8: 8b 7b 08                     	mov	edi, dword ptr [ebx + 8]
c01015eb: 6a 0c                        	push	12
c01015ed: e8 fe 0b 00 00               	call	0xc01021f0 <AllocHeap>
c01015f2: 89 28                        	mov	dword ptr [eax], ebp
c01015f4: 89 70 04                     	mov	dword ptr [eax + 4], esi
c01015f7: 83 c4 10                     	add	esp, 16
c01015fa: 89 78 08                     	mov	dword ptr [eax + 8], edi
c01015fd: 89 44 24 0c                  	mov	dword ptr [esp + 12], eax
c0101601: 83 ec 0c                     	sub	esp, 12
c0101604: 53                           	push	ebx
c0101605: e8 0a 0c 00 00               	call	0xc0102214 <FreeHeap>
c010160a: 8b 44 24 1c                  	mov	eax, dword ptr [esp + 28]
c010160e: 83 c4 2c                     	add	esp, 44
c0101611: 5b                           	pop	ebx
c0101612: 5e                           	pop	esi
c0101613: 5f                           	pop	edi
c0101614: 5d                           	pop	ebp
c0101615: e9 34 fe ff ff               	jmp	0xc010144e <AvlBalance>

c010161a <AvlTreeCreate>:
c010161a: 83 ec 18                     	sub	esp, 24
c010161d: 6a 10                        	push	16
c010161f: e8 cc 0b 00 00               	call	0xc01021f0 <AllocHeap>
c0101624: 31 d2                        	xor	edx, edx
c0101626: 89 10                        	mov	dword ptr [eax], edx
c0101628: 89 50 04                     	mov	dword ptr [eax + 4], edx
c010162b: 89 50 08                     	mov	dword ptr [eax + 8], edx
c010162e: c7 40 0c da 13 10 c0         	mov	dword ptr [eax + 12], 3222279130
c0101635: 83 c4 1c                     	add	esp, 28
c0101638: c3                           	ret

c0101639 <AvlTreeSetDeletionHandler>:
c0101639: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c010163d: 8b 4c 24 08                  	mov	ecx, dword ptr [esp + 8]
c0101641: 8b 42 08                     	mov	eax, dword ptr [edx + 8]
c0101644: 89 4a 08                     	mov	dword ptr [edx + 8], ecx
c0101647: c3                           	ret

c0101648 <AvlTreeSetComparator>:
c0101648: 8b 54 24 04                  	mov	edx, dword ptr [esp + 4]
c010164c: 8b 4c 24 08                  	mov	ecx, dword ptr [esp + 8]
c0101650: 8b 42 0c                     	mov	eax, dword ptr [edx + 12]
c0101653: 89 4a 0c                     	mov	dword ptr [edx + 12], ecx
c0101656: c3                           	ret

c0101657 <AvlTreeInsert>:
c0101657: 53                           	push	ebx
c0101658: 83 ec 08                     	sub	esp, 8
c010165b: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c010165f: 8b 54 24 14                  	mov	edx, dword ptr [esp + 20]
c0101663: 8b 4b 0c                     	mov	ecx, dword ptr [ebx + 12]
c0101666: 8b 43 04                     	mov	eax, dword ptr [ebx + 4]
c0101669: e8 e9 fe ff ff               	call	0xc0101557 <AvlInsert>
c010166e: ff 03                        	inc	dword ptr [ebx]
c0101670: 89 43 04                     	mov	dword ptr [ebx + 4], eax
c0101673: 83 c4 08                     	add	esp, 8
c0101676: 5b                           	pop	ebx
c0101677: c3                           	ret

c0101678 <AvlTreeDelete>:
c0101678: 53                           	push	ebx
c0101679: 83 ec 08                     	sub	esp, 8
c010167c: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c0101680: 8b 54 24 14                  	mov	edx, dword ptr [esp + 20]
c0101684: 8b 4b 0c                     	mov	ecx, dword ptr [ebx + 12]
c0101687: 8b 43 04                     	mov	eax, dword ptr [ebx + 4]
c010168a: e8 27 fe ff ff               	call	0xc01014b6 <AvlDelete>
c010168f: ff 0b                        	dec	dword ptr [ebx]
c0101691: 89 43 04                     	mov	dword ptr [ebx + 4], eax
c0101694: 83 c4 08                     	add	esp, 8
c0101697: 5b                           	pop	ebx
c0101698: c3                           	ret

c0101699 <AvlTreeContains>:
c0101699: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c010169d: 8b 54 24 08                  	mov	edx, dword ptr [esp + 8]
c01016a1: 8b 48 0c                     	mov	ecx, dword ptr [eax + 12]
c01016a4: 8b 40 04                     	mov	eax, dword ptr [eax + 4]
c01016a7: e9 dd fc ff ff               	jmp	0xc0101389 <AvlContains>

c01016ac <AvlTreeGet>:
c01016ac: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01016b0: 8b 54 24 08                  	mov	edx, dword ptr [esp + 8]
c01016b4: 8b 48 0c                     	mov	ecx, dword ptr [eax + 12]
c01016b7: 8b 40 04                     	mov	eax, dword ptr [eax + 4]
c01016ba: e9 8e fc ff ff               	jmp	0xc010134d <AvlGet>

c01016bf <AvlTreeSize>:
c01016bf: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01016c3: 8b 00                        	mov	eax, dword ptr [eax]
c01016c5: c3                           	ret

c01016c6 <AvlTreeDestroy>:
c01016c6: 53                           	push	ebx
c01016c7: 83 ec 08                     	sub	esp, 8
c01016ca: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c01016ce: 8b 53 08                     	mov	edx, dword ptr [ebx + 8]
c01016d1: 8b 43 04                     	mov	eax, dword ptr [ebx + 4]
c01016d4: e8 13 fd ff ff               	call	0xc01013ec <AvlDestroy>
c01016d9: 89 5c 24 10                  	mov	dword ptr [esp + 16], ebx
c01016dd: 83 c4 08                     	add	esp, 8
c01016e0: 5b                           	pop	ebx
c01016e1: e9 2e 0b 00 00               	jmp	0xc0102214 <FreeHeap>

c01016e6 <AvlTreeGetRootNode>:
c01016e6: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01016ea: 8b 40 04                     	mov	eax, dword ptr [eax + 4]
c01016ed: c3                           	ret

c01016ee <AvlTreeGetLeft>:
c01016ee: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01016f2: 85 c0                        	test	eax, eax
c01016f4: 74 02                        	je	0xc01016f8 <AvlTreeGetLeft+0xa>
c01016f6: 8b 00                        	mov	eax, dword ptr [eax]
c01016f8: c3                           	ret

c01016f9 <AvlTreeGetRight>:
c01016f9: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01016fd: 85 c0                        	test	eax, eax
c01016ff: 74 03                        	je	0xc0101704 <AvlTreeGetRight+0xb>
c0101701: 8b 40 04                     	mov	eax, dword ptr [eax + 4]
c0101704: c3                           	ret

c0101705 <AvlTreeGetData>:
c0101705: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101709: 85 c0                        	test	eax, eax
c010170b: 74 03                        	je	0xc0101710 <AvlTreeGetData+0xb>
c010170d: 8b 40 08                     	mov	eax, dword ptr [eax + 8]
c0101710: c3                           	ret

c0101711 <SwapElements>:
c0101711: 55                           	push	ebp
c0101712: 57                           	push	edi
c0101713: 56                           	push	esi
c0101714: 53                           	push	ebx
c0101715: 89 c3                        	mov	ebx, eax
c0101717: 8b 40 0c                     	mov	eax, dword ptr [eax + 12]
c010171a: 0f af d0                     	imul	edx, eax
c010171d: 0f af c1                     	imul	eax, ecx
c0101720: 31 c9                        	xor	ecx, ecx
c0101722: c1 e2 02                     	shl	edx, 2
c0101725: c1 e0 02                     	shl	eax, 2
c0101728: 39 4b 0c                     	cmp	dword ptr [ebx + 12], ecx
c010172b: 7e 1c                        	jle	0xc0101749 <SwapElements+0x38>
c010172d: 8b 7b 14                     	mov	edi, dword ptr [ebx + 20]
c0101730: 41                           	inc	ecx
c0101731: 8d 34 17                     	lea	esi, [edi + edx]
c0101734: 8b 3c 07                     	mov	edi, dword ptr [edi + eax]
c0101737: 83 c2 04                     	add	edx, 4
c010173a: 8b 2e                        	mov	ebp, dword ptr [esi]
c010173c: 89 3e                        	mov	dword ptr [esi], edi
c010173e: 8b 73 14                     	mov	esi, dword ptr [ebx + 20]
c0101741: 89 2c 06                     	mov	dword ptr [esi + eax], ebp
c0101744: 83 c0 04                     	add	eax, 4
c0101747: eb df                        	jmp	0xc0101728 <SwapElements+0x17>
c0101749: 5b                           	pop	ebx
c010174a: 5e                           	pop	esi
c010174b: 5f                           	pop	edi
c010174c: 5d                           	pop	ebp
c010174d: c3                           	ret

c010174e <PriorityQueueCreate>:
c010174e: 55                           	push	ebp
c010174f: 57                           	push	edi
c0101750: 56                           	push	esi
c0101751: 53                           	push	ebx
c0101752: 83 ec 18                     	sub	esp, 24
c0101755: 8b 7c 24 2c                  	mov	edi, dword ptr [esp + 44]
c0101759: 8b 6c 24 30                  	mov	ebp, dword ptr [esp + 48]
c010175d: 8b 74 24 34                  	mov	esi, dword ptr [esp + 52]
c0101761: 6a 18                        	push	24
c0101763: e8 88 0a 00 00               	call	0xc01021f0 <AllocHeap>
c0101768: 89 c3                        	mov	ebx, eax
c010176a: 89 38                        	mov	dword ptr [eax], edi
c010176c: 31 c0                        	xor	eax, eax
c010176e: 89 73 08                     	mov	dword ptr [ebx + 8], esi
c0101771: 83 c6 03                     	add	esi, 3
c0101774: c1 ee 02                     	shr	esi, 2
c0101777: 89 43 04                     	mov	dword ptr [ebx + 4], eax
c010177a: 89 e8                        	mov	eax, ebp
c010177c: 46                           	inc	esi
c010177d: 88 43 10                     	mov	byte ptr [ebx + 16], al
c0101780: 0f af fe                     	imul	edi, esi
c0101783: 89 73 0c                     	mov	dword ptr [ebx + 12], esi
c0101786: c1 e7 02                     	shl	edi, 2
c0101789: 89 3c 24                     	mov	dword ptr [esp], edi
c010178c: e8 5f 0a 00 00               	call	0xc01021f0 <AllocHeap>
c0101791: 89 43 14                     	mov	dword ptr [ebx + 20], eax
c0101794: 83 c4 1c                     	add	esp, 28
c0101797: 89 d8                        	mov	eax, ebx
c0101799: 5b                           	pop	ebx
c010179a: 5e                           	pop	esi
c010179b: 5f                           	pop	edi
c010179c: 5d                           	pop	ebp
c010179d: c3                           	ret

c010179e <PriorityQueueInsert>:
c010179e: 55                           	push	ebp
c010179f: 57                           	push	edi
c01017a0: 56                           	push	esi
c01017a1: 53                           	push	ebx
c01017a2: 83 ec 0c                     	sub	esp, 12
c01017a5: 8b 5c 24 20                  	mov	ebx, dword ptr [esp + 32]
c01017a9: 8b 73 04                     	mov	esi, dword ptr [ebx + 4]
c01017ac: 3b 33                        	cmp	esi, dword ptr [ebx]
c01017ae: 75 0e                        	jne	0xc01017be <PriorityQueueInsert+0x20>
c01017b0: 52                           	push	edx
c01017b1: 52                           	push	edx
c01017b2: 68 90 44 10 c0               	push	3222291600
c01017b7: 6a 0e                        	push	14
c01017b9: e8 34 1a 00 00               	call	0xc01031f2 <PanicEx>
c01017be: 8b 53 0c                     	mov	edx, dword ptr [ebx + 12]
c01017c1: 8d 46 01                     	lea	eax, [esi + 1]
c01017c4: 8b 4c 24 28                  	mov	ecx, dword ptr [esp + 40]
c01017c8: 89 43 04                     	mov	dword ptr [ebx + 4], eax
c01017cb: 8b 43 14                     	mov	eax, dword ptr [ebx + 20]
c01017ce: 0f af d6                     	imul	edx, esi
c01017d1: 89 0c 90                     	mov	dword ptr [eax + 4*edx], ecx
c01017d4: 50                           	push	eax
c01017d5: ff 73 08                     	push	dword ptr [ebx + 8]
c01017d8: ff 74 24 2c                  	push	dword ptr [esp + 44]
c01017dc: 8b 53 0c                     	mov	edx, dword ptr [ebx + 12]
c01017df: 8b 43 14                     	mov	eax, dword ptr [ebx + 20]
c01017e2: 0f af d6                     	imul	edx, esi
c01017e5: 8d 44 90 04                  	lea	eax, [eax + 4*edx + 4]
c01017e9: 50                           	push	eax
c01017ea: e8 b6 f9 ff ff               	call	0xc01011a5 <memcpy>
c01017ef: 83 c4 10                     	add	esp, 16
c01017f2: 85 f6                        	test	esi, esi
c01017f4: 74 32                        	je	0xc0101828 <PriorityQueueInsert+0x8a>
c01017f6: 8d 46 ff                     	lea	eax, [esi - 1]
c01017f9: bd 02 00 00 00               	mov	ebp, 2
c01017fe: 8b 4b 14                     	mov	ecx, dword ptr [ebx + 20]
c0101801: 99                           	cdq
c0101802: f7 fd                        	idiv	ebp
c0101804: 89 c7                        	mov	edi, eax
c0101806: 8b 43 0c                     	mov	eax, dword ptr [ebx + 12]
c0101809: 89 fa                        	mov	edx, edi
c010180b: 0f af d0                     	imul	edx, eax
c010180e: 0f af c6                     	imul	eax, esi
c0101811: 8b 04 81                     	mov	eax, dword ptr [ecx + 4*eax]
c0101814: 39 04 91                     	cmp	dword ptr [ecx + 4*edx], eax
c0101817: 7d 0f                        	jge	0xc0101828 <PriorityQueueInsert+0x8a>
c0101819: 89 f1                        	mov	ecx, esi
c010181b: 89 fa                        	mov	edx, edi
c010181d: 89 d8                        	mov	eax, ebx
c010181f: 89 fe                        	mov	esi, edi
c0101821: e8 eb fe ff ff               	call	0xc0101711 <SwapElements>
c0101826: eb ca                        	jmp	0xc01017f2 <PriorityQueueInsert+0x54>
c0101828: 83 c4 0c                     	add	esp, 12
c010182b: 5b                           	pop	ebx
c010182c: 5e                           	pop	esi
c010182d: 5f                           	pop	edi
c010182e: 5d                           	pop	ebp
c010182f: c3                           	ret

c0101830 <PriorityQueuePeek>:
c0101830: 83 ec 0c                     	sub	esp, 12
c0101833: 8b 44 24 14                  	mov	eax, dword ptr [esp + 20]
c0101837: 8b 54 24 10                  	mov	edx, dword ptr [esp + 16]
c010183b: 83 78 04 00                  	cmp	dword ptr [eax + 4], 0
c010183f: 75 0e                        	jne	0xc010184f <PriorityQueuePeek+0x1f>
c0101841: 50                           	push	eax
c0101842: 50                           	push	eax
c0101843: 68 a8 44 10 c0               	push	3222291624
c0101848: 6a 0e                        	push	14
c010184a: e8 a3 19 00 00               	call	0xc01031f2 <PanicEx>
c010184f: 8b 40 14                     	mov	eax, dword ptr [eax + 20]
c0101852: 8b 08                        	mov	ecx, dword ptr [eax]
c0101854: 83 c0 04                     	add	eax, 4
c0101857: 89 42 04                     	mov	dword ptr [edx + 4], eax
c010185a: 89 d0                        	mov	eax, edx
c010185c: 89 0a                        	mov	dword ptr [edx], ecx
c010185e: 83 c4 0c                     	add	esp, 12
c0101861: c2 04 00                     	ret	4

c0101864 <PriorityQueuePop>:
c0101864: 55                           	push	ebp
c0101865: 31 d2                        	xor	edx, edx
c0101867: 57                           	push	edi
c0101868: 56                           	push	esi
c0101869: 53                           	push	ebx
c010186a: 83 ec 1c                     	sub	esp, 28
c010186d: 8b 5c 24 30                  	mov	ebx, dword ptr [esp + 48]
c0101871: 83 7b 04 00                  	cmp	dword ptr [ebx + 4], 0
c0101875: 75 0e                        	jne	0xc0101885 <PriorityQueuePop+0x21>
c0101877: 50                           	push	eax
c0101878: 50                           	push	eax
c0101879: 68 bd 44 10 c0               	push	3222291645
c010187e: 6a 0e                        	push	14
c0101880: e8 6d 19 00 00               	call	0xc01031f2 <PanicEx>
c0101885: 8b 43 0c                     	mov	eax, dword ptr [ebx + 12]
c0101888: 8b 4b 04                     	mov	ecx, dword ptr [ebx + 4]
c010188b: 39 d0                        	cmp	eax, edx
c010188d: 7e 11                        	jle	0xc01018a0 <PriorityQueuePop+0x3c>
c010188f: 0f af c1                     	imul	eax, ecx
c0101892: 8b 73 14                     	mov	esi, dword ptr [ebx + 20]
c0101895: 01 d0                        	add	eax, edx
c0101897: 8b 04 86                     	mov	eax, dword ptr [esi + 4*eax]
c010189a: 89 04 96                     	mov	dword ptr [esi + 4*edx], eax
c010189d: 42                           	inc	edx
c010189e: eb e5                        	jmp	0xc0101885 <PriorityQueuePop+0x21>
c01018a0: 49                           	dec	ecx
c01018a1: 31 d2                        	xor	edx, edx
c01018a3: 89 4b 04                     	mov	dword ptr [ebx + 4], ecx
c01018a6: 8d 34 12                     	lea	esi, [edx + edx]
c01018a9: 8b 4b 04                     	mov	ecx, dword ptr [ebx + 4]
c01018ac: 8d 46 01                     	lea	eax, [esi + 1]
c01018af: 83 c6 02                     	add	esi, 2
c01018b2: 39 c8                        	cmp	eax, ecx
c01018b4: 7d 42                        	jge	0xc01018f8 <PriorityQueuePop+0x94>
c01018b6: 8b 7b 0c                     	mov	edi, dword ptr [ebx + 12]
c01018b9: 89 c5                        	mov	ebp, eax
c01018bb: 0f af ef                     	imul	ebp, edi
c01018be: 89 7c 24 08                  	mov	dword ptr [esp + 8], edi
c01018c2: 8b 7b 14                     	mov	edi, dword ptr [ebx + 20]
c01018c5: 8b 3c af                     	mov	edi, dword ptr [edi + 4*ebp]
c01018c8: 8b 6b 14                     	mov	ebp, dword ptr [ebx + 20]
c01018cb: 89 7c 24 0c                  	mov	dword ptr [esp + 12], edi
c01018cf: 8b 7c 24 08                  	mov	edi, dword ptr [esp + 8]
c01018d3: 0f af fa                     	imul	edi, edx
c01018d6: 80 7b 10 00                  	cmp	byte ptr [ebx + 16], 0
c01018da: 8b 7c bd 00                  	mov	edi, dword ptr [ebp + 4*edi]
c01018de: 74 08                        	je	0xc01018e8 <PriorityQueuePop+0x84>
c01018e0: 39 7c 24 0c                  	cmp	dword ptr [esp + 12], edi
c01018e4: 7f 0a                        	jg	0xc01018f0 <PriorityQueuePop+0x8c>
c01018e6: eb 6a                        	jmp	0xc0101952 <PriorityQueuePop+0xee>
c01018e8: 39 7c 24 0c                  	cmp	dword ptr [esp + 12], edi
c01018ec: 7c 5e                        	jl	0xc010194c <PriorityQueuePop+0xe8>
c01018ee: eb 2c                        	jmp	0xc010191c <PriorityQueuePop+0xb8>
c01018f0: 39 ce                        	cmp	esi, ecx
c01018f2: 7c 10                        	jl	0xc0101904 <PriorityQueuePop+0xa0>
c01018f4: 89 c6                        	mov	esi, eax
c01018f6: eb 40                        	jmp	0xc0101938 <PriorityQueuePop+0xd4>
c01018f8: 39 ce                        	cmp	esi, ecx
c01018fa: 7d 5e                        	jge	0xc010195a <PriorityQueuePop+0xf6>
c01018fc: 80 7b 10 00                  	cmp	byte ptr [ebx + 16], 0
c0101900: 89 d0                        	mov	eax, edx
c0101902: 74 1e                        	je	0xc0101922 <PriorityQueuePop+0xbe>
c0101904: 8b 4b 0c                     	mov	ecx, dword ptr [ebx + 12]
c0101907: 89 f5                        	mov	ebp, esi
c0101909: 8b 7b 14                     	mov	edi, dword ptr [ebx + 20]
c010190c: 0f af e9                     	imul	ebp, ecx
c010190f: 0f af c8                     	imul	ecx, eax
c0101912: 8b 0c 8f                     	mov	ecx, dword ptr [edi + 4*ecx]
c0101915: 39 0c af                     	cmp	dword ptr [edi + 4*ebp], ecx
c0101918: 7f 1e                        	jg	0xc0101938 <PriorityQueuePop+0xd4>
c010191a: eb d8                        	jmp	0xc01018f4 <PriorityQueuePop+0x90>
c010191c: 39 ce                        	cmp	esi, ecx
c010191e: 7d 3a                        	jge	0xc010195a <PriorityQueuePop+0xf6>
c0101920: 89 d0                        	mov	eax, edx
c0101922: 8b 4b 0c                     	mov	ecx, dword ptr [ebx + 12]
c0101925: 89 f5                        	mov	ebp, esi
c0101927: 8b 7b 14                     	mov	edi, dword ptr [ebx + 20]
c010192a: 0f af e9                     	imul	ebp, ecx
c010192d: 0f af c8                     	imul	ecx, eax
c0101930: 8b 0c 8f                     	mov	ecx, dword ptr [edi + 4*ecx]
c0101933: 39 0c af                     	cmp	dword ptr [edi + 4*ebp], ecx
c0101936: 7d bc                        	jge	0xc01018f4 <PriorityQueuePop+0x90>
c0101938: 39 f2                        	cmp	edx, esi
c010193a: 74 1e                        	je	0xc010195a <PriorityQueuePop+0xf6>
c010193c: 89 f1                        	mov	ecx, esi
c010193e: 89 d8                        	mov	eax, ebx
c0101940: e8 cc fd ff ff               	call	0xc0101711 <SwapElements>
c0101945: 89 f2                        	mov	edx, esi
c0101947: e9 5a ff ff ff               	jmp	0xc01018a6 <PriorityQueuePop+0x42>
c010194c: 39 ce                        	cmp	esi, ecx
c010194e: 7c d2                        	jl	0xc0101922 <PriorityQueuePop+0xbe>
c0101950: eb a2                        	jmp	0xc01018f4 <PriorityQueuePop+0x90>
c0101952: 39 ce                        	cmp	esi, ecx
c0101954: 7d 04                        	jge	0xc010195a <PriorityQueuePop+0xf6>
c0101956: 89 d0                        	mov	eax, edx
c0101958: eb aa                        	jmp	0xc0101904 <PriorityQueuePop+0xa0>
c010195a: 83 c4 1c                     	add	esp, 28
c010195d: 5b                           	pop	ebx
c010195e: 5e                           	pop	esi
c010195f: 5f                           	pop	edi
c0101960: 5d                           	pop	ebp
c0101961: c3                           	ret

c0101962 <PriorityQueueGetCapacity>:
c0101962: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0101966: 8b 00                        	mov	eax, dword ptr [eax]
c0101968: c3                           	ret

c0101969 <PriorityQueueGetUsedSize>:
c0101969: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c010196d: 8b 40 04                     	mov	eax, dword ptr [eax + 4]
c0101970: c3                           	ret

c0101971 <KernelMain>:
c0101971: 83 ec 18                     	sub	esp, 24
c0101974: 68 d1 44 10 c0               	push	3222291665
c0101979: e8 8d 17 00 00               	call	0xc010310b <LogWriteSerial>
c010197e: c7 04 24 f8 44 10 c0         	mov	dword ptr [esp], 3222291704
c0101985: e8 81 17 00 00               	call	0xc010310b <LogWriteSerial>
c010198a: e8 f6 0c 00 00               	call	0xc0102685 <InitPhys>
c010198f: e8 1c 0a 00 00               	call	0xc01023b0 <InitHeap>
c0101994: e8 24 02 00 00               	call	0xc0101bbd <InitIrql>
c0101999: e8 f3 02 00 00               	call	0xc0101c91 <InitTimer>
c010199e: e8 40 00 00 00               	call	0xc01019e3 <InitBootstrapCpu>
c01019a3: e8 e1 14 00 00               	call	0xc0102e89 <InitVirt>
c01019a8: c7 04 24 08 45 10 c0         	mov	dword ptr [esp], 3222291720
c01019af: e8 57 17 00 00               	call	0xc010310b <LogWriteSerial>
c01019b4: 83 c4 10                     	add	esp, 16
c01019b7: eb fe                        	jmp	0xc01019b7 <KernelMain+0x46>

c01019b9 <InitCpuTableEntry>:
c01019b9: 53                           	push	ebx
c01019ba: 6b d8 14                     	imul	ebx, eax, 20
c01019bd: 83 ec 14                     	sub	esp, 20
c01019c0: 89 83 0c 60 10 c0            	mov	dword ptr [ebx - 1072668660], eax
c01019c6: 68 90 08 00 00               	push	2192
c01019cb: e8 32 08 00 00               	call	0xc0102202 <AllocHeapZero>
c01019d0: 89 83 08 60 10 c0            	mov	dword ptr [ebx - 1072668664], eax
c01019d6: 31 c0                        	xor	eax, eax
c01019d8: 89 83 10 60 10 c0            	mov	dword ptr [ebx - 1072668656], eax
c01019de: 83 c4 18                     	add	esp, 24
c01019e1: 5b                           	pop	ebx
c01019e2: c3                           	ret

c01019e3 <InitBootstrapCpu>:
c01019e3: 83 ec 0c                     	sub	esp, 12
c01019e6: 31 c0                        	xor	eax, eax
c01019e8: e8 cc ff ff ff               	call	0xc01019b9 <InitCpuTableEntry>
c01019ed: 83 ec 0c                     	sub	esp, 12
c01019f0: 68 00 60 10 c0               	push	3222298624
c01019f5: e8 5c 18 00 00               	call	0xc0103256 <ArchInitBootstrapCpu>
c01019fa: 83 c4 1c                     	add	esp, 28
c01019fd: c3                           	ret

c01019fe <InitOtherCpu>:
c01019fe: 83 ec 0c                     	sub	esp, 12
c0101a01: b8 01 00 00 00               	mov	eax, 1
c0101a06: e8 ae ff ff ff               	call	0xc01019b9 <InitCpuTableEntry>
c0101a0b: 6b 05 00 50 10 c0 14         	imul	eax, dword ptr [-1072672768], 20
c0101a12: 83 ec 0c                     	sub	esp, 12
c0101a15: 05 00 60 10 c0               	add	eax, 3222298624
c0101a1a: 50                           	push	eax
c0101a1b: e8 55 18 00 00               	call	0xc0103275 <ArchInitNextCpu>
c0101a20: 83 c4 10                     	add	esp, 16
c0101a23: 84 c0                        	test	al, al
c0101a25: 74 0d                        	je	0xc0101a34 <InitOtherCpu+0x36>
c0101a27: a1 00 50 10 c0               	mov	eax, dword ptr [3222294528]
c0101a2c: 40                           	inc	eax
c0101a2d: a3 00 50 10 c0               	mov	dword ptr [3222294528], eax
c0101a32: eb d2                        	jmp	0xc0101a06 <InitOtherCpu+0x8>
c0101a34: 83 c4 0c                     	add	esp, 12
c0101a37: c3                           	ret

c0101a38 <GetCpuCount>:
c0101a38: a1 00 50 10 c0               	mov	eax, dword ptr [3222294528]
c0101a3d: c3                           	ret

c0101a3e <GetCpuAtIndex>:
c0101a3e: 6b 44 24 04 14               	imul	eax, dword ptr [esp + 4], 20
c0101a43: 05 00 60 10 c0               	add	eax, 3222298624
c0101a48: c3                           	ret

c0101a49 <GetCpu>:
c0101a49: 83 ec 0c                     	sub	esp, 12
c0101a4c: e8 8f 1d 00 00               	call	0xc01037e0 <ArchGetCurrentCpuIndex>
c0101a51: 83 c4 0c                     	add	esp, 12
c0101a54: 6b c0 14                     	imul	eax, eax, 20
c0101a57: 05 00 60 10 c0               	add	eax, 3222298624
c0101a5c: c3                           	ret

c0101a5d <RegisterIrqHandler>:
c0101a5d: c3                           	ret

c0101a5e <RespondToIrq>:
c0101a5e: 83 ec 18                     	sub	esp, 24
c0101a61: ff 74 24 20                  	push	dword ptr [esp + 32]
c0101a65: e8 84 00 00 00               	call	0xc0101aee <RaiseIrql>
c0101a6a: 89 44 24 20                  	mov	dword ptr [esp + 32], eax
c0101a6e: 83 c4 1c                     	add	esp, 28
c0101a71: e9 a7 00 00 00               	jmp	0xc0101b1d <LowerIrql>

c0101a76 <GetIrql>:
c0101a76: 83 ec 0c                     	sub	esp, 12
c0101a79: e8 cb ff ff ff               	call	0xc0101a49 <GetCpu>
c0101a7e: 8b 40 10                     	mov	eax, dword ptr [eax + 16]
c0101a81: 83 c4 0c                     	add	esp, 12
c0101a84: c3                           	ret

c0101a85 <DeferUntilIrql>:
c0101a85: 57                           	push	edi
c0101a86: 56                           	push	esi
c0101a87: 53                           	push	ebx
c0101a88: 83 ec 10                     	sub	esp, 16
c0101a8b: 8b 5c 24 20                  	mov	ebx, dword ptr [esp + 32]
c0101a8f: 8b 74 24 24                  	mov	esi, dword ptr [esp + 36]
c0101a93: 8b 7c 24 28                  	mov	edi, dword ptr [esp + 40]
c0101a97: e8 da ff ff ff               	call	0xc0101a76 <GetIrql>
c0101a9c: 39 d8                        	cmp	eax, ebx
c0101a9e: 75 0e                        	jne	0xc0101aae <DeferUntilIrql+0x29>
c0101aa0: 89 7c 24 20                  	mov	dword ptr [esp + 32], edi
c0101aa4: 83 c4 10                     	add	esp, 16
c0101aa7: 89 f0                        	mov	eax, esi
c0101aa9: 5b                           	pop	ebx
c0101aaa: 5e                           	pop	esi
c0101aab: 5f                           	pop	edi
c0101aac: ff e0                        	jmp	eax
c0101aae: e8 c3 ff ff ff               	call	0xc0101a76 <GetIrql>
c0101ab3: 39 d8                        	cmp	eax, ebx
c0101ab5: 7d 0a                        	jge	0xc0101ac1 <DeferUntilIrql+0x3c>
c0101ab7: 83 ec 0c                     	sub	esp, 12
c0101aba: 6a 0c                        	push	12
c0101abc: e8 74 17 00 00               	call	0xc0103235 <Panic>
c0101ac1: 80 3d 45 61 10 c0 00         	cmp	byte ptr [-1072668347], 0
c0101ac8: 74 1d                        	je	0xc0101ae7 <DeferUntilIrql+0x62>
c0101aca: 89 7c 24 0c                  	mov	dword ptr [esp + 12], edi
c0101ace: 89 74 24 08                  	mov	dword ptr [esp + 8], esi
c0101ad2: 50                           	push	eax
c0101ad3: 53                           	push	ebx
c0101ad4: 8d 44 24 10                  	lea	eax, [esp + 16]
c0101ad8: 50                           	push	eax
c0101ad9: ff 35 40 61 10 c0            	push	dword ptr [-1072668352]
c0101adf: e8 ba fc ff ff               	call	0xc010179e <PriorityQueueInsert>
c0101ae4: 83 c4 10                     	add	esp, 16
c0101ae7: 83 c4 10                     	add	esp, 16
c0101aea: 5b                           	pop	ebx
c0101aeb: 5e                           	pop	esi
c0101aec: 5f                           	pop	edi
c0101aed: c3                           	ret

c0101aee <RaiseIrql>:
c0101aee: 56                           	push	esi
c0101aef: 53                           	push	ebx
c0101af0: 51                           	push	ecx
c0101af1: 8b 74 24 10                  	mov	esi, dword ptr [esp + 16]
c0101af5: e8 f1 1c 00 00               	call	0xc01037eb <ArchDisableInterrupts>
c0101afa: e8 77 ff ff ff               	call	0xc0101a76 <GetIrql>
c0101aff: 39 f0                        	cmp	eax, esi
c0101b01: 7e 0a                        	jle	0xc0101b0d <RaiseIrql+0x1f>
c0101b03: 83 ec 0c                     	sub	esp, 12
c0101b06: 6a 0c                        	push	12
c0101b08: e8 28 17 00 00               	call	0xc0103235 <Panic>
c0101b0d: 89 c3                        	mov	ebx, eax
c0101b0f: e8 35 ff ff ff               	call	0xc0101a49 <GetCpu>
c0101b14: 89 70 10                     	mov	dword ptr [eax + 16], esi
c0101b17: 89 d8                        	mov	eax, ebx
c0101b19: 5a                           	pop	edx
c0101b1a: 5b                           	pop	ebx
c0101b1b: 5e                           	pop	esi
c0101b1c: c3                           	ret

c0101b1d <LowerIrql>:
c0101b1d: 57                           	push	edi
c0101b1e: 56                           	push	esi
c0101b1f: 53                           	push	ebx
c0101b20: 83 ec 10                     	sub	esp, 16
c0101b23: 8b 74 24 20                  	mov	esi, dword ptr [esp + 32]
c0101b27: e8 bf 1c 00 00               	call	0xc01037eb <ArchDisableInterrupts>
c0101b2c: e8 45 ff ff ff               	call	0xc0101a76 <GetIrql>
c0101b31: 89 c3                        	mov	ebx, eax
c0101b33: 39 f0                        	cmp	eax, esi
c0101b35: 7d 4a                        	jge	0xc0101b81 <LowerIrql+0x64>
c0101b37: 83 ec 0c                     	sub	esp, 12
c0101b3a: 6a 0c                        	push	12
c0101b3c: e8 f4 16 00 00               	call	0xc0103235 <Panic>
c0101b41: 8d 44 24 08                  	lea	eax, [esp + 8]
c0101b45: 52                           	push	edx
c0101b46: 52                           	push	edx
c0101b47: ff 35 40 61 10 c0            	push	dword ptr [-1072668352]
c0101b4d: 50                           	push	eax
c0101b4e: e8 dd fc ff ff               	call	0xc0101830 <PriorityQueuePeek>
c0101b53: 8b 5c 24 14                  	mov	ebx, dword ptr [esp + 20]
c0101b57: 8b 7c 24 18                  	mov	edi, dword ptr [esp + 24]
c0101b5b: 83 c4 0c                     	add	esp, 12
c0101b5e: 39 de                        	cmp	esi, ebx
c0101b60: 7f 25                        	jg	0xc0101b87 <LowerIrql+0x6a>
c0101b62: e8 e2 fe ff ff               	call	0xc0101a49 <GetCpu>
c0101b67: 83 ec 0c                     	sub	esp, 12
c0101b6a: 89 58 10                     	mov	dword ptr [eax + 16], ebx
c0101b6d: ff 77 04                     	push	dword ptr [edi + 4]
c0101b70: ff 17                        	call	dword ptr [edi]
c0101b72: 58                           	pop	eax
c0101b73: ff 35 40 61 10 c0            	push	dword ptr [-1072668352]
c0101b79: e8 e6 fc ff ff               	call	0xc0101864 <PriorityQueuePop>
c0101b7e: 83 c4 10                     	add	esp, 16
c0101b81: 39 f3                        	cmp	ebx, esi
c0101b83: 75 bc                        	jne	0xc0101b41 <LowerIrql+0x24>
c0101b85: eb 08                        	jmp	0xc0101b8f <LowerIrql+0x72>
c0101b87: e8 bd fe ff ff               	call	0xc0101a49 <GetCpu>
c0101b8c: 89 70 10                     	mov	dword ptr [eax + 16], esi
c0101b8f: 85 f6                        	test	esi, esi
c0101b91: 75 1b                        	jne	0xc0101bae <LowerIrql+0x91>
c0101b93: 80 3d 44 61 10 c0 00         	cmp	byte ptr [-1072668348], 0
c0101b9a: 74 12                        	je	0xc0101bae <LowerIrql+0x91>
c0101b9c: c6 05 44 61 10 c0 00         	mov	byte ptr [-1072668348], 0
c0101ba3: 83 c4 10                     	add	esp, 16
c0101ba6: 5b                           	pop	ebx
c0101ba7: 5e                           	pop	esi
c0101ba8: 5f                           	pop	edi
c0101ba9: e9 31 00 00 00               	jmp	0xc0101bdf <Schedule>
c0101bae: 83 c4 10                     	add	esp, 16
c0101bb1: 5b                           	pop	ebx
c0101bb2: 5e                           	pop	esi
c0101bb3: 5f                           	pop	edi
c0101bb4: c3                           	ret

c0101bb5 <PostponeScheduleUntilStandardIrql>:
c0101bb5: c6 05 44 61 10 c0 01         	mov	byte ptr [-1072668348], 1
c0101bbc: c3                           	ret

c0101bbd <InitIrql>:
c0101bbd: 83 ec 10                     	sub	esp, 16
c0101bc0: 6a 08                        	push	8
c0101bc2: 6a 01                        	push	1
c0101bc4: 68 80 00 00 00               	push	128
c0101bc9: e8 80 fb ff ff               	call	0xc010174e <PriorityQueueCreate>
c0101bce: c6 05 45 61 10 c0 01         	mov	byte ptr [-1072668347], 1
c0101bd5: a3 40 61 10 c0               	mov	dword ptr [3222298944], eax
c0101bda: 83 c4 1c                     	add	esp, 28
c0101bdd: c3                           	ret

c0101bde <ScheduleInternal>:
c0101bde: c3                           	ret

c0101bdf <Schedule>:
c0101bdf: 83 ec 0c                     	sub	esp, 12
c0101be2: e8 8f fe ff ff               	call	0xc0101a76 <GetIrql>
c0101be7: 85 c0                        	test	eax, eax
c0101be9: 74 08                        	je	0xc0101bf3 <Schedule+0x14>
c0101beb: 83 c4 0c                     	add	esp, 12
c0101bee: e9 c2 ff ff ff               	jmp	0xc0101bb5 <PostponeScheduleUntilStandardIrql>
c0101bf3: 83 ec 0c                     	sub	esp, 12
c0101bf6: 6a 02                        	push	2
c0101bf8: e8 f1 fe ff ff               	call	0xc0101aee <RaiseIrql>
c0101bfd: 89 04 24                     	mov	dword ptr [esp], eax
c0101c00: e8 18 ff ff ff               	call	0xc0101b1d <LowerIrql>
c0101c05: 83 c4 1c                     	add	esp, 28
c0101c08: c3                           	ret

c0101c09 <ReceivedTimer>:
c0101c09: 57                           	push	edi
c0101c0a: 56                           	push	esi
c0101c0b: 53                           	push	ebx
c0101c0c: 8b 74 24 10                  	mov	esi, dword ptr [esp + 16]
c0101c10: 8b 7c 24 14                  	mov	edi, dword ptr [esp + 20]
c0101c14: e8 30 fe ff ff               	call	0xc0101a49 <GetCpu>
c0101c19: 83 ec 0c                     	sub	esp, 12
c0101c1c: 6a 00                        	push	0
c0101c1e: 89 c3                        	mov	ebx, eax
c0101c20: e8 19 fe ff ff               	call	0xc0101a3e <GetCpuAtIndex>
c0101c25: 83 c4 10                     	add	esp, 16
c0101c28: 39 c3                        	cmp	ebx, eax
c0101c2a: 75 2d                        	jne	0xc0101c59 <ReceivedTimer+0x50>
c0101c2c: 50                           	push	eax
c0101c2d: 50                           	push	eax
c0101c2e: 6a 00                        	push	0
c0101c30: 68 50 61 10 c0               	push	3222298960
c0101c35: e8 8d 13 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c0101c3a: 01 35 48 61 10 c0            	add	dword ptr [-1072668344], esi
c0101c40: 11 3d 4c 61 10 c0            	adc	dword ptr [-1072668340], edi
c0101c46: 83 c4 10                     	add	esp, 16
c0101c49: c7 44 24 10 50 61 10 c0      	mov	dword ptr [esp + 16], 3222298960
c0101c51: 5b                           	pop	ebx
c0101c52: 5e                           	pop	esi
c0101c53: 5f                           	pop	edi
c0101c54: e9 b2 13 00 00               	jmp	0xc010300b <ReleaseSpinlock>
c0101c59: 5b                           	pop	ebx
c0101c5a: 5e                           	pop	esi
c0101c5b: 5f                           	pop	edi
c0101c5c: c3                           	ret

c0101c5d <GetSystemTimer>:
c0101c5d: 57                           	push	edi
c0101c5e: 56                           	push	esi
c0101c5f: 83 ec 0c                     	sub	esp, 12
c0101c62: 6a 01                        	push	1
c0101c64: 68 50 61 10 c0               	push	3222298960
c0101c69: e8 59 13 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c0101c6e: 5a                           	pop	edx
c0101c6f: 59                           	pop	ecx
c0101c70: 8b 35 48 61 10 c0            	mov	esi, dword ptr [-1072668344]
c0101c76: 8b 3d 4c 61 10 c0            	mov	edi, dword ptr [-1072668340]
c0101c7c: 50                           	push	eax
c0101c7d: 68 50 61 10 c0               	push	3222298960
c0101c82: e8 92 13 00 00               	call	0xc0103019 <ReleaseSpinlockAndLower>
c0101c87: 83 c4 14                     	add	esp, 20
c0101c8a: 89 f0                        	mov	eax, esi
c0101c8c: 89 fa                        	mov	edx, edi
c0101c8e: 5e                           	pop	esi
c0101c8f: 5f                           	pop	edi
c0101c90: c3                           	ret

c0101c91 <InitTimer>:
c0101c91: 83 ec 10                     	sub	esp, 16
c0101c94: 6a 28                        	push	40
c0101c96: 68 3c 45 10 c0               	push	3222291772
c0101c9b: 68 50 61 10 c0               	push	3222298960
c0101ca0: e8 ee 12 00 00               	call	0xc0102f93 <InitSpinlock>
c0101ca5: 83 c4 1c                     	add	esp, 28
c0101ca8: c3                           	ret

c0101ca9 <SetSizeTags>:
c0101ca9: 8b 08                        	mov	ecx, dword ptr [eax]
c0101cab: 83 e1 03                     	and	ecx, 3
c0101cae: 09 d1                        	or	ecx, edx
c0101cb0: 89 08                        	mov	dword ptr [eax], ecx
c0101cb2: 89 d1                        	mov	ecx, edx
c0101cb4: 83 e1 fc                     	and	ecx, -4
c0101cb7: 89 54 08 fc                  	mov	dword ptr [eax + ecx - 4], edx
c0101cbb: c3                           	ret

c0101cbc <MarkSwappability>:
c0101cbc: 8b 08                        	mov	ecx, dword ptr [eax]
c0101cbe: 53                           	push	ebx
c0101cbf: 89 d3                        	mov	ebx, edx
c0101cc1: 89 ca                        	mov	edx, ecx
c0101cc3: 83 e2 fd                     	and	edx, -3
c0101cc6: 85 db                        	test	ebx, ebx
c0101cc8: 74 05                        	je	0xc0101ccf <MarkSwappability+0x13>
c0101cca: 83 c9 02                     	or	ecx, 2
c0101ccd: 89 ca                        	mov	edx, ecx
c0101ccf: 89 10                        	mov	dword ptr [eax], edx
c0101cd1: 5b                           	pop	ebx
c0101cd2: c3                           	ret

c0101cd3 <GetInsertionIndex>:
c0101cd3: 83 f8 10                     	cmp	eax, 16
c0101cd6: 74 1f                        	je	0xc0101cf7 <GetInsertionIndex+0x24>
c0101cd8: 31 d2                        	xor	edx, edx
c0101cda: 39 04 95 80 40 10 c0         	cmp	dword ptr [4*edx - 1072676736], eax
c0101ce1: 72 04                        	jb	0xc0101ce7 <GetInsertionIndex+0x14>
c0101ce3: 8d 42 ff                     	lea	eax, [edx - 1]
c0101ce6: c3                           	ret
c0101ce7: 42                           	inc	edx
c0101ce8: 83 fa 23                     	cmp	edx, 35
c0101ceb: 75 ed                        	jne	0xc0101cda <GetInsertionIndex+0x7>
c0101ced: 83 ec 18                     	sub	esp, 24
c0101cf0: 6a 07                        	push	7
c0101cf2: e8 3e 15 00 00               	call	0xc0103235 <Panic>
c0101cf7: 31 c0                        	xor	eax, eax
c0101cf9: c3                           	ret

c0101cfa <RestoreEmergencyPages>:
c0101cfa: 55                           	push	ebp
c0101cfb: 31 d2                        	xor	edx, edx
c0101cfd: 31 c0                        	xor	eax, eax
c0101cff: 57                           	push	edi
c0101d00: 56                           	push	esi
c0101d01: 53                           	push	ebx
c0101d02: 31 db                        	xor	ebx, ebx
c0101d04: 83 ec 0c                     	sub	esp, 12
c0101d07: 80 ba 28 50 10 c0 00         	cmp	byte ptr [edx - 1072672728], 0
c0101d0e: 74 0d                        	je	0xc0101d1d <RestoreEmergencyPages+0x23>
c0101d10: 8b 8a 24 50 10 c0            	mov	ecx, dword ptr [edx - 1072672732]
c0101d16: 01 cb                        	add	ebx, ecx
c0101d18: 39 c8                        	cmp	eax, ecx
c0101d1a: 0f 42 c1                     	cmovb	eax, ecx
c0101d1d: 83 c2 0c                     	add	edx, 12
c0101d20: 81 fa c0 00 00 00            	cmp	edx, 192
c0101d26: 75 df                        	jne	0xc0101d07 <RestoreEmergencyPages+0xd>
c0101d28: 3d ff 3f 00 00               	cmp	eax, 16383
c0101d2d: 0f 87 a2 00 00 00            	ja	0xc0101dd5 <RestoreEmergencyPages+0xdb>
c0101d33: 52                           	push	edx
c0101d34: 52                           	push	edx
c0101d35: 6a 00                        	push	0
c0101d37: 6a 00                        	push	0
c0101d39: 6a 13                        	push	19
c0101d3b: 68 00 40 00 00               	push	16384
c0101d40: 6a 00                        	push	0
c0101d42: 6a 00                        	push	0
c0101d44: e8 fd 0a 00 00               	call	0xc0102846 <MapVirt>
c0101d49: b9 20 50 10 c0               	mov	ecx, 3222294560
c0101d4e: 83 c4 20                     	add	esp, 32
c0101d51: 31 d2                        	xor	edx, edx
c0101d53: 89 c7                        	mov	edi, eax
c0101d55: 31 c0                        	xor	eax, eax
c0101d57: 80 79 08 00                  	cmp	byte ptr [ecx + 8], 0
c0101d5b: 74 4e                        	je	0xc0101dab <RestoreEmergencyPages+0xb1>
c0101d5d: 6b f2 0c                     	imul	esi, edx, 12
c0101d60: 8b b6 24 50 10 c0            	mov	esi, dword ptr [esi - 1072672732]
c0101d66: 39 71 04                     	cmp	dword ptr [ecx + 4], esi
c0101d69: 0f 42 d0                     	cmovb	edx, eax
c0101d6c: 40                           	inc	eax
c0101d6d: 83 c1 0c                     	add	ecx, 12
c0101d70: 83 f8 10                     	cmp	eax, 16
c0101d73: 75 e2                        	jne	0xc0101d57 <RestoreEmergencyPages+0x5d>
c0101d75: 6b f2 0c                     	imul	esi, edx, 12
c0101d78: 50                           	push	eax
c0101d79: 50                           	push	eax
c0101d7a: ff b6 24 50 10 c0            	push	dword ptr [esi - 1072672732]
c0101d80: 68 42 45 10 c0               	push	3222291778
c0101d85: e8 81 13 00 00               	call	0xc010310b <LogWriteSerial>
c0101d8a: c7 04 24 7a 45 10 c0         	mov	dword ptr [esp], 3222291834
c0101d91: e8 75 13 00 00               	call	0xc010310b <LogWriteSerial>
c0101d96: 89 be 20 50 10 c0            	mov	dword ptr [esi - 1072672736], edi
c0101d9c: 83 c4 10                     	add	esp, 16
c0101d9f: c7 86 24 50 10 c0 00 40 00 00	mov	dword ptr [esi - 1072672732], 16384
c0101da9: eb 1a                        	jmp	0xc0101dc5 <RestoreEmergencyPages+0xcb>
c0101dab: 6b c0 0c                     	imul	eax, eax, 12
c0101dae: c6 80 28 50 10 c0 01         	mov	byte ptr [eax - 1072672728], 1
c0101db5: c7 80 24 50 10 c0 00 40 00 00	mov	dword ptr [eax - 1072672732], 16384
c0101dbf: 89 b8 20 50 10 c0            	mov	dword ptr [eax - 1072672736], edi
c0101dc5: 81 c3 00 40 00 00            	add	ebx, 16384
c0101dcb: b8 00 40 00 00               	mov	eax, 16384
c0101dd0: e9 53 ff ff ff               	jmp	0xc0101d28 <RestoreEmergencyPages+0x2e>
c0101dd5: 81 fb ff 7f 00 00            	cmp	ebx, 32767
c0101ddb: 0f 86 52 ff ff ff            	jbe	0xc0101d33 <RestoreEmergencyPages+0x39>
c0101de1: 83 c4 0c                     	add	esp, 12
c0101de4: 5b                           	pop	ebx
c0101de5: 5e                           	pop	esi
c0101de6: 5f                           	pop	edi
c0101de7: 5d                           	pop	ebp
c0101de8: c3                           	ret

c0101de9 <RemoveBlock>:
c0101de9: 56                           	push	esi
c0101dea: 89 c6                        	mov	esi, eax
c0101dec: b8 00 70 10 c0               	mov	eax, 3222302720
c0101df1: 53                           	push	ebx
c0101df2: 8b 4a 08                     	mov	ecx, dword ptr [edx + 8]
c0101df5: bb a0 70 10 c0               	mov	ebx, 3222302880
c0101dfa: f6 02 02                     	test	byte ptr [edx], 2
c0101dfd: 0f 45 d8                     	cmovne	ebx, eax
c0101e00: 8b 42 04                     	mov	eax, dword ptr [edx + 4]
c0101e03: 85 c9                        	test	ecx, ecx
c0101e05: 75 16                        	jne	0xc0101e1d <RemoveBlock+0x34>
c0101e07: 8d 14 b3                     	lea	edx, [ebx + 4*esi]
c0101e0a: 85 c0                        	test	eax, eax
c0101e0c: 75 06                        	jne	0xc0101e14 <RemoveBlock+0x2b>
c0101e0e: 31 c9                        	xor	ecx, ecx
c0101e10: 89 0a                        	mov	dword ptr [edx], ecx
c0101e12: eb 1d                        	jmp	0xc0101e31 <RemoveBlock+0x48>
c0101e14: 89 02                        	mov	dword ptr [edx], eax
c0101e16: 31 d2                        	xor	edx, edx
c0101e18: 89 50 08                     	mov	dword ptr [eax + 8], edx
c0101e1b: eb 14                        	jmp	0xc0101e31 <RemoveBlock+0x48>
c0101e1d: 85 c0                        	test	eax, eax
c0101e1f: 75 07                        	jne	0xc0101e28 <RemoveBlock+0x3f>
c0101e21: 31 c0                        	xor	eax, eax
c0101e23: 89 41 04                     	mov	dword ptr [ecx + 4], eax
c0101e26: eb 09                        	jmp	0xc0101e31 <RemoveBlock+0x48>
c0101e28: 89 41 04                     	mov	dword ptr [ecx + 4], eax
c0101e2b: 8b 52 08                     	mov	edx, dword ptr [edx + 8]
c0101e2e: 89 50 08                     	mov	dword ptr [eax + 8], edx
c0101e31: 5b                           	pop	ebx
c0101e32: 5e                           	pop	esi
c0101e33: c3                           	ret

c0101e34 <AddBlock.isra.0>:
c0101e34: 55                           	push	ebp
c0101e35: 89 c5                        	mov	ebp, eax
c0101e37: 57                           	push	edi
c0101e38: 56                           	push	esi
c0101e39: 53                           	push	ebx
c0101e3a: 83 ec 1c                     	sub	esp, 28
c0101e3d: 8b 7d 00                     	mov	edi, dword ptr [ebp]
c0101e40: ba a0 70 10 c0               	mov	edx, 3222302880
c0101e45: 89 eb                        	mov	ebx, ebp
c0101e47: 89 f8                        	mov	eax, edi
c0101e49: 83 e0 fc                     	and	eax, -4
c0101e4c: 83 e7 02                     	and	edi, 2
c0101e4f: 89 44 24 08                  	mov	dword ptr [esp + 8], eax
c0101e53: b8 00 70 10 c0               	mov	eax, 3222302720
c0101e58: 0f 44 c2                     	cmove	eax, edx
c0101e5b: 89 44 24 0c                  	mov	dword ptr [esp + 12], eax
c0101e5f: 8b 44 24 08                  	mov	eax, dword ptr [esp + 8]
c0101e63: 83 e8 08                     	sub	eax, 8
c0101e66: e8 68 fe ff ff               	call	0xc0101cd3 <GetInsertionIndex>
c0101e6b: 89 c1                        	mov	ecx, eax
c0101e6d: 8b 45 fc                     	mov	eax, dword ptr [ebp - 4]
c0101e70: 83 e0 fc                     	and	eax, -4
c0101e73: 29 c3                        	sub	ebx, eax
c0101e75: 8b 44 24 08                  	mov	eax, dword ptr [esp + 8]
c0101e79: 8d 74 05 00                  	lea	esi, [ebp + eax]
c0101e7d: 8b 03                        	mov	eax, dword ptr [ebx]
c0101e7f: 8b 16                        	mov	edx, dword ptr [esi]
c0101e81: a8 01                        	test	al, 1
c0101e83: 74 70                        	je	0xc0101ef5 <AddBlock.isra.0+0xc1>
c0101e85: f6 c2 01                     	test	dl, 1
c0101e88: 74 26                        	je	0xc0101eb0 <AddBlock.isra.0+0x7c>
c0101e8a: 8b 44 24 0c                  	mov	eax, dword ptr [esp + 12]
c0101e8e: 31 db                        	xor	ebx, ebx
c0101e90: 89 5d 08                     	mov	dword ptr [ebp + 8], ebx
c0101e93: 8d 14 88                     	lea	edx, [eax + 4*ecx]
c0101e96: 8b 02                        	mov	eax, dword ptr [edx]
c0101e98: 89 45 04                     	mov	dword ptr [ebp + 4], eax
c0101e9b: 85 c0                        	test	eax, eax
c0101e9d: 74 03                        	je	0xc0101ea2 <AddBlock.isra.0+0x6e>
c0101e9f: 89 68 08                     	mov	dword ptr [eax + 8], ebp
c0101ea2: 89 2a                        	mov	dword ptr [edx], ebp
c0101ea4: 83 65 00 fe                  	and	dword ptr [ebp], -2
c0101ea8: 83 c4 1c                     	add	esp, 28
c0101eab: 5b                           	pop	ebx
c0101eac: 5e                           	pop	esi
c0101ead: 5f                           	pop	edi
c0101eae: 5d                           	pop	ebp
c0101eaf: c3                           	ret
c0101eb0: 83 e2 fc                     	and	edx, -4
c0101eb3: 89 eb                        	mov	ebx, ebp
c0101eb5: 8d 42 f8                     	lea	eax, [edx - 8]
c0101eb8: e8 16 fe ff ff               	call	0xc0101cd3 <GetInsertionIndex>
c0101ebd: 89 f2                        	mov	edx, esi
c0101ebf: e8 25 ff ff ff               	call	0xc0101de9 <RemoveBlock>
c0101ec4: 8b 16                        	mov	edx, dword ptr [esi]
c0101ec6: 8b 44 24 08                  	mov	eax, dword ptr [esp + 8]
c0101eca: 83 e2 fc                     	and	edx, -4
c0101ecd: 01 c2                        	add	edx, eax
c0101ecf: 89 e8                        	mov	eax, ebp
c0101ed1: e8 d3 fd ff ff               	call	0xc0101ca9 <SetSizeTags>
c0101ed6: 31 c9                        	xor	ecx, ecx
c0101ed8: 83 65 00 fe                  	and	dword ptr [ebp], -2
c0101edc: 31 d2                        	xor	edx, edx
c0101ede: 89 4d 08                     	mov	dword ptr [ebp + 8], ecx
c0101ee1: 85 ff                        	test	edi, edi
c0101ee3: 89 4d 04                     	mov	dword ptr [ebp + 4], ecx
c0101ee6: 0f 95 c2                     	setne	dl
c0101ee9: e8 ce fd ff ff               	call	0xc0101cbc <MarkSwappability>
c0101eee: 89 dd                        	mov	ebp, ebx
c0101ef0: e9 48 ff ff ff               	jmp	0xc0101e3d <AddBlock.isra.0+0x9>
c0101ef5: 83 e0 fc                     	and	eax, -4
c0101ef8: 31 c9                        	xor	ecx, ecx
c0101efa: 83 e8 08                     	sub	eax, 8
c0101efd: 85 ff                        	test	edi, edi
c0101eff: 0f 95 c1                     	setne	cl
c0101f02: 80 e2 01                     	and	dl, 1
c0101f05: 89 cf                        	mov	edi, ecx
c0101f07: 74 17                        	je	0xc0101f20 <AddBlock.isra.0+0xec>
c0101f09: e8 c5 fd ff ff               	call	0xc0101cd3 <GetInsertionIndex>
c0101f0e: 89 da                        	mov	edx, ebx
c0101f10: e8 d4 fe ff ff               	call	0xc0101de9 <RemoveBlock>
c0101f15: 8b 13                        	mov	edx, dword ptr [ebx]
c0101f17: 8b 44 24 08                  	mov	eax, dword ptr [esp + 8]
c0101f1b: 83 e2 fc                     	and	edx, -4
c0101f1e: eb 30                        	jmp	0xc0101f50 <AddBlock.isra.0+0x11c>
c0101f20: e8 ae fd ff ff               	call	0xc0101cd3 <GetInsertionIndex>
c0101f25: 89 da                        	mov	edx, ebx
c0101f27: e8 bd fe ff ff               	call	0xc0101de9 <RemoveBlock>
c0101f2c: 8b 06                        	mov	eax, dword ptr [esi]
c0101f2e: 83 e0 fc                     	and	eax, -4
c0101f31: 83 e8 08                     	sub	eax, 8
c0101f34: e8 9a fd ff ff               	call	0xc0101cd3 <GetInsertionIndex>
c0101f39: 89 f2                        	mov	edx, esi
c0101f3b: e8 a9 fe ff ff               	call	0xc0101de9 <RemoveBlock>
c0101f40: 8b 16                        	mov	edx, dword ptr [esi]
c0101f42: 8b 44 24 08                  	mov	eax, dword ptr [esp + 8]
c0101f46: 83 e2 fc                     	and	edx, -4
c0101f49: 01 c2                        	add	edx, eax
c0101f4b: 8b 03                        	mov	eax, dword ptr [ebx]
c0101f4d: 83 e0 fc                     	and	eax, -4
c0101f50: 01 c2                        	add	edx, eax
c0101f52: 89 d8                        	mov	eax, ebx
c0101f54: e8 50 fd ff ff               	call	0xc0101ca9 <SetSizeTags>
c0101f59: 31 d2                        	xor	edx, edx
c0101f5b: 83 23 fe                     	and	dword ptr [ebx], -2
c0101f5e: 89 53 08                     	mov	dword ptr [ebx + 8], edx
c0101f61: 89 53 04                     	mov	dword ptr [ebx + 4], edx
c0101f64: 89 fa                        	mov	edx, edi
c0101f66: e8 51 fd ff ff               	call	0xc0101cbc <MarkSwappability>
c0101f6b: eb 81                        	jmp	0xc0101eee <AddBlock.isra.0+0xba>

c0101f6d <AllocateBlock>:
c0101f6d: 57                           	push	edi
c0101f6e: 8d 79 08                     	lea	edi, [ecx + 8]
c0101f71: 56                           	push	esi
c0101f72: 53                           	push	ebx
c0101f73: 89 c3                        	mov	ebx, eax
c0101f75: 89 d0                        	mov	eax, edx
c0101f77: 89 fa                        	mov	edx, edi
c0101f79: 8b 33                        	mov	esi, dword ptr [ebx]
c0101f7b: 83 e6 fc                     	and	esi, -4
c0101f7e: 29 f2                        	sub	edx, esi
c0101f80: 83 fa 0f                     	cmp	edx, 15
c0101f83: 89 da                        	mov	edx, ebx
c0101f85: 77 15                        	ja	0xc0101f9c <AllocateBlock+0x2f>
c0101f87: e8 5d fe ff ff               	call	0xc0101de9 <RemoveBlock>
c0101f8c: 89 fa                        	mov	edx, edi
c0101f8e: 89 d8                        	mov	eax, ebx
c0101f90: 89 de                        	mov	esi, ebx
c0101f92: e8 12 fd ff ff               	call	0xc0101ca9 <SetSizeTags>
c0101f97: 83 0b 01                     	or	dword ptr [ebx], 1
c0101f9a: eb 34                        	jmp	0xc0101fd0 <AllocateBlock+0x63>
c0101f9c: e8 48 fe ff ff               	call	0xc0101de9 <RemoveBlock>
c0101fa1: 29 fe                        	sub	esi, edi
c0101fa3: 89 d8                        	mov	eax, ebx
c0101fa5: 89 f2                        	mov	edx, esi
c0101fa7: 01 de                        	add	esi, ebx
c0101fa9: e8 fb fc ff ff               	call	0xc0101ca9 <SetSizeTags>
c0101fae: 89 f0                        	mov	eax, esi
c0101fb0: 89 fa                        	mov	edx, edi
c0101fb2: e8 f2 fc ff ff               	call	0xc0101ca9 <SetSizeTags>
c0101fb7: 8b 13                        	mov	edx, dword ptr [ebx]
c0101fb9: d1 ea                        	shr	edx
c0101fbb: 83 e2 01                     	and	edx, 1
c0101fbe: e8 f9 fc ff ff               	call	0xc0101cbc <MarkSwappability>
c0101fc3: 83 0e 01                     	or	dword ptr [esi], 1
c0101fc6: 89 d8                        	mov	eax, ebx
c0101fc8: 83 23 fe                     	and	dword ptr [ebx], -2
c0101fcb: e8 64 fe ff ff               	call	0xc0101e34 <AddBlock.isra.0>
c0101fd0: 89 f0                        	mov	eax, esi
c0101fd2: 5b                           	pop	ebx
c0101fd3: 5e                           	pop	esi
c0101fd4: 5f                           	pop	edi
c0101fd5: c3                           	ret

c0101fd6 <AllocHeapEx>:
c0101fd6: 55                           	push	ebp
c0101fd7: 57                           	push	edi
c0101fd8: 56                           	push	esi
c0101fd9: 53                           	push	ebx
c0101fda: 83 ec 1c                     	sub	esp, 28
c0101fdd: 8b 5c 24 30                  	mov	ebx, dword ptr [esp + 48]
c0101fe1: 85 db                        	test	ebx, ebx
c0101fe3: 0f 84 fb 01 00 00            	je	0xc01021e4 <AllocHeapEx+0x20e>
c0101fe9: b8 10 00 00 00               	mov	eax, 16
c0101fee: 39 c3                        	cmp	ebx, eax
c0101ff0: 0f 42 d8                     	cmovb	ebx, eax
c0101ff3: 83 c3 07                     	add	ebx, 7
c0101ff6: 83 e3 f8                     	and	ebx, -8
c0101ff9: f6 44 24 34 08               	test	byte ptr [esp + 52], 8
c0101ffe: 74 05                        	je	0xc0102005 <AllocHeapEx+0x2f>
c0102000: 83 4c 24 34 04               	or	dword ptr [esp + 52], 4
c0102005: 50                           	push	eax
c0102006: be 00 70 10 c0               	mov	esi, 3222302720
c010200b: 50                           	push	eax
c010200c: 6a 01                        	push	1
c010200e: 68 30 71 10 c0               	push	3222303024
c0102013: e8 af 0f 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c0102018: b9 a0 70 10 c0               	mov	ecx, 3222302880
c010201d: 89 44 24 18                  	mov	dword ptr [esp + 24], eax
c0102021: 8b 7c 24 44                  	mov	edi, dword ptr [esp + 68]
c0102025: 83 c4 10                     	add	esp, 16
c0102028: 89 f8                        	mov	eax, edi
c010202a: 83 e0 04                     	and	eax, 4
c010202d: 89 04 24                     	mov	dword ptr [esp], eax
c0102030: 89 f0                        	mov	eax, esi
c0102032: 0f 44 c1                     	cmove	eax, ecx
c0102035: 31 d2                        	xor	edx, edx
c0102037: 89 44 24 04                  	mov	dword ptr [esp + 4], eax
c010203b: 39 1c 95 80 40 10 c0         	cmp	dword ptr [4*edx - 1072676736], ebx
c0102042: 73 09                        	jae	0xc010204d <AllocHeapEx+0x77>
c0102044: 42                           	inc	edx
c0102045: eb f4                        	jmp	0xc010203b <AllocHeapEx+0x65>
c0102047: 42                           	inc	edx
c0102048: 83 fa 24                     	cmp	edx, 36
c010204b: 74 12                        	je	0xc010205f <AllocHeapEx+0x89>
c010204d: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0102051: 8b 04 90                     	mov	eax, dword ptr [eax + 4*edx]
c0102054: 85 c0                        	test	eax, eax
c0102056: 74 ef                        	je	0xc0102047 <AllocHeapEx+0x71>
c0102058: 89 d9                        	mov	ecx, ebx
c010205a: e9 52 01 00 00               	jmp	0xc01021b1 <AllocHeapEx+0x1db>
c010205f: 89 f8                        	mov	eax, edi
c0102061: 83 e0 0c                     	and	eax, 12
c0102064: 83 f8 04                     	cmp	eax, 4
c0102067: 75 05                        	jne	0xc010206e <AllocHeapEx+0x98>
c0102069: 83 e7 fb                     	and	edi, -5
c010206c: eb ba                        	jmp	0xc0102028 <AllocHeapEx+0x52>
c010206e: 8d b3 27 10 00 00            	lea	esi, [ebx + 4135]
c0102074: 81 e6 00 f0 ff ff            	and	esi, 4294963200
c010207a: e8 0e 0f 00 00               	call	0xc0102f8d <IsVirtInitialised>
c010207f: 84 c0                        	test	al, al
c0102081: 75 03                        	jne	0xc0102086 <AllocHeapEx+0xb0>
c0102083: 83 cf 01                     	or	edi, 1
c0102086: 83 e7 01                     	and	edi, 1
c0102089: 74 75                        	je	0xc0102100 <AllocHeapEx+0x12a>
c010208b: 83 3c 24 00                  	cmp	dword ptr [esp], 0
c010208f: 74 0e                        	je	0xc010209f <AllocHeapEx+0xc9>
c0102091: 50                           	push	eax
c0102092: 50                           	push	eax
c0102093: 68 c6 45 10 c0               	push	3222291910
c0102098: 6a 06                        	push	6
c010209a: e8 53 11 00 00               	call	0xc01031f2 <PanicEx>
c010209f: 55                           	push	ebp
c01020a0: 6a 00                        	push	0
c01020a2: 68 fa 1c 10 c0               	push	3222281466
c01020a7: 6a 00                        	push	0
c01020a9: e8 d7 f9 ff ff               	call	0xc0101a85 <DeferUntilIrql>
c01020ae: b9 20 50 10 c0               	mov	ecx, 3222294560
c01020b3: 83 c4 10                     	add	esp, 16
c01020b6: 31 c0                        	xor	eax, eax
c01020b8: 80 79 08 00                  	cmp	byte ptr [ecx + 8], 0
c01020bc: 74 32                        	je	0xc01020f0 <AllocHeapEx+0x11a>
c01020be: 8b 51 04                     	mov	edx, dword ptr [ecx + 4]
c01020c1: 39 f2                        	cmp	edx, esi
c01020c3: 72 2b                        	jb	0xc01020f0 <AllocHeapEx+0x11a>
c01020c5: 6b c0 0c                     	imul	eax, eax, 12
c01020c8: 29 f2                        	sub	edx, esi
c01020ca: 8b 88 20 50 10 c0            	mov	ecx, dword ptr [eax - 1072672736]
c01020d0: 89 90 24 50 10 c0            	mov	dword ptr [eax - 1072672732], edx
c01020d6: 8d 2c 31                     	lea	ebp, [ecx + esi]
c01020d9: 89 a8 20 50 10 c0            	mov	dword ptr [eax - 1072672736], ebp
c01020df: 81 fa ff 0f 00 00            	cmp	edx, 4095
c01020e5: 77 3b                        	ja	0xc0102122 <AllocHeapEx+0x14c>
c01020e7: c6 80 28 50 10 c0 00         	mov	byte ptr [eax - 1072672728], 0
c01020ee: eb 32                        	jmp	0xc0102122 <AllocHeapEx+0x14c>
c01020f0: 40                           	inc	eax
c01020f1: 83 c1 0c                     	add	ecx, 12
c01020f4: 83 f8 10                     	cmp	eax, 16
c01020f7: 75 bf                        	jne	0xc01020b8 <AllocHeapEx+0xe2>
c01020f9: 83 ec 0c                     	sub	esp, 12
c01020fc: 6a 06                        	push	6
c01020fe: eb 2b                        	jmp	0xc010212b <AllocHeapEx+0x155>
c0102100: 83 3c 24 01                  	cmp	dword ptr [esp], 1
c0102104: 57                           	push	edi
c0102105: 19 c0                        	sbb	eax, eax
c0102107: 57                           	push	edi
c0102108: 83 e0 10                     	and	eax, 16
c010210b: 6a 00                        	push	0
c010210d: 83 c0 03                     	add	eax, 3
c0102110: 6a 00                        	push	0
c0102112: 50                           	push	eax
c0102113: 56                           	push	esi
c0102114: 6a 00                        	push	0
c0102116: 6a 00                        	push	0
c0102118: e8 29 07 00 00               	call	0xc0102846 <MapVirt>
c010211d: 83 c4 20                     	add	esp, 32
c0102120: 89 c1                        	mov	ecx, eax
c0102122: 85 c9                        	test	ecx, ecx
c0102124: 75 0a                        	jne	0xc0102130 <AllocHeapEx+0x15a>
c0102126: 83 ec 0c                     	sub	esp, 12
c0102129: 6a 05                        	push	5
c010212b: e8 05 11 00 00               	call	0xc0103235 <Panic>
c0102130: 8d 79 10                     	lea	edi, [ecx + 16]
c0102133: 89 c8                        	mov	eax, ecx
c0102135: ba 10 00 00 00               	mov	edx, 16
c010213a: 89 4c 24 0c                  	mov	dword ptr [esp + 12], ecx
c010213e: 8d 6c 31 f0                  	lea	ebp, [ecx + esi - 16]
c0102142: e8 62 fb ff ff               	call	0xc0101ca9 <SetSizeTags>
c0102147: 8d 56 e0                     	lea	edx, [esi - 32]
c010214a: 89 f8                        	mov	eax, edi
c010214c: 31 f6                        	xor	esi, esi
c010214e: e8 56 fb ff ff               	call	0xc0101ca9 <SetSizeTags>
c0102153: ba 10 00 00 00               	mov	edx, 16
c0102158: 89 e8                        	mov	eax, ebp
c010215a: e8 4a fb ff ff               	call	0xc0101ca9 <SetSizeTags>
c010215f: 8b 4c 24 0c                  	mov	ecx, dword ptr [esp + 12]
c0102163: 8b 14 24                     	mov	edx, dword ptr [esp]
c0102166: 83 09 01                     	or	dword ptr [ecx], 1
c0102169: 89 c8                        	mov	eax, ecx
c010216b: 89 71 18                     	mov	dword ptr [ecx + 24], esi
c010216e: 89 71 14                     	mov	dword ptr [ecx + 20], esi
c0102171: 83 4d 00 01                  	or	dword ptr [ebp], 1
c0102175: 83 61 10 fe                  	and	dword ptr [ecx + 16], -2
c0102179: e8 3e fb ff ff               	call	0xc0101cbc <MarkSwappability>
c010217e: 8b 14 24                     	mov	edx, dword ptr [esp]
c0102181: 89 e8                        	mov	eax, ebp
c0102183: e8 34 fb ff ff               	call	0xc0101cbc <MarkSwappability>
c0102188: 8b 14 24                     	mov	edx, dword ptr [esp]
c010218b: 89 f8                        	mov	eax, edi
c010218d: e8 2a fb ff ff               	call	0xc0101cbc <MarkSwappability>
c0102192: 8b 4c 24 0c                  	mov	ecx, dword ptr [esp + 12]
c0102196: 8b 41 10                     	mov	eax, dword ptr [ecx + 16]
c0102199: 83 e0 fc                     	and	eax, -4
c010219c: 83 e8 08                     	sub	eax, 8
c010219f: e8 2f fb ff ff               	call	0xc0101cd3 <GetInsertionIndex>
c01021a4: 89 d9                        	mov	ecx, ebx
c01021a6: 89 c2                        	mov	edx, eax
c01021a8: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01021ac: 89 3c 90                     	mov	dword ptr [eax + 4*edx], edi
c01021af: 89 f8                        	mov	eax, edi
c01021b1: e8 b7 fd ff ff               	call	0xc0101f6d <AllocateBlock>
c01021b6: 52                           	push	edx
c01021b7: 89 c6                        	mov	esi, eax
c01021b9: 52                           	push	edx
c01021ba: 83 c6 04                     	add	esi, 4
c01021bd: ff 74 24 10                  	push	dword ptr [esp + 16]
c01021c1: 68 30 71 10 c0               	push	3222303024
c01021c6: e8 4e 0e 00 00               	call	0xc0103019 <ReleaseSpinlockAndLower>
c01021cb: 83 c4 10                     	add	esp, 16
c01021ce: f6 44 24 34 02               	test	byte ptr [esp + 52], 2
c01021d3: 74 11                        	je	0xc01021e6 <AllocHeapEx+0x210>
c01021d5: 50                           	push	eax
c01021d6: 53                           	push	ebx
c01021d7: 6a 00                        	push	0
c01021d9: 56                           	push	esi
c01021da: e8 0a f0 ff ff               	call	0xc01011e9 <memset>
c01021df: 83 c4 10                     	add	esp, 16
c01021e2: eb 02                        	jmp	0xc01021e6 <AllocHeapEx+0x210>
c01021e4: 31 f6                        	xor	esi, esi
c01021e6: 83 c4 1c                     	add	esp, 28
c01021e9: 89 f0                        	mov	eax, esi
c01021eb: 5b                           	pop	ebx
c01021ec: 5e                           	pop	esi
c01021ed: 5f                           	pop	edi
c01021ee: 5d                           	pop	ebp
c01021ef: c3                           	ret

c01021f0 <AllocHeap>:
c01021f0: 83 ec 14                     	sub	esp, 20
c01021f3: 6a 00                        	push	0
c01021f5: ff 74 24 1c                  	push	dword ptr [esp + 28]
c01021f9: e8 d8 fd ff ff               	call	0xc0101fd6 <AllocHeapEx>
c01021fe: 83 c4 1c                     	add	esp, 28
c0102201: c3                           	ret

c0102202 <AllocHeapZero>:
c0102202: 83 ec 14                     	sub	esp, 20
c0102205: 6a 02                        	push	2
c0102207: ff 74 24 1c                  	push	dword ptr [esp + 28]
c010220b: e8 c6 fd ff ff               	call	0xc0101fd6 <AllocHeapEx>
c0102210: 83 c4 1c                     	add	esp, 28
c0102213: c3                           	ret

c0102214 <FreeHeap>:
c0102214: 56                           	push	esi
c0102215: 53                           	push	ebx
c0102216: 50                           	push	eax
c0102217: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c010221b: 85 db                        	test	ebx, ebx
c010221d: 74 2f                        	je	0xc010224e <FreeHeap+0x3a>
c010221f: 31 d2                        	xor	edx, edx
c0102221: 89 53 04                     	mov	dword ptr [ebx + 4], edx
c0102224: 89 13                        	mov	dword ptr [ebx], edx
c0102226: 51                           	push	ecx
c0102227: 51                           	push	ecx
c0102228: 6a 01                        	push	1
c010222a: 68 30 71 10 c0               	push	3222303024
c010222f: e8 93 0d 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c0102234: 89 c6                        	mov	esi, eax
c0102236: 8d 43 fc                     	lea	eax, [ebx - 4]
c0102239: e8 f6 fb ff ff               	call	0xc0101e34 <AddBlock.isra.0>
c010223e: 5b                           	pop	ebx
c010223f: 58                           	pop	eax
c0102240: 56                           	push	esi
c0102241: 68 30 71 10 c0               	push	3222303024
c0102246: e8 ce 0d 00 00               	call	0xc0103019 <ReleaseSpinlockAndLower>
c010224b: 83 c4 10                     	add	esp, 16
c010224e: 58                           	pop	eax
c010224f: 5b                           	pop	ebx
c0102250: 5e                           	pop	esi
c0102251: c3                           	ret

c0102252 <ReallocHeap>:
c0102252: 55                           	push	ebp
c0102253: 57                           	push	edi
c0102254: 56                           	push	esi
c0102255: 53                           	push	ebx
c0102256: 83 ec 1c                     	sub	esp, 28
c0102259: 8b 7c 24 30                  	mov	edi, dword ptr [esp + 48]
c010225d: 8b 6c 24 34                  	mov	ebp, dword ptr [esp + 52]
c0102261: 85 ff                        	test	edi, edi
c0102263: 0f 84 3b 01 00 00            	je	0xc01023a4 <ReallocHeap+0x152>
c0102269: 85 ed                        	test	ebp, ebp
c010226b: 0f 84 33 01 00 00            	je	0xc01023a4 <ReallocHeap+0x152>
c0102271: 8b 5f fc                     	mov	ebx, dword ptr [edi - 4]
c0102274: 8d 47 fc                     	lea	eax, [edi - 4]
c0102277: 89 44 24 04                  	mov	dword ptr [esp + 4], eax
c010227b: 8d 45 08                     	lea	eax, [ebp + 8]
c010227e: 83 e3 fc                     	and	ebx, -4
c0102281: 89 04 24                     	mov	dword ptr [esp], eax
c0102284: 39 d8                        	cmp	eax, ebx
c0102286: 74 5d                        	je	0xc01022e5 <ReallocHeap+0x93>
c0102288: 8b 0c 24                     	mov	ecx, dword ptr [esp]
c010228b: 89 d8                        	mov	eax, ebx
c010228d: 29 c8                        	sub	eax, ecx
c010228f: 89 44 24 0c                  	mov	dword ptr [esp + 12], eax
c0102293: 39 d9                        	cmp	ecx, ebx
c0102295: 73 55                        	jae	0xc01022ec <ReallocHeap+0x9a>
c0102297: 83 f8 0f                     	cmp	eax, 15
c010229a: 76 49                        	jbe	0xc01022e5 <ReallocHeap+0x93>
c010229c: 51                           	push	ecx
c010229d: 51                           	push	ecx
c010229e: 6a 01                        	push	1
c01022a0: 68 30 71 10 c0               	push	3222303024
c01022a5: e8 1d 0d 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c01022aa: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c01022ae: 8b 54 24 10                  	mov	edx, dword ptr [esp + 16]
c01022b2: 89 c6                        	mov	esi, eax
c01022b4: 8b 44 24 14                  	mov	eax, dword ptr [esp + 20]
c01022b8: 83 e3 fc                     	and	ebx, -4
c01022bb: e8 e9 f9 ff ff               	call	0xc0101ca9 <SetSizeTags>
c01022c0: 01 c3                        	add	ebx, eax
c01022c2: 8b 54 24 1c                  	mov	edx, dword ptr [esp + 28]
c01022c6: 89 d8                        	mov	eax, ebx
c01022c8: e8 dc f9 ff ff               	call	0xc0101ca9 <SetSizeTags>
c01022cd: 83 23 fe                     	and	dword ptr [ebx], -2
c01022d0: e8 5f fb ff ff               	call	0xc0101e34 <AddBlock.isra.0>
c01022d5: 5b                           	pop	ebx
c01022d6: 5d                           	pop	ebp
c01022d7: 56                           	push	esi
c01022d8: 68 30 71 10 c0               	push	3222303024
c01022dd: e8 37 0d 00 00               	call	0xc0103019 <ReleaseSpinlockAndLower>
c01022e2: 83 c4 10                     	add	esp, 16
c01022e5: 89 fb                        	mov	ebx, edi
c01022e7: e9 ba 00 00 00               	jmp	0xc01023a6 <ReallocHeap+0x154>
c01022ec: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01022f0: 8d 34 18                     	lea	esi, [eax + ebx]
c01022f3: 8b 06                        	mov	eax, dword ptr [esi]
c01022f5: 89 c1                        	mov	ecx, eax
c01022f7: 83 e1 fc                     	and	ecx, -4
c01022fa: 89 4c 24 08                  	mov	dword ptr [esp + 8], ecx
c01022fe: 8b 0c 24                     	mov	ecx, dword ptr [esp]
c0102301: 29 d9                        	sub	ecx, ebx
c0102303: 39 4c 24 08                  	cmp	dword ptr [esp + 8], ecx
c0102307: 72 78                        	jb	0xc0102381 <ReallocHeap+0x12f>
c0102309: a8 01                        	test	al, 1
c010230b: 75 74                        	jne	0xc0102381 <ReallocHeap+0x12f>
c010230d: 8b 4c 24 08                  	mov	ecx, dword ptr [esp + 8]
c0102311: 8b 44 24 0c                  	mov	eax, dword ptr [esp + 12]
c0102315: 01 c8                        	add	eax, ecx
c0102317: 89 44 24 0c                  	mov	dword ptr [esp + 12], eax
c010231b: 52                           	push	edx
c010231c: 52                           	push	edx
c010231d: 6a 01                        	push	1
c010231f: 68 30 71 10 c0               	push	3222303024
c0102324: e8 9e 0c 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c0102329: 89 c5                        	mov	ebp, eax
c010232b: 8b 06                        	mov	eax, dword ptr [esi]
c010232d: 83 e0 fc                     	and	eax, -4
c0102330: 83 e8 08                     	sub	eax, 8
c0102333: e8 9b f9 ff ff               	call	0xc0101cd3 <GetInsertionIndex>
c0102338: 89 f2                        	mov	edx, esi
c010233a: e8 aa fa ff ff               	call	0xc0101de9 <RemoveBlock>
c010233f: 83 c4 10                     	add	esp, 16
c0102342: 83 7c 24 0c 07               	cmp	dword ptr [esp + 12], 7
c0102347: 77 11                        	ja	0xc010235a <ReallocHeap+0x108>
c0102349: 8b 54 24 08                  	mov	edx, dword ptr [esp + 8]
c010234d: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0102351: 01 da                        	add	edx, ebx
c0102353: e8 51 f9 ff ff               	call	0xc0101ca9 <SetSizeTags>
c0102358: eb 1f                        	jmp	0xc0102379 <ReallocHeap+0x127>
c010235a: 8b 14 24                     	mov	edx, dword ptr [esp]
c010235d: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0102361: e8 43 f9 ff ff               	call	0xc0101ca9 <SetSizeTags>
c0102366: 8b 54 24 0c                  	mov	edx, dword ptr [esp + 12]
c010236a: 89 f0                        	mov	eax, esi
c010236c: e8 38 f9 ff ff               	call	0xc0101ca9 <SetSizeTags>
c0102371: 83 26 fe                     	and	dword ptr [esi], -2
c0102374: e8 bb fa ff ff               	call	0xc0101e34 <AddBlock.isra.0>
c0102379: 50                           	push	eax
c010237a: 50                           	push	eax
c010237b: 55                           	push	ebp
c010237c: e9 57 ff ff ff               	jmp	0xc01022d8 <ReallocHeap+0x86>
c0102381: 83 ec 0c                     	sub	esp, 12
c0102384: 55                           	push	ebp
c0102385: e8 66 fe ff ff               	call	0xc01021f0 <AllocHeap>
c010238a: 83 c4 0c                     	add	esp, 12
c010238d: 55                           	push	ebp
c010238e: 89 c3                        	mov	ebx, eax
c0102390: 50                           	push	eax
c0102391: 57                           	push	edi
c0102392: e8 0e ee ff ff               	call	0xc01011a5 <memcpy>
c0102397: 89 3c 24                     	mov	dword ptr [esp], edi
c010239a: e8 75 fe ff ff               	call	0xc0102214 <FreeHeap>
c010239f: 83 c4 10                     	add	esp, 16
c01023a2: eb 02                        	jmp	0xc01023a6 <ReallocHeap+0x154>
c01023a4: 31 db                        	xor	ebx, ebx
c01023a6: 83 c4 1c                     	add	esp, 28
c01023a9: 89 d8                        	mov	eax, ebx
c01023ab: 5b                           	pop	ebx
c01023ac: 5e                           	pop	esi
c01023ad: 5f                           	pop	edi
c01023ae: 5d                           	pop	ebp
c01023af: c3                           	ret

c01023b0 <InitHeap>:
c01023b0: 83 ec 10                     	sub	esp, 16
c01023b3: 6a 02                        	push	2
c01023b5: 68 15 47 10 c0               	push	3222292245
c01023ba: 68 30 71 10 c0               	push	3222303024
c01023bf: e8 cf 0b 00 00               	call	0xc0102f93 <InitSpinlock>
c01023c4: 83 c4 1c                     	add	esp, 28
c01023c7: c3                           	ret

c01023c8 <IsBitmapEntryFree>:
c01023c8: 89 c1                        	mov	ecx, eax
c01023ca: ba 01 00 00 00               	mov	edx, 1
c01023cf: c1 e8 05                     	shr	eax, 5
c01023d2: d3 e2                        	shl	edx, cl
c01023d4: 23 14 85 40 c0 10 c0         	and	edx, dword ptr [4*eax - 1072644032]
c01023db: 0f 95 c0                     	setne	al
c01023de: c3                           	ret

c01023df <AllocateBitmapEntry>:
c01023df: 89 c2                        	mov	edx, eax
c01023e1: 89 c1                        	mov	ecx, eax
c01023e3: b8 fe ff ff ff               	mov	eax, 4294967294
c01023e8: c1 ea 05                     	shr	edx, 5
c01023eb: d3 c0                        	rol	eax, cl
c01023ed: 21 04 95 40 c0 10 c0         	and	dword ptr [4*edx - 1072644032], eax
c01023f4: c3                           	ret

c01023f5 <DeallocateBitmapEntry>:
c01023f5: 89 c2                        	mov	edx, eax
c01023f7: 89 c1                        	mov	ecx, eax
c01023f9: b8 01 00 00 00               	mov	eax, 1
c01023fe: c1 ea 05                     	shr	edx, 5
c0102401: d3 e0                        	shl	eax, cl
c0102403: 09 04 95 40 c0 10 c0         	or	dword ptr [4*edx - 1072644032], eax
c010240a: c3                           	ret

c010240b <EvictPagesIfNeeded>:
c010240b: 83 3d 20 c0 10 c0 1f         	cmp	dword ptr [-1072644064], 31
c0102412: 76 01                        	jbe	0xc0102415 <EvictPagesIfNeeded+0xa>
c0102414: c3                           	ret
c0102415: 83 ec 0c                     	sub	esp, 12
c0102418: e8 1a 04 00 00               	call	0xc0102837 <EvictVirt>
c010241d: 83 3d 20 c0 10 c0 1f         	cmp	dword ptr [-1072644064], 31
c0102424: 76 f2                        	jbe	0xc0102418 <EvictPagesIfNeeded+0xd>
c0102426: 83 c4 0c                     	add	esp, 12
c0102429: c3                           	ret

c010242a <DeallocPhys>:
c010242a: 56                           	push	esi
c010242b: 53                           	push	ebx
c010242c: 83 ec 0c                     	sub	esp, 12
c010242f: 8b 5c 24 18                  	mov	ebx, dword ptr [esp + 24]
c0102433: 6a 01                        	push	1
c0102435: 68 00 c0 10 c0               	push	3222323200
c010243a: c1 eb 0c                     	shr	ebx, 12
c010243d: e8 85 0b 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c0102442: ff 05 20 c0 10 c0            	inc	dword ptr [-1072644064]
c0102448: 89 c6                        	mov	esi, eax
c010244a: 89 d8                        	mov	eax, ebx
c010244c: e8 a4 ff ff ff               	call	0xc01023f5 <DeallocateBitmapEntry>
c0102451: a1 28 c0 10 c0               	mov	eax, dword ptr [3222323240]
c0102456: 83 c4 10                     	add	esp, 16
c0102459: 85 c0                        	test	eax, eax
c010245b: 74 12                        	je	0xc010246f <DeallocPhys+0x45>
c010245d: 8b 15 24 c0 10 c0            	mov	edx, dword ptr [-1072644060]
c0102463: 8d 4a 01                     	lea	ecx, [edx + 1]
c0102466: 89 1c 90                     	mov	dword ptr [eax + 4*edx], ebx
c0102469: 89 0d 24 c0 10 c0            	mov	dword ptr [-1072644060], ecx
c010246f: 50                           	push	eax
c0102470: 50                           	push	eax
c0102471: 56                           	push	esi
c0102472: 68 00 c0 10 c0               	push	3222323200
c0102477: e8 9d 0b 00 00               	call	0xc0103019 <ReleaseSpinlockAndLower>
c010247c: 83 c4 14                     	add	esp, 20
c010247f: 5b                           	pop	ebx
c0102480: 5e                           	pop	esi
c0102481: c3                           	ret

c0102482 <DeallocPhysContiguous>:
c0102482: 56                           	push	esi
c0102483: 53                           	push	ebx
c0102484: 52                           	push	edx
c0102485: 8b 44 24 14                  	mov	eax, dword ptr [esp + 20]
c0102489: 8b 74 24 10                  	mov	esi, dword ptr [esp + 16]
c010248d: 8d 98 ff 0f 00 00            	lea	ebx, [eax + 4095]
c0102493: 81 e3 00 f0 ff ff            	and	ebx, 4294963200
c0102499: 01 f3                        	add	ebx, esi
c010249b: 39 de                        	cmp	esi, ebx
c010249d: 74 14                        	je	0xc01024b3 <DeallocPhysContiguous+0x31>
c010249f: 83 ec 0c                     	sub	esp, 12
c01024a2: 56                           	push	esi
c01024a3: 81 c6 00 10 00 00            	add	esi, 4096
c01024a9: e8 7c ff ff ff               	call	0xc010242a <DeallocPhys>
c01024ae: 83 c4 10                     	add	esp, 16
c01024b1: eb e8                        	jmp	0xc010249b <DeallocPhysContiguous+0x19>
c01024b3: 58                           	pop	eax
c01024b4: 5b                           	pop	ebx
c01024b5: 5e                           	pop	esi
c01024b6: c3                           	ret

c01024b7 <AllocPhys>:
c01024b7: 56                           	push	esi
c01024b8: 53                           	push	ebx
c01024b9: 83 ec 08                     	sub	esp, 8
c01024bc: 6a 00                        	push	0
c01024be: 68 0b 24 10 c0               	push	3222283275
c01024c3: 6a 00                        	push	0
c01024c5: e8 bb f5 ff ff               	call	0xc0101a85 <DeferUntilIrql>
c01024ca: 59                           	pop	ecx
c01024cb: 5b                           	pop	ebx
c01024cc: 6a 01                        	push	1
c01024ce: 68 00 c0 10 c0               	push	3222323200
c01024d3: e8 ef 0a 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c01024d8: 8b 15 28 c0 10 c0            	mov	edx, dword ptr [-1072644056]
c01024de: 83 c4 10                     	add	esp, 16
c01024e1: 89 c6                        	mov	esi, eax
c01024e3: 85 d2                        	test	edx, edx
c01024e5: 75 16                        	jne	0xc01024fd <AllocPhys+0x46>
c01024e7: 31 db                        	xor	ebx, ebx
c01024e9: 89 d8                        	mov	eax, ebx
c01024eb: e8 d8 fe ff ff               	call	0xc01023c8 <IsBitmapEntryFree>
c01024f0: 84 c0                        	test	al, al
c01024f2: 75 17                        	jne	0xc010250b <AllocPhys+0x54>
c01024f4: 43                           	inc	ebx
c01024f5: 81 e3 ff ff 0f 00            	and	ebx, 1048575
c01024fb: eb ec                        	jmp	0xc01024e9 <AllocPhys+0x32>
c01024fd: a1 24 c0 10 c0               	mov	eax, dword ptr [3222323236]
c0102502: 48                           	dec	eax
c0102503: a3 24 c0 10 c0               	mov	dword ptr [3222323236], eax
c0102508: 8b 1c 82                     	mov	ebx, dword ptr [edx + 4*eax]
c010250b: 89 d8                        	mov	eax, ebx
c010250d: e8 cd fe ff ff               	call	0xc01023df <AllocateBitmapEntry>
c0102512: ff 0d 20 c0 10 c0            	dec	dword ptr [-1072644064]
c0102518: 50                           	push	eax
c0102519: 50                           	push	eax
c010251a: 56                           	push	esi
c010251b: 68 00 c0 10 c0               	push	3222323200
c0102520: e8 f4 0a 00 00               	call	0xc0103019 <ReleaseSpinlockAndLower>
c0102525: 89 d8                        	mov	eax, ebx
c0102527: 83 c4 14                     	add	esp, 20
c010252a: c1 e0 0c                     	shl	eax, 12
c010252d: 5b                           	pop	ebx
c010252e: 5e                           	pop	esi
c010252f: c3                           	ret

c0102530 <AllocPhysContiguous>:
c0102530: 55                           	push	ebp
c0102531: 57                           	push	edi
c0102532: 56                           	push	esi
c0102533: 53                           	push	ebx
c0102534: 83 ec 1c                     	sub	esp, 28
c0102537: 83 3d 28 c0 10 c0 00         	cmp	dword ptr [-1072644056], 0
c010253e: 8b 54 24 38                  	mov	edx, dword ptr [esp + 56]
c0102542: 0f 84 9d 00 00 00            	je	0xc01025e5 <AllocPhysContiguous+0xb5>
c0102548: 8b 44 24 30                  	mov	eax, dword ptr [esp + 48]
c010254c: 89 d6                        	mov	esi, edx
c010254e: c1 ee 0c                     	shr	esi, 12
c0102551: 8d 98 ff 0f 00 00            	lea	ebx, [eax + 4095]
c0102557: 8b 44 24 34                  	mov	eax, dword ptr [esp + 52]
c010255b: c1 eb 0c                     	shr	ebx, 12
c010255e: 05 ff 0f 00 00               	add	eax, 4095
c0102563: c1 e8 0c                     	shr	eax, 12
c0102566: 89 44 24 04                  	mov	dword ptr [esp + 4], eax
c010256a: 85 d2                        	test	edx, edx
c010256c: 75 08                        	jne	0xc0102576 <AllocPhysContiguous+0x46>
c010256e: a1 1c c0 10 c0               	mov	eax, dword ptr [3222323228]
c0102573: 8d 70 01                     	lea	esi, [eax + 1]
c0102576: 57                           	push	edi
c0102577: 57                           	push	edi
c0102578: 6a 01                        	push	1
c010257a: 68 00 c0 10 c0               	push	3222323200
c010257f: e8 43 0a 00 00               	call	0xc0102fc7 <AcquireSpinlock>
c0102584: 83 c4 10                     	add	esp, 16
c0102587: 89 c7                        	mov	edi, eax
c0102589: 8d 43 20                     	lea	eax, [ebx + 32]
c010258c: 3b 05 20 c0 10 c0            	cmp	eax, dword ptr [-1072644064]
c0102592: 73 41                        	jae	0xc01025d5 <AllocPhysContiguous+0xa5>
c0102594: 8b 44 24 3c                  	mov	eax, dword ptr [esp + 60]
c0102598: 31 ed                        	xor	ebp, ebp
c010259a: c1 e8 0c                     	shr	eax, 12
c010259d: 89 44 24 08                  	mov	dword ptr [esp + 8], eax
c01025a1: eb 2c                        	jmp	0xc01025cf <AllocPhysContiguous+0x9f>
c01025a3: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01025a7: e8 1c fe ff ff               	call	0xc01023c8 <IsBitmapEntryFree>
c01025ac: 84 c0                        	test	al, al
c01025ae: 0f 84 c2 00 00 00            	je	0xc0102676 <AllocPhysContiguous+0x146>
c01025b4: 83 7c 24 3c 00               	cmp	dword ptr [esp + 60], 0
c01025b9: 74 31                        	je	0xc01025ec <AllocPhysContiguous+0xbc>
c01025bb: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01025bf: 31 d2                        	xor	edx, edx
c01025c1: f7 74 24 08                  	div	dword ptr [esp + 8]
c01025c5: 85 d2                        	test	edx, edx
c01025c7: 75 23                        	jne	0xc01025ec <AllocPhysContiguous+0xbc>
c01025c9: ff 44 24 04                  	inc	dword ptr [esp + 4]
c01025cd: 89 d5                        	mov	ebp, edx
c01025cf: 39 74 24 04                  	cmp	dword ptr [esp + 4], esi
c01025d3: 72 ce                        	jb	0xc01025a3 <AllocPhysContiguous+0x73>
c01025d5: 53                           	push	ebx
c01025d6: 53                           	push	ebx
c01025d7: 57                           	push	edi
c01025d8: 68 00 c0 10 c0               	push	3222323200
c01025dd: e8 37 0a 00 00               	call	0xc0103019 <ReleaseSpinlockAndLower>
c01025e2: 83 c4 10                     	add	esp, 16
c01025e5: 31 c0                        	xor	eax, eax
c01025e7: e9 91 00 00 00               	jmp	0xc010267d <AllocPhysContiguous+0x14d>
c01025ec: 8d 55 01                     	lea	edx, [ebp + 1]
c01025ef: 39 d3                        	cmp	ebx, edx
c01025f1: 75 d6                        	jne	0xc01025c9 <AllocPhysContiguous+0x99>
c01025f3: 8b 5c 24 04                  	mov	ebx, dword ptr [esp + 4]
c01025f7: 29 eb                        	sub	ebx, ebp
c01025f9: 39 5c 24 04                  	cmp	dword ptr [esp + 4], ebx
c01025fd: 72 60                        	jb	0xc010265f <AllocPhysContiguous+0x12f>
c01025ff: 89 d8                        	mov	eax, ebx
c0102601: e8 d9 fd ff ff               	call	0xc01023df <AllocateBitmapEntry>
c0102606: a1 24 c0 10 c0               	mov	eax, dword ptr [3222323236]
c010260b: 8b 35 28 c0 10 c0            	mov	esi, dword ptr [-1072644056]
c0102611: 31 d2                        	xor	edx, edx
c0102613: 89 44 24 0c                  	mov	dword ptr [esp + 12], eax
c0102617: 89 f1                        	mov	ecx, esi
c0102619: 8b 44 24 0c                  	mov	eax, dword ptr [esp + 12]
c010261d: 39 c2                        	cmp	edx, eax
c010261f: 74 3b                        	je	0xc010265c <AllocPhysContiguous+0x12c>
c0102621: 89 cd                        	mov	ebp, ecx
c0102623: 8d 42 01                     	lea	eax, [edx + 1]
c0102626: 83 c1 04                     	add	ecx, 4
c0102629: 89 44 24 08                  	mov	dword ptr [esp + 8], eax
c010262d: 3b 5d 00                     	cmp	ebx, dword ptr [ebp]
c0102630: 75 24                        	jne	0xc0102656 <AllocPhysContiguous+0x126>
c0102632: 8b 44 24 0c                  	mov	eax, dword ptr [esp + 12]
c0102636: 51                           	push	ecx
c0102637: 48                           	dec	eax
c0102638: a3 24 c0 10 c0               	mov	dword ptr [3222323236], eax
c010263d: 29 d0                        	sub	eax, edx
c010263f: c1 e0 02                     	shl	eax, 2
c0102642: 50                           	push	eax
c0102643: 8b 44 24 10                  	mov	eax, dword ptr [esp + 16]
c0102647: 8d 04 86                     	lea	eax, [esi + 4*eax]
c010264a: 50                           	push	eax
c010264b: 55                           	push	ebp
c010264c: e8 69 eb ff ff               	call	0xc01011ba <memmove>
c0102651: 83 c4 10                     	add	esp, 16
c0102654: eb 06                        	jmp	0xc010265c <AllocPhysContiguous+0x12c>
c0102656: 8b 54 24 08                  	mov	edx, dword ptr [esp + 8]
c010265a: eb bd                        	jmp	0xc0102619 <AllocPhysContiguous+0xe9>
c010265c: 43                           	inc	ebx
c010265d: eb 9a                        	jmp	0xc01025f9 <AllocPhysContiguous+0xc9>
c010265f: 50                           	push	eax
c0102660: 50                           	push	eax
c0102661: 57                           	push	edi
c0102662: 68 00 c0 10 c0               	push	3222323200
c0102667: e8 ad 09 00 00               	call	0xc0103019 <ReleaseSpinlockAndLower>
c010266c: 89 d8                        	mov	eax, ebx
c010266e: 83 c4 10                     	add	esp, 16
c0102671: c1 e0 0c                     	shl	eax, 12
c0102674: eb 07                        	jmp	0xc010267d <AllocPhysContiguous+0x14d>
c0102676: 31 d2                        	xor	edx, edx
c0102678: e9 4c ff ff ff               	jmp	0xc01025c9 <AllocPhysContiguous+0x99>
c010267d: 83 c4 1c                     	add	esp, 28
c0102680: 5b                           	pop	ebx
c0102681: 5e                           	pop	esi
c0102682: 5f                           	pop	edi
c0102683: 5d                           	pop	ebp
c0102684: c3                           	ret

c0102685 <InitPhys>:
c0102685: 57                           	push	edi
c0102686: 56                           	push	esi
c0102687: 31 f6                        	xor	esi, esi
c0102689: 53                           	push	ebx
c010268a: 50                           	push	eax
c010268b: 6a 02                        	push	2
c010268d: 68 f8 45 10 c0               	push	3222291960
c0102692: 68 00 c0 10 c0               	push	3222323200
c0102697: e8 f7 08 00 00               	call	0xc0102f93 <InitSpinlock>
c010269c: 83 c4 10                     	add	esp, 16
c010269f: 89 f0                        	mov	eax, esi
c01026a1: 83 ec 0c                     	sub	esp, 12
c01026a4: 46                           	inc	esi
c01026a5: 50                           	push	eax
c01026a6: e8 c4 0e 00 00               	call	0xc010356f <ArchGetMemory>
c01026ab: 83 c4 10                     	add	esp, 16
c01026ae: 85 c0                        	test	eax, eax
c01026b0: 74 35                        	je	0xc01026e7 <InitPhys+0x62>
c01026b2: 8b 10                        	mov	edx, dword ptr [eax]
c01026b4: 8d 9a ff 0f 00 00            	lea	ebx, [edx + 4095]
c01026ba: 03 50 04                     	add	edx, dword ptr [eax + 4]
c01026bd: 89 d7                        	mov	edi, edx
c01026bf: c1 eb 0c                     	shr	ebx, 12
c01026c2: c1 ef 0c                     	shr	edi, 12
c01026c5: 39 fb                        	cmp	ebx, edi
c01026c7: 73 d6                        	jae	0xc010269f <InitPhys+0x1a>
c01026c9: 89 d8                        	mov	eax, ebx
c01026cb: e8 25 fd ff ff               	call	0xc01023f5 <DeallocateBitmapEntry>
c01026d0: ff 05 20 c0 10 c0            	inc	dword ptr [-1072644064]
c01026d6: 39 1d 1c c0 10 c0            	cmp	dword ptr [-1072644068], ebx
c01026dc: 73 06                        	jae	0xc01026e4 <InitPhys+0x5f>
c01026de: 89 1d 1c c0 10 c0            	mov	dword ptr [-1072644068], ebx
c01026e4: 43                           	inc	ebx
c01026e5: eb de                        	jmp	0xc01026c5 <InitPhys+0x40>
c01026e7: 5b                           	pop	ebx
c01026e8: 5e                           	pop	esi
c01026e9: 5f                           	pop	edi
c01026ea: c3                           	ret

c01026eb <ReinitPhys>:
c01026eb: 56                           	push	esi
c01026ec: 53                           	push	ebx
c01026ed: 31 db                        	xor	ebx, ebx
c01026ef: 83 ec 0c                     	sub	esp, 12
c01026f2: a1 1c c0 10 c0               	mov	eax, dword ptr [3222323228]
c01026f7: 6a 00                        	push	0
c01026f9: 8d 04 85 04 00 00 00         	lea	eax, [4*eax + 4]
c0102700: 6a 00                        	push	0
c0102702: 6a 13                        	push	19
c0102704: 50                           	push	eax
c0102705: 6a 00                        	push	0
c0102707: 6a 00                        	push	0
c0102709: e8 38 01 00 00               	call	0xc0102846 <MapVirt>
c010270e: 83 c4 20                     	add	esp, 32
c0102711: a3 28 c0 10 c0               	mov	dword ptr [3222323240], eax
c0102716: 89 c6                        	mov	esi, eax
c0102718: 89 d8                        	mov	eax, ebx
c010271a: e8 a9 fc ff ff               	call	0xc01023c8 <IsBitmapEntryFree>
c010271f: 84 c0                        	test	al, al
c0102721: 74 11                        	je	0xc0102734 <ReinitPhys+0x49>
c0102723: a1 24 c0 10 c0               	mov	eax, dword ptr [3222323236]
c0102728: 8d 50 01                     	lea	edx, [eax + 1]
c010272b: 89 1c 86                     	mov	dword ptr [esi + 4*eax], ebx
c010272e: 89 15 24 c0 10 c0            	mov	dword ptr [-1072644060], edx
c0102734: 43                           	inc	ebx
c0102735: 81 fb 00 00 10 00            	cmp	ebx, 1048576
c010273b: 75 db                        	jne	0xc0102718 <ReinitPhys+0x2d>
c010273d: bb ff ff 0f 00               	mov	ebx, 1048575
c0102742: 2b 1d 1c c0 10 c0            	sub	ebx, dword ptr [-1072644068]
c0102748: be 40 c0 12 c0               	mov	esi, 3222454336
c010274d: c1 eb 11                     	shr	ebx, 17
c0102750: 89 d8                        	mov	eax, ebx
c0102752: c1 e0 0c                     	shl	eax, 12
c0102755: 29 c6                        	sub	esi, eax
c0102757: 83 eb 01                     	sub	ebx, 1
c010275a: 72 1c                        	jb	0xc0102778 <ReinitPhys+0x8d>
c010275c: 83 ec 0c                     	sub	esp, 12
c010275f: 56                           	push	esi
c0102760: 81 c6 00 10 00 00            	add	esi, 4096
c0102766: e8 8c 02 00 00               	call	0xc01029f7 <GetPhysFromVirt>
c010276b: 89 04 24                     	mov	dword ptr [esp], eax
c010276e: e8 b7 fc ff ff               	call	0xc010242a <DeallocPhys>
c0102773: 83 c4 10                     	add	esp, 16
c0102776: eb df                        	jmp	0xc0102757 <ReinitPhys+0x6c>
c0102778: 58                           	pop	eax
c0102779: 5b                           	pop	ebx
c010277a: 5e                           	pop	esi
c010277b: c3                           	ret

c010277c <VirtAvlComparator>:
c010277c: 8b 54 24 08                  	mov	edx, dword ptr [esp + 8]
c0102780: 8b 4c 24 04                  	mov	ecx, dword ptr [esp + 4]
c0102784: 31 c0                        	xor	eax, eax
c0102786: 8b 12                        	mov	edx, dword ptr [edx]
c0102788: 39 11                        	cmp	dword ptr [ecx], edx
c010278a: 74 05                        	je	0xc0102791 <VirtAvlComparator+0x15>
c010278c: 19 c0                        	sbb	eax, eax
c010278e: 83 c8 01                     	or	eax, 1
c0102791: c3                           	ret

c0102792 <GetVirtEntry.isra.0>:
c0102792: 83 ec 34                     	sub	esp, 52
c0102795: 89 54 24 10                  	mov	dword ptr [esp + 16], edx
c0102799: 8d 54 24 10                  	lea	edx, [esp + 16]
c010279d: 52                           	push	edx
c010279e: 50                           	push	eax
c010279f: e8 08 ef ff ff               	call	0xc01016ac <AvlTreeGet>
c01027a4: 83 c4 3c                     	add	esp, 60
c01027a7: c3                           	ret

c01027a8 <CreateVas>:
c01027a8: 53                           	push	ebx
c01027a9: 83 ec 14                     	sub	esp, 20
c01027ac: 6a 08                        	push	8
c01027ae: e8 3d fa ff ff               	call	0xc01021f0 <AllocHeap>
c01027b3: 89 c3                        	mov	ebx, eax
c01027b5: e8 60 ee ff ff               	call	0xc010161a <AvlTreeCreate>
c01027ba: 89 03                        	mov	dword ptr [ebx], eax
c01027bc: 5a                           	pop	edx
c01027bd: 59                           	pop	ecx
c01027be: 68 7c 27 10 c0               	push	3222284156
c01027c3: 50                           	push	eax
c01027c4: e8 7f ee ff ff               	call	0xc0101648 <AvlTreeSetComparator>
c01027c9: 89 1c 24                     	mov	dword ptr [esp], ebx
c01027cc: e8 65 0e 00 00               	call	0xc0103636 <ArchAddGlobalsToVas>
c01027d1: 83 c4 18                     	add	esp, 24
c01027d4: 89 d8                        	mov	eax, ebx
c01027d6: 5b                           	pop	ebx
c01027d7: c3                           	ret

c01027d8 <EvictPage>:
c01027d8: 56                           	push	esi
c01027d9: 53                           	push	ebx
c01027da: 51                           	push	ecx
c01027db: 8b 74 24 14                  	mov	esi, dword ptr [esp + 20]
c01027df: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c01027e3: 8a 46 04                     	mov	al, byte ptr [esi + 4]
c01027e6: a8 01                        	test	al, 1
c01027e8: 74 49                        	je	0xc0102833 <EvictPage+0x5b>
c01027ea: a8 04                        	test	al, 4
c01027ec: 74 1c                        	je	0xc010280a <EvictPage+0x32>
c01027ee: 83 e0 fe                     	and	eax, -2
c01027f1: 83 ec 0c                     	sub	esp, 12
c01027f4: 88 46 04                     	mov	byte ptr [esi + 4], al
c01027f7: ff 76 10                     	push	dword ptr [esi + 16]
c01027fa: e8 2b fc ff ff               	call	0xc010242a <DeallocPhys>
c01027ff: 58                           	pop	eax
c0102800: 5a                           	pop	edx
c0102801: 56                           	push	esi
c0102802: 53                           	push	ebx
c0102803: e8 09 0f 00 00               	call	0xc0103711 <ArchUnmap>
c0102808: eb 1b                        	jmp	0xc0102825 <EvictPage+0x4d>
c010280a: 83 e0 ee                     	and	eax, -18
c010280d: 83 c8 10                     	or	eax, 16
c0102810: 88 46 04                     	mov	byte ptr [esi + 4], al
c0102813: 52                           	push	edx
c0102814: 52                           	push	edx
c0102815: 56                           	push	esi
c0102816: 53                           	push	ebx
c0102817: e8 f5 0e 00 00               	call	0xc0103711 <ArchUnmap>
c010281c: 59                           	pop	ecx
c010281d: ff 76 10                     	push	dword ptr [esi + 16]
c0102820: e8 05 fc ff ff               	call	0xc010242a <DeallocPhys>
c0102825: 89 5c 24 20                  	mov	dword ptr [esp + 32], ebx
c0102829: 83 c4 14                     	add	esp, 20
c010282c: 5b                           	pop	ebx
c010282d: 5e                           	pop	esi
c010282e: e9 f8 0e 00 00               	jmp	0xc010372b <ArchFlushTlb>
c0102833: 58                           	pop	eax
c0102834: 5b                           	pop	ebx
c0102835: 5e                           	pop	esi
c0102836: c3                           	ret

c0102837 <EvictVirt>:
c0102837: c3                           	ret

c0102838 <GetVas>:
c0102838: 83 ec 0c                     	sub	esp, 12
c010283b: e8 09 f2 ff ff               	call	0xc0101a49 <GetCpu>
c0102840: 8b 00                        	mov	eax, dword ptr [eax]
c0102842: 83 c4 0c                     	add	esp, 12
c0102845: c3                           	ret

c0102846 <MapVirt>:
c0102846: 55                           	push	ebp
c0102847: 57                           	push	edi
c0102848: 56                           	push	esi
c0102849: 53                           	push	ebx
c010284a: 83 ec 3c                     	sub	esp, 60
c010284d: e8 e6 ff ff ff               	call	0xc0102838 <GetVas>
c0102852: 83 7c 24 50 00               	cmp	dword ptr [esp + 80], 0
c0102857: 89 c6                        	mov	esi, eax
c0102859: 74 12                        	je	0xc010286d <MapVirt+0x27>
c010285b: f6 44 24 5c 80               	test	byte ptr [esp + 92], -128
c0102860: 75 0b                        	jne	0xc010286d <MapVirt+0x27>
c0102862: 31 ed                        	xor	ebp, ebp
c0102864: 89 6c 24 54                  	mov	dword ptr [esp + 84], ebp
c0102868: e9 7e 01 00 00               	jmp	0xc01029eb <MapVirt+0x1a5>
c010286d: 8b 44 24 5c                  	mov	eax, dword ptr [esp + 92]
c0102871: f7 d0                        	not	eax
c0102873: a8 a0                        	test	al, -96
c0102875: 74 eb                        	je	0xc0102862 <MapVirt+0x1c>
c0102877: 8b 44 24 5c                  	mov	eax, dword ptr [esp + 92]
c010287b: 25 90 00 00 00               	and	eax, 144
c0102880: 3d 80 00 00 00               	cmp	eax, 128
c0102885: 74 db                        	je	0xc0102862 <MapVirt+0x1c>
c0102887: f6 44 24 5c 20               	test	byte ptr [esp + 92], 32
c010288c: 74 09                        	je	0xc0102897 <MapVirt+0x51>
c010288e: 83 7c 24 60 00               	cmp	dword ptr [esp + 96], 0
c0102893: 75 0c                        	jne	0xc01028a1 <MapVirt+0x5b>
c0102895: eb cb                        	jmp	0xc0102862 <MapVirt+0x1c>
c0102897: 8b 44 24 60                  	mov	eax, dword ptr [esp + 96]
c010289b: 0b 44 24 64                  	or	eax, dword ptr [esp + 100]
c010289f: 75 c1                        	jne	0xc0102862 <MapVirt+0x1c>
c01028a1: 8b 44 24 58                  	mov	eax, dword ptr [esp + 88]
c01028a5: 8d 98 ff 0f 00 00            	lea	ebx, [eax + 4095]
c01028ab: c1 eb 0c                     	shr	ebx, 12
c01028ae: 83 7c 24 54 00               	cmp	dword ptr [esp + 84], 0
c01028b3: 75 08                        	jne	0xc01028bd <MapVirt+0x77>
c01028b5: 31 ff                        	xor	edi, edi
c01028b7: 89 7c 24 54                  	mov	dword ptr [esp + 84], edi
c01028bb: eb 36                        	jmp	0xc01028f3 <MapVirt+0xad>
c01028bd: 89 df                        	mov	edi, ebx
c01028bf: 8b 6c 24 54                  	mov	ebp, dword ptr [esp + 84]
c01028c3: c1 e7 0c                     	shl	edi, 12
c01028c6: 03 7c 24 54                  	add	edi, dword ptr [esp + 84]
c01028ca: 39 fd                        	cmp	ebp, edi
c01028cc: 74 25                        	je	0xc01028f3 <MapVirt+0xad>
c01028ce: 8b 06                        	mov	eax, dword ptr [esi]
c01028d0: 89 6c 24 18                  	mov	dword ptr [esp + 24], ebp
c01028d4: 81 c5 00 10 00 00            	add	ebp, 4096
c01028da: 51                           	push	ecx
c01028db: 51                           	push	ecx
c01028dc: 8d 54 24 20                  	lea	edx, [esp + 32]
c01028e0: 52                           	push	edx
c01028e1: 50                           	push	eax
c01028e2: e8 b2 ed ff ff               	call	0xc0101699 <AvlTreeContains>
c01028e7: 83 c4 10                     	add	esp, 16
c01028ea: 84 c0                        	test	al, al
c01028ec: 74 dc                        	je	0xc01028ca <MapVirt+0x84>
c01028ee: e9 e8 00 00 00               	jmp	0xc01029db <MapVirt+0x195>
c01028f3: 8b 44 24 5c                  	mov	eax, dword ptr [esp + 92]
c01028f7: c1 e3 0c                     	shl	ebx, 12
c01028fa: 8b 7c 24 50                  	mov	edi, dword ptr [esp + 80]
c01028fe: 03 5c 24 50                  	add	ebx, dword ptr [esp + 80]
c0102902: 83 e0 01                     	and	eax, 1
c0102905: 89 dd                        	mov	ebp, ebx
c0102907: c1 e0 06                     	shl	eax, 6
c010290a: 66 89 44 24 0e               	mov	word ptr [esp + 14], ax
c010290f: 39 ef                        	cmp	edi, ebp
c0102911: 0f 84 ad 00 00 00            	je	0xc01029c4 <MapVirt+0x17e>
c0102917: 8b 44 24 54                  	mov	eax, dword ptr [esp + 84]
c010291b: 2b 44 24 50                  	sub	eax, dword ptr [esp + 80]
c010291f: 83 ec 0c                     	sub	esp, 12
c0102922: 01 f8                        	add	eax, edi
c0102924: 89 44 24 14                  	mov	dword ptr [esp + 20], eax
c0102928: 6a 18                        	push	24
c010292a: e8 c1 f8 ff ff               	call	0xc01021f0 <AllocHeap>
c010292f: 8b 4c 24 6c                  	mov	ecx, dword ptr [esp + 108]
c0102933: 83 c4 10                     	add	esp, 16
c0102936: 89 c3                        	mov	ebx, eax
c0102938: 83 e1 10                     	and	ecx, 16
c010293b: 0f 95 c2                     	setne	dl
c010293e: 89 d0                        	mov	eax, edx
c0102940: c1 e0 05                     	shl	eax, 5
c0102943: 88 44 24 0d                  	mov	byte ptr [esp + 13], al
c0102947: 8a 43 04                     	mov	al, byte ptr [ebx + 4]
c010294a: 83 e0 dc                     	and	eax, -36
c010294d: 0a 44 24 0d                  	or	al, byte ptr [esp + 13]
c0102951: 09 d0                        	or	eax, edx
c0102953: 88 43 04                     	mov	byte ptr [ebx + 4], al
c0102956: 89 f8                        	mov	eax, edi
c0102958: 85 c9                        	test	ecx, ecx
c010295a: 74 0f                        	je	0xc010296b <MapVirt+0x125>
c010295c: 31 c0                        	xor	eax, eax
c010295e: 85 ff                        	test	edi, edi
c0102960: 74 09                        	je	0xc010296b <MapVirt+0x125>
c0102962: e8 50 fb ff ff               	call	0xc01024b7 <AllocPhys>
c0102967: 80 4b 04 02                  	or	byte ptr [ebx + 4], 2
c010296b: 8b 53 04                     	mov	edx, dword ptr [ebx + 4]
c010296e: 8b 4c 24 08                  	mov	ecx, dword ptr [esp + 8]
c0102972: 89 43 10                     	mov	dword ptr [ebx + 16], eax
c0102975: 8b 44 24 64                  	mov	eax, dword ptr [esp + 100]
c0102979: c7 43 14 01 00 00 00         	mov	dword ptr [ebx + 20], 1
c0102980: 66 81 e2 3b fe               	and	dx, 65083
c0102985: 66 0b 54 24 0e               	or	dx, word ptr [esp + 14]
c010298a: 89 0b                        	mov	dword ptr [ebx], ecx
c010298c: 89 43 08                     	mov	dword ptr [ebx + 8], eax
c010298f: 8b 44 24 60                  	mov	eax, dword ptr [esp + 96]
c0102993: 66 89 53 04                  	mov	word ptr [ebx + 4], dx
c0102997: 89 43 0c                     	mov	dword ptr [ebx + 12], eax
c010299a: 52                           	push	edx
c010299b: 52                           	push	edx
c010299c: 53                           	push	ebx
c010299d: ff 36                        	push	dword ptr [esi]
c010299f: e8 b3 ec ff ff               	call	0xc0101657 <AvlTreeInsert>
c01029a4: 83 c4 10                     	add	esp, 16
c01029a7: f6 43 04 01                  	test	byte ptr [ebx + 4], 1
c01029ab: 74 0c                        	je	0xc01029b9 <MapVirt+0x173>
c01029ad: 50                           	push	eax
c01029ae: 50                           	push	eax
c01029af: 53                           	push	ebx
c01029b0: 56                           	push	esi
c01029b1: e8 59 0d 00 00               	call	0xc010370f <ArchAddMapping>
c01029b6: 83 c4 10                     	add	esp, 16
c01029b9: 81 c7 00 10 00 00            	add	edi, 4096
c01029bf: e9 4b ff ff ff               	jmp	0xc010290f <MapVirt+0xc9>
c01029c4: e8 6f fe ff ff               	call	0xc0102838 <GetVas>
c01029c9: 39 c6                        	cmp	esi, eax
c01029cb: 75 1e                        	jne	0xc01029eb <MapVirt+0x1a5>
c01029cd: 83 ec 0c                     	sub	esp, 12
c01029d0: 56                           	push	esi
c01029d1: e8 55 0d 00 00               	call	0xc010372b <ArchFlushTlb>
c01029d6: 83 c4 10                     	add	esp, 16
c01029d9: eb 10                        	jmp	0xc01029eb <MapVirt+0x1a5>
c01029db: f6 44 24 5c 40               	test	byte ptr [esp + 92], 64
c01029e0: 0f 84 cf fe ff ff            	je	0xc01028b5 <MapVirt+0x6f>
c01029e6: e9 77 fe ff ff               	jmp	0xc0102862 <MapVirt+0x1c>
c01029eb: 8b 44 24 54                  	mov	eax, dword ptr [esp + 84]
c01029ef: 83 c4 3c                     	add	esp, 60
c01029f2: 5b                           	pop	ebx
c01029f3: 5e                           	pop	esi
c01029f4: 5f                           	pop	edi
c01029f5: 5d                           	pop	ebp
c01029f6: c3                           	ret

c01029f7 <GetPhysFromVirt>:
c01029f7: 83 ec 0c                     	sub	esp, 12
c01029fa: e8 39 fe ff ff               	call	0xc0102838 <GetVas>
c01029ff: 8b 54 24 10                  	mov	edx, dword ptr [esp + 16]
c0102a03: 8b 00                        	mov	eax, dword ptr [eax]
c0102a05: e8 88 fd ff ff               	call	0xc0102792 <GetVirtEntry.isra.0>
c0102a0a: 8b 40 10                     	mov	eax, dword ptr [eax + 16]
c0102a0d: 83 c4 0c                     	add	esp, 12
c0102a10: c3                           	ret

c0102a11 <LockVirt>:
c0102a11: 83 ec 0c                     	sub	esp, 12
c0102a14: e8 1f fe ff ff               	call	0xc0102838 <GetVas>
c0102a19: 8b 54 24 10                  	mov	edx, dword ptr [esp + 16]
c0102a1d: 8b 00                        	mov	eax, dword ptr [eax]
c0102a1f: e8 6e fd ff ff               	call	0xc0102792 <GetVirtEntry.isra.0>
c0102a24: 80 48 04 20                  	or	byte ptr [eax + 4], 32
c0102a28: 83 c4 0c                     	add	esp, 12
c0102a2b: c3                           	ret

c0102a2c <UnlockVirt>:
c0102a2c: 83 ec 0c                     	sub	esp, 12
c0102a2f: e8 04 fe ff ff               	call	0xc0102838 <GetVas>
c0102a34: 8b 54 24 10                  	mov	edx, dword ptr [esp + 16]
c0102a38: 8b 00                        	mov	eax, dword ptr [eax]
c0102a3a: e8 53 fd ff ff               	call	0xc0102792 <GetVirtEntry.isra.0>
c0102a3f: 80 60 04 df                  	and	byte ptr [eax + 4], -33
c0102a43: 83 c4 0c                     	add	esp, 12
c0102a46: c3                           	ret

c0102a47 <SetVirtPermissions>:
c0102a47: 57                           	push	edi
c0102a48: 56                           	push	esi
c0102a49: 53                           	push	ebx
c0102a4a: 8b 7c 24 14                  	mov	edi, dword ptr [esp + 20]
c0102a4e: 8b 74 24 18                  	mov	esi, dword ptr [esp + 24]
c0102a52: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c0102a56: 89 f8                        	mov	eax, edi
c0102a58: 09 f0                        	or	eax, esi
c0102a5a: 83 e0 f4                     	and	eax, -12
c0102a5d: 0f 85 d1 00 00 00            	jne	0xc0102b34 <SetVirtPermissions+0xed>
c0102a63: e8 d0 fd ff ff               	call	0xc0102838 <GetVas>
c0102a68: 89 da                        	mov	edx, ebx
c0102a6a: 8b 00                        	mov	eax, dword ptr [eax]
c0102a6c: e8 21 fd ff ff               	call	0xc0102792 <GetVirtEntry.isra.0>
c0102a71: 89 c3                        	mov	ebx, eax
c0102a73: b0 01                        	mov	al, 1
c0102a75: f7 c7 01 00 00 00            	test	edi, 1
c0102a7b: 75 13                        	jne	0xc0102a90 <SetVirtPermissions+0x49>
c0102a7d: 31 c0                        	xor	eax, eax
c0102a7f: f7 c6 01 00 00 00            	test	esi, 1
c0102a85: 75 09                        	jne	0xc0102a90 <SetVirtPermissions+0x49>
c0102a87: 8a 43 04                     	mov	al, byte ptr [ebx + 4]
c0102a8a: c0 e8 06                     	shr	al, 6
c0102a8d: 83 e0 01                     	and	eax, 1
c0102a90: 8a 53 04                     	mov	dl, byte ptr [ebx + 4]
c0102a93: 83 e0 01                     	and	eax, 1
c0102a96: c1 e0 06                     	shl	eax, 6
c0102a99: 83 e2 bf                     	and	edx, -65
c0102a9c: 09 d0                        	or	eax, edx
c0102a9e: b2 01                        	mov	dl, 1
c0102aa0: 88 43 04                     	mov	byte ptr [ebx + 4], al
c0102aa3: f7 c7 02 00 00 00            	test	edi, 2
c0102aa9: 75 0f                        	jne	0xc0102aba <SetVirtPermissions+0x73>
c0102aab: 31 d2                        	xor	edx, edx
c0102aad: f7 c6 02 00 00 00            	test	esi, 2
c0102ab3: 75 05                        	jne	0xc0102aba <SetVirtPermissions+0x73>
c0102ab5: c0 e8 07                     	shr	al, 7
c0102ab8: 89 c2                        	mov	edx, eax
c0102aba: 8a 43 04                     	mov	al, byte ptr [ebx + 4]
c0102abd: c1 e2 07                     	shl	edx, 7
c0102ac0: 83 e0 7f                     	and	eax, 127
c0102ac3: 09 d0                        	or	eax, edx
c0102ac5: 88 43 04                     	mov	byte ptr [ebx + 4], al
c0102ac8: b0 01                        	mov	al, 1
c0102aca: f7 c7 08 00 00 00            	test	edi, 8
c0102ad0: 75 10                        	jne	0xc0102ae2 <SetVirtPermissions+0x9b>
c0102ad2: 31 c0                        	xor	eax, eax
c0102ad4: f7 c6 08 00 00 00            	test	esi, 8
c0102ada: 75 06                        	jne	0xc0102ae2 <SetVirtPermissions+0x9b>
c0102adc: 8a 43 05                     	mov	al, byte ptr [ebx + 5]
c0102adf: 83 e0 01                     	and	eax, 1
c0102ae2: 8a 53 05                     	mov	dl, byte ptr [ebx + 5]
c0102ae5: 83 e2 fe                     	and	edx, -2
c0102ae8: 09 c2                        	or	edx, eax
c0102aea: 83 e7 04                     	and	edi, 4
c0102aed: b0 01                        	mov	al, 1
c0102aef: 88 53 05                     	mov	byte ptr [ebx + 5], dl
c0102af2: 75 0e                        	jne	0xc0102b02 <SetVirtPermissions+0xbb>
c0102af4: 31 c0                        	xor	eax, eax
c0102af6: 83 e6 04                     	and	esi, 4
c0102af9: 75 07                        	jne	0xc0102b02 <SetVirtPermissions+0xbb>
c0102afb: 89 d0                        	mov	eax, edx
c0102afd: d0 e8                        	shr	al
c0102aff: 83 e0 01                     	and	eax, 1
c0102b02: 8a 53 05                     	mov	dl, byte ptr [ebx + 5]
c0102b05: 83 e0 01                     	and	eax, 1
c0102b08: 01 c0                        	add	eax, eax
c0102b0a: 83 e2 fd                     	and	edx, -3
c0102b0d: 09 d0                        	or	eax, edx
c0102b0f: 88 43 05                     	mov	byte ptr [ebx + 5], al
c0102b12: e8 21 fd ff ff               	call	0xc0102838 <GetVas>
c0102b17: 52                           	push	edx
c0102b18: 52                           	push	edx
c0102b19: 53                           	push	ebx
c0102b1a: 50                           	push	eax
c0102b1b: e8 be 0b 00 00               	call	0xc01036de <ArchUpdateMapping>
c0102b20: e8 13 fd ff ff               	call	0xc0102838 <GetVas>
c0102b25: 83 c4 10                     	add	esp, 16
c0102b28: 89 44 24 10                  	mov	dword ptr [esp + 16], eax
c0102b2c: 5b                           	pop	ebx
c0102b2d: 5e                           	pop	esi
c0102b2e: 5f                           	pop	edi
c0102b2f: e9 f7 0b 00 00               	jmp	0xc010372b <ArchFlushTlb>
c0102b34: 5b                           	pop	ebx
c0102b35: 5e                           	pop	esi
c0102b36: 5f                           	pop	edi
c0102b37: c3                           	ret

c0102b38 <GetVirtPermissions>:
c0102b38: 53                           	push	ebx
c0102b39: 83 ec 08                     	sub	esp, 8
c0102b3c: e8 f7 fc ff ff               	call	0xc0102838 <GetVas>
c0102b41: 8b 54 24 10                  	mov	edx, dword ptr [esp + 16]
c0102b45: 8b 00                        	mov	eax, dword ptr [eax]
c0102b47: e8 46 fc ff ff               	call	0xc0102792 <GetVirtEntry.isra.0>
c0102b4c: 8a 48 04                     	mov	cl, byte ptr [eax + 4]
c0102b4f: 89 ca                        	mov	edx, ecx
c0102b51: c0 ea 06                     	shr	dl, 6
c0102b54: 83 e2 01                     	and	edx, 1
c0102b57: 84 c9                        	test	cl, cl
c0102b59: 79 03                        	jns	0xc0102b5e <GetVirtPermissions+0x26>
c0102b5b: 83 ca 02                     	or	edx, 2
c0102b5e: 8a 58 05                     	mov	bl, byte ptr [eax + 5]
c0102b61: 89 d8                        	mov	eax, ebx
c0102b63: 83 e0 01                     	and	eax, 1
c0102b66: c1 e0 03                     	shl	eax, 3
c0102b69: 09 d0                        	or	eax, edx
c0102b6b: f6 c1 20                     	test	cl, 32
c0102b6e: 74 03                        	je	0xc0102b73 <GetVirtPermissions+0x3b>
c0102b70: 83 c8 10                     	or	eax, 16
c0102b73: 80 e1 04                     	and	cl, 4
c0102b76: 74 03                        	je	0xc0102b7b <GetVirtPermissions+0x43>
c0102b78: 83 c8 20                     	or	eax, 32
c0102b7b: 80 e3 02                     	and	bl, 2
c0102b7e: 74 03                        	je	0xc0102b83 <GetVirtPermissions+0x4b>
c0102b80: 83 c8 04                     	or	eax, 4
c0102b83: 83 c4 08                     	add	esp, 8
c0102b86: 5b                           	pop	ebx
c0102b87: c3                           	ret

c0102b88 <UnmapVirt>:
c0102b88: 55                           	push	ebp
c0102b89: 31 ed                        	xor	ebp, ebp
c0102b8b: 57                           	push	edi
c0102b8c: 56                           	push	esi
c0102b8d: 53                           	push	ebx
c0102b8e: 83 ec 1c                     	sub	esp, 28
c0102b91: 8b 5c 24 34                  	mov	ebx, dword ptr [esp + 52]
c0102b95: 8b 7c 24 30                  	mov	edi, dword ptr [esp + 48]
c0102b99: e8 9a fc ff ff               	call	0xc0102838 <GetVas>
c0102b9e: 81 c3 ff 0f 00 00            	add	ebx, 4095
c0102ba4: 89 c6                        	mov	esi, eax
c0102ba6: 81 e3 00 f0 ff ff            	and	ebx, 4294963200
c0102bac: 8d 04 3b                     	lea	eax, [ebx + edi]
c0102baf: 89 44 24 0c                  	mov	dword ptr [esp + 12], eax
c0102bb3: 8b 44 24 0c                  	mov	eax, dword ptr [esp + 12]
c0102bb7: 39 c7                        	cmp	edi, eax
c0102bb9: 74 58                        	je	0xc0102c13 <UnmapVirt+0x8b>
c0102bbb: 8b 06                        	mov	eax, dword ptr [esi]
c0102bbd: 89 fa                        	mov	edx, edi
c0102bbf: e8 ce fb ff ff               	call	0xc0102792 <GetVirtEntry.isra.0>
c0102bc4: ff 48 14                     	dec	dword ptr [eax + 20]
c0102bc7: 89 c3                        	mov	ebx, eax
c0102bc9: 75 40                        	jne	0xc0102c0b <UnmapVirt+0x83>
c0102bcb: f6 40 04 01                  	test	byte ptr [eax + 4], 1
c0102bcf: 74 11                        	je	0xc0102be2 <UnmapVirt+0x5a>
c0102bd1: 52                           	push	edx
c0102bd2: bd 01 00 00 00               	mov	ebp, 1
c0102bd7: 52                           	push	edx
c0102bd8: 50                           	push	eax
c0102bd9: 56                           	push	esi
c0102bda: e8 32 0b 00 00               	call	0xc0103711 <ArchUnmap>
c0102bdf: 83 c4 10                     	add	esp, 16
c0102be2: f6 43 04 02                  	test	byte ptr [ebx + 4], 2
c0102be6: 74 0e                        	je	0xc0102bf6 <UnmapVirt+0x6e>
c0102be8: 83 ec 0c                     	sub	esp, 12
c0102beb: ff 73 10                     	push	dword ptr [ebx + 16]
c0102bee: e8 37 f8 ff ff               	call	0xc010242a <DeallocPhys>
c0102bf3: 83 c4 10                     	add	esp, 16
c0102bf6: 50                           	push	eax
c0102bf7: 50                           	push	eax
c0102bf8: 53                           	push	ebx
c0102bf9: ff 36                        	push	dword ptr [esi]
c0102bfb: e8 78 ea ff ff               	call	0xc0101678 <AvlTreeDelete>
c0102c00: 89 1c 24                     	mov	dword ptr [esp], ebx
c0102c03: e8 0c f6 ff ff               	call	0xc0102214 <FreeHeap>
c0102c08: 83 c4 10                     	add	esp, 16
c0102c0b: 81 c7 00 10 00 00            	add	edi, 4096
c0102c11: eb a0                        	jmp	0xc0102bb3 <UnmapVirt+0x2b>
c0102c13: 89 e8                        	mov	eax, ebp
c0102c15: 84 c0                        	test	al, al
c0102c17: 74 10                        	je	0xc0102c29 <UnmapVirt+0xa1>
c0102c19: 89 74 24 30                  	mov	dword ptr [esp + 48], esi
c0102c1d: 83 c4 1c                     	add	esp, 28
c0102c20: 5b                           	pop	ebx
c0102c21: 5e                           	pop	esi
c0102c22: 5f                           	pop	edi
c0102c23: 5d                           	pop	ebp
c0102c24: e9 02 0b 00 00               	jmp	0xc010372b <ArchFlushTlb>
c0102c29: 83 c4 1c                     	add	esp, 28
c0102c2c: 5b                           	pop	ebx
c0102c2d: 5e                           	pop	esi
c0102c2e: 5f                           	pop	edi
c0102c2f: 5d                           	pop	ebp
c0102c30: c3                           	ret

c0102c31 <CopyVasRecursive>:
c0102c31: 85 c0                        	test	eax, eax
c0102c33: 0f 84 2a 01 00 00            	je	0xc0102d63 <CopyVasRecursive+0x132>
c0102c39: 55                           	push	ebp
c0102c3a: 89 d5                        	mov	ebp, edx
c0102c3c: 57                           	push	edi
c0102c3d: 56                           	push	esi
c0102c3e: 53                           	push	ebx
c0102c3f: 89 c3                        	mov	ebx, eax
c0102c41: 81 ec 28 10 00 00            	sub	esp, 4136
c0102c47: 50                           	push	eax
c0102c48: e8 a1 ea ff ff               	call	0xc01016ee <AvlTreeGetLeft>
c0102c4d: 89 ea                        	mov	edx, ebp
c0102c4f: e8 dd ff ff ff               	call	0xc0102c31 <CopyVasRecursive>
c0102c54: 89 1c 24                     	mov	dword ptr [esp], ebx
c0102c57: e8 9d ea ff ff               	call	0xc01016f9 <AvlTreeGetRight>
c0102c5c: 89 ea                        	mov	edx, ebp
c0102c5e: e8 ce ff ff ff               	call	0xc0102c31 <CopyVasRecursive>
c0102c63: 89 1c 24                     	mov	dword ptr [esp], ebx
c0102c66: e8 9a ea ff ff               	call	0xc0101705 <AvlTreeGetData>
c0102c6b: 83 c4 10                     	add	esp, 16
c0102c6e: 89 c3                        	mov	ebx, eax
c0102c70: f6 40 05 04                  	test	byte ptr [eax + 5], 4
c0102c74: 0f 85 de 00 00 00            	jne	0xc0102d58 <CopyVasRecursive+0x127>
c0102c7a: 8a 40 04                     	mov	al, byte ptr [eax + 4]
c0102c7d: a8 20                        	test	al, 32
c0102c7f: 0f 84 a5 00 00 00            	je	0xc0102d2a <CopyVasRecursive+0xf9>
c0102c85: a8 02                        	test	al, 2
c0102c87: 0f 84 82 00 00 00            	je	0xc0102d0f <CopyVasRecursive+0xde>
c0102c8d: 50                           	push	eax
c0102c8e: 68 00 10 00 00               	push	4096
c0102c93: ff 33                        	push	dword ptr [ebx]
c0102c95: 8d 74 24 1c                  	lea	esi, [esp + 28]
c0102c99: 56                           	push	esi
c0102c9a: e8 06 e5 ff ff               	call	0xc01011a5 <memcpy>
c0102c9f: 8b 53 10                     	mov	edx, dword ptr [ebx + 16]
c0102ca2: 89 54 24 1c                  	mov	dword ptr [esp + 28], edx
c0102ca6: e8 0c f8 ff ff               	call	0xc01024b7 <AllocPhys>
c0102cab: 89 43 10                     	mov	dword ptr [ebx + 16], eax
c0102cae: e8 85 fb ff ff               	call	0xc0102838 <GetVas>
c0102cb3: 5a                           	pop	edx
c0102cb4: 59                           	pop	ecx
c0102cb5: 53                           	push	ebx
c0102cb6: 50                           	push	eax
c0102cb7: e8 22 0a 00 00               	call	0xc01036de <ArchUpdateMapping>
c0102cbc: e8 77 fb ff ff               	call	0xc0102838 <GetVas>
c0102cc1: 89 04 24                     	mov	dword ptr [esp], eax
c0102cc4: e8 62 0a 00 00               	call	0xc010372b <ArchFlushTlb>
c0102cc9: 83 c4 0c                     	add	esp, 12
c0102ccc: 68 00 10 00 00               	push	4096
c0102cd1: 56                           	push	esi
c0102cd2: 89 de                        	mov	esi, ebx
c0102cd4: ff 33                        	push	dword ptr [ebx]
c0102cd6: e8 ca e4 ff ff               	call	0xc01011a5 <memcpy>
c0102cdb: c7 04 24 18 00 00 00         	mov	dword ptr [esp], 24
c0102ce2: e8 09 f5 ff ff               	call	0xc01021f0 <AllocHeap>
c0102ce7: b9 06 00 00 00               	mov	ecx, 6
c0102cec: 8b 54 24 1c                  	mov	edx, dword ptr [esp + 28]
c0102cf0: 89 c7                        	mov	edi, eax
c0102cf2: f3 a5                        	rep		movsd	dword ptr es:[edi], dword ptr [esi]
c0102cf4: c7 40 14 01 00 00 00         	mov	dword ptr [eax + 20], 1
c0102cfb: 89 50 10                     	mov	dword ptr [eax + 16], edx
c0102cfe: 80 48 04 02                  	or	byte ptr [eax + 4], 2
c0102d02: 5e                           	pop	esi
c0102d03: 5f                           	pop	edi
c0102d04: 53                           	push	ebx
c0102d05: ff 75 00                     	push	dword ptr [ebp]
c0102d08: e8 4a e9 ff ff               	call	0xc0101657 <AvlTreeInsert>
c0102d0d: eb 3d                        	jmp	0xc0102d4c <CopyVasRecursive+0x11b>
c0102d0f: 83 ec 0c                     	sub	esp, 12
c0102d12: 68 fd 45 10 c0               	push	3222291965
c0102d17: e8 ef 03 00 00               	call	0xc010310b <LogWriteSerial>
c0102d1c: 5d                           	pop	ebp
c0102d1d: 58                           	pop	eax
c0102d1e: 68 35 46 10 c0               	push	3222292021
c0102d23: 6a 0b                        	push	11
c0102d25: e8 c8 04 00 00               	call	0xc01031f2 <PanicEx>
c0102d2a: ff 43 14                     	inc	dword ptr [ebx + 20]
c0102d2d: 83 c8 08                     	or	eax, 8
c0102d30: 88 43 04                     	mov	byte ptr [ebx + 4], al
c0102d33: 51                           	push	ecx
c0102d34: 51                           	push	ecx
c0102d35: 53                           	push	ebx
c0102d36: ff 75 00                     	push	dword ptr [ebp]
c0102d39: e8 19 e9 ff ff               	call	0xc0101657 <AvlTreeInsert>
c0102d3e: e8 f5 fa ff ff               	call	0xc0102838 <GetVas>
c0102d43: 5e                           	pop	esi
c0102d44: 5f                           	pop	edi
c0102d45: 53                           	push	ebx
c0102d46: 50                           	push	eax
c0102d47: e8 92 09 00 00               	call	0xc01036de <ArchUpdateMapping>
c0102d4c: 58                           	pop	eax
c0102d4d: 5a                           	pop	edx
c0102d4e: 53                           	push	ebx
c0102d4f: 55                           	push	ebp
c0102d50: e8 ba 09 00 00               	call	0xc010370f <ArchAddMapping>
c0102d55: 83 c4 10                     	add	esp, 16
c0102d58: 81 c4 1c 10 00 00            	add	esp, 4124
c0102d5e: 5b                           	pop	ebx
c0102d5f: 5e                           	pop	esi
c0102d60: 5f                           	pop	edi
c0102d61: 5d                           	pop	ebp
c0102d62: c3                           	ret
c0102d63: c3                           	ret

c0102d64 <CopyVas>:
c0102d64: 56                           	push	esi
c0102d65: 53                           	push	ebx
c0102d66: 50                           	push	eax
c0102d67: e8 cc fa ff ff               	call	0xc0102838 <GetVas>
c0102d6c: 89 c6                        	mov	esi, eax
c0102d6e: e8 35 fa ff ff               	call	0xc01027a8 <CreateVas>
c0102d73: 83 ec 0c                     	sub	esp, 12
c0102d76: ff 36                        	push	dword ptr [esi]
c0102d78: 89 c3                        	mov	ebx, eax
c0102d7a: e8 67 e9 ff ff               	call	0xc01016e6 <AvlTreeGetRootNode>
c0102d7f: 89 da                        	mov	edx, ebx
c0102d81: e8 ab fe ff ff               	call	0xc0102c31 <CopyVasRecursive>
c0102d86: 89 34 24                     	mov	dword ptr [esp], esi
c0102d89: e8 9d 09 00 00               	call	0xc010372b <ArchFlushTlb>
c0102d8e: 83 c4 14                     	add	esp, 20
c0102d91: 89 d8                        	mov	eax, ebx
c0102d93: 5b                           	pop	ebx
c0102d94: 5e                           	pop	esi
c0102d95: c3                           	ret

c0102d96 <HandleCowFault>:
c0102d96: 55                           	push	ebp
c0102d97: 57                           	push	edi
c0102d98: 56                           	push	esi
c0102d99: 53                           	push	ebx
c0102d9a: 89 c3                        	mov	ebx, eax
c0102d9c: 81 ec 0c 10 00 00            	sub	esp, 4108
c0102da2: 83 78 14 01                  	cmp	dword ptr [eax + 20], 1
c0102da6: 75 24                        	jne	0xc0102dcc <HandleCowFault+0x36>
c0102da8: 80 60 04 f7                  	and	byte ptr [eax + 4], -9
c0102dac: e8 87 fa ff ff               	call	0xc0102838 <GetVas>
c0102db1: 52                           	push	edx
c0102db2: 52                           	push	edx
c0102db3: 53                           	push	ebx
c0102db4: 50                           	push	eax
c0102db5: e8 24 09 00 00               	call	0xc01036de <ArchUpdateMapping>
c0102dba: e8 79 fa ff ff               	call	0xc0102838 <GetVas>
c0102dbf: 89 04 24                     	mov	dword ptr [esp], eax
c0102dc2: e8 64 09 00 00               	call	0xc010372b <ArchFlushTlb>
c0102dc7: e9 93 00 00 00               	jmp	0xc0102e5f <HandleCowFault+0xc9>
c0102dcc: 55                           	push	ebp
c0102dcd: 68 00 10 00 00               	push	4096
c0102dd2: ff 30                        	push	dword ptr [eax]
c0102dd4: 8d 44 24 0c                  	lea	eax, [esp + 12]
c0102dd8: 50                           	push	eax
c0102dd9: e8 c7 e3 ff ff               	call	0xc01011a5 <memcpy>
c0102dde: 8b 43 14                     	mov	eax, dword ptr [ebx + 20]
c0102de1: 83 c4 10                     	add	esp, 16
c0102de4: 48                           	dec	eax
c0102de5: 89 43 14                     	mov	dword ptr [ebx + 20], eax
c0102de8: 48                           	dec	eax
c0102de9: 75 04                        	jne	0xc0102def <HandleCowFault+0x59>
c0102deb: 80 63 04 f7                  	and	byte ptr [ebx + 4], -9
c0102def: 83 ec 0c                     	sub	esp, 12
c0102df2: 89 de                        	mov	esi, ebx
c0102df4: 6a 18                        	push	24
c0102df6: e8 f5 f3 ff ff               	call	0xc01021f0 <AllocHeap>
c0102dfb: b9 06 00 00 00               	mov	ecx, 6
c0102e00: 89 c7                        	mov	edi, eax
c0102e02: 89 c5                        	mov	ebp, eax
c0102e04: f3 a5                        	rep		movsd	dword ptr es:[edi], dword ptr [esi]
c0102e06: c7 40 14 01 00 00 00         	mov	dword ptr [eax + 20], 1
c0102e0d: e8 a5 f6 ff ff               	call	0xc01024b7 <AllocPhys>
c0102e12: 80 4d 04 02                  	or	byte ptr [ebp + 4], 2
c0102e16: 89 45 10                     	mov	dword ptr [ebp + 16], eax
c0102e19: e8 1a fa ff ff               	call	0xc0102838 <GetVas>
c0102e1e: 5a                           	pop	edx
c0102e1f: 59                           	pop	ecx
c0102e20: 53                           	push	ebx
c0102e21: ff 30                        	push	dword ptr [eax]
c0102e23: e8 50 e8 ff ff               	call	0xc0101678 <AvlTreeDelete>
c0102e28: 89 1c 24                     	mov	dword ptr [esp], ebx
c0102e2b: e8 e4 f3 ff ff               	call	0xc0102214 <FreeHeap>
c0102e30: e8 03 fa ff ff               	call	0xc0102838 <GetVas>
c0102e35: 5e                           	pop	esi
c0102e36: 5f                           	pop	edi
c0102e37: 53                           	push	ebx
c0102e38: 50                           	push	eax
c0102e39: e8 a0 08 00 00               	call	0xc01036de <ArchUpdateMapping>
c0102e3e: e8 f5 f9 ff ff               	call	0xc0102838 <GetVas>
c0102e43: 89 04 24                     	mov	dword ptr [esp], eax
c0102e46: e8 e0 08 00 00               	call	0xc010372b <ArchFlushTlb>
c0102e4b: 83 c4 0c                     	add	esp, 12
c0102e4e: 68 00 10 00 00               	push	4096
c0102e53: 8d 44 24 08                  	lea	eax, [esp + 8]
c0102e57: 50                           	push	eax
c0102e58: ff 33                        	push	dword ptr [ebx]
c0102e5a: e8 46 e3 ff ff               	call	0xc01011a5 <memcpy>
c0102e5f: 83 c4 10                     	add	esp, 16
c0102e62: 81 c4 0c 10 00 00            	add	esp, 4108
c0102e68: 5b                           	pop	ebx
c0102e69: 5e                           	pop	esi
c0102e6a: 5f                           	pop	edi
c0102e6b: 5d                           	pop	ebp
c0102e6c: c3                           	ret

c0102e6d <SetVas>:
c0102e6d: 53                           	push	ebx
c0102e6e: 83 ec 08                     	sub	esp, 8
c0102e71: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c0102e75: e8 cf eb ff ff               	call	0xc0101a49 <GetCpu>
c0102e7a: 89 18                        	mov	dword ptr [eax], ebx
c0102e7c: 89 5c 24 10                  	mov	dword ptr [esp + 16], ebx
c0102e80: 83 c4 08                     	add	esp, 8
c0102e83: 5b                           	pop	ebx
c0102e84: e9 ae 07 00 00               	jmp	0xc0103637 <ArchSetVas>

c0102e89 <InitVirt>:
c0102e89: 83 ec 0c                     	sub	esp, 12
c0102e8c: e8 a2 08 00 00               	call	0xc0103733 <ArchInitVirt>
c0102e91: c6 05 40 c0 12 c0 01         	mov	byte ptr [-1072512960], 1
c0102e98: 83 c4 0c                     	add	esp, 12
c0102e9b: c3                           	ret

c0102e9c <HandleVirtFault>:
c0102e9c: 57                           	push	edi
c0102e9d: 56                           	push	esi
c0102e9e: 53                           	push	ebx
c0102e9f: 8b 7c 24 10                  	mov	edi, dword ptr [esp + 16]
c0102ea3: 83 ec 0c                     	sub	esp, 12
c0102ea6: 6a 01                        	push	1
c0102ea8: e8 41 ec ff ff               	call	0xc0101aee <RaiseIrql>
c0102ead: 89 3c 24                     	mov	dword ptr [esp], edi
c0102eb0: 89 c6                        	mov	esi, eax
c0102eb2: e8 99 0a 00 00               	call	0xc0103950 <ArchGetVirtFaultAddress>
c0102eb7: 89 3c 24                     	mov	dword ptr [esp], edi
c0102eba: 89 c3                        	mov	ebx, eax
c0102ebc: e8 6f 08 00 00               	call	0xc0103730 <ArchGetVirtFaultType>
c0102ec1: 89 c7                        	mov	edi, eax
c0102ec3: e8 70 f9 ff ff               	call	0xc0102838 <GetVas>
c0102ec8: 89 da                        	mov	edx, ebx
c0102eca: 8b 00                        	mov	eax, dword ptr [eax]
c0102ecc: e8 c1 f8 ff ff               	call	0xc0102792 <GetVirtEntry.isra.0>
c0102ed1: 83 c4 10                     	add	esp, 16
c0102ed4: 85 c0                        	test	eax, eax
c0102ed6: 75 0a                        	jne	0xc0102ee2 <HandleVirtFault+0x46>
c0102ed8: 83 ec 0c                     	sub	esp, 12
c0102edb: 6a 08                        	push	8
c0102edd: e9 a6 00 00 00               	jmp	0xc0102f88 <HandleVirtFault+0xec>
c0102ee2: 89 c3                        	mov	ebx, eax
c0102ee4: 8a 40 04                     	mov	al, byte ptr [eax + 4]
c0102ee7: a8 08                        	test	al, 8
c0102ee9: 74 0e                        	je	0xc0102ef9 <HandleVirtFault+0x5d>
c0102eeb: 83 e7 02                     	and	edi, 2
c0102eee: 74 09                        	je	0xc0102ef9 <HandleVirtFault+0x5d>
c0102ef0: 89 d8                        	mov	eax, ebx
c0102ef2: e8 9f fe ff ff               	call	0xc0102d96 <HandleCowFault>
c0102ef7: eb 7e                        	jmp	0xc0102f77 <HandleVirtFault+0xdb>
c0102ef9: 89 c2                        	mov	edx, eax
c0102efb: 83 e2 05                     	and	edx, 5
c0102efe: 80 fa 04                     	cmp	dl, 4
c0102f01: 74 74                        	je	0xc0102f77 <HandleVirtFault+0xdb>
c0102f03: a8 10                        	test	al, 16
c0102f05: 74 31                        	je	0xc0102f38 <HandleVirtFault+0x9c>
c0102f07: e8 ab f5 ff ff               	call	0xc01024b7 <AllocPhys>
c0102f0c: 89 43 10                     	mov	dword ptr [ebx + 16], eax
c0102f0f: 8a 43 04                     	mov	al, byte ptr [ebx + 4]
c0102f12: 83 e0 ec                     	and	eax, -20
c0102f15: 83 c8 03                     	or	eax, 3
c0102f18: 88 43 04                     	mov	byte ptr [ebx + 4], al
c0102f1b: e8 18 f9 ff ff               	call	0xc0102838 <GetVas>
c0102f20: 51                           	push	ecx
c0102f21: 51                           	push	ecx
c0102f22: 53                           	push	ebx
c0102f23: 50                           	push	eax
c0102f24: e8 b5 07 00 00               	call	0xc01036de <ArchUpdateMapping>
c0102f29: e8 0a f9 ff ff               	call	0xc0102838 <GetVas>
c0102f2e: 89 04 24                     	mov	dword ptr [esp], eax
c0102f31: e8 f5 07 00 00               	call	0xc010372b <ArchFlushTlb>
c0102f36: eb 3c                        	jmp	0xc0102f74 <HandleVirtFault+0xd8>
c0102f38: a8 01                        	test	al, 1
c0102f3a: 75 47                        	jne	0xc0102f83 <HandleVirtFault+0xe7>
c0102f3c: e8 76 f5 ff ff               	call	0xc01024b7 <AllocPhys>
c0102f41: 80 4b 04 03                  	or	byte ptr [ebx + 4], 3
c0102f45: 89 43 10                     	mov	dword ptr [ebx + 16], eax
c0102f48: e8 eb f8 ff ff               	call	0xc0102838 <GetVas>
c0102f4d: 52                           	push	edx
c0102f4e: 52                           	push	edx
c0102f4f: 53                           	push	ebx
c0102f50: 50                           	push	eax
c0102f51: e8 88 07 00 00               	call	0xc01036de <ArchUpdateMapping>
c0102f56: e8 dd f8 ff ff               	call	0xc0102838 <GetVas>
c0102f5b: 89 04 24                     	mov	dword ptr [esp], eax
c0102f5e: e8 c8 07 00 00               	call	0xc010372b <ArchFlushTlb>
c0102f63: 83 c4 0c                     	add	esp, 12
c0102f66: 68 00 10 00 00               	push	4096
c0102f6b: 6a 00                        	push	0
c0102f6d: ff 33                        	push	dword ptr [ebx]
c0102f6f: e8 75 e2 ff ff               	call	0xc01011e9 <memset>
c0102f74: 83 c4 10                     	add	esp, 16
c0102f77: 89 74 24 10                  	mov	dword ptr [esp + 16], esi
c0102f7b: 5b                           	pop	ebx
c0102f7c: 5e                           	pop	esi
c0102f7d: 5f                           	pop	edi
c0102f7e: e9 9a eb ff ff               	jmp	0xc0101b1d <LowerIrql>
c0102f83: 83 ec 0c                     	sub	esp, 12
c0102f86: 6a 00                        	push	0
c0102f88: e8 a8 02 00 00               	call	0xc0103235 <Panic>

c0102f8d <IsVirtInitialised>:
c0102f8d: a0 40 c0 12 c0               	mov	al, byte ptr [3222454336]
c0102f92: c3                           	ret

c0102f93 <InitSpinlock>:
c0102f93: 83 ec 0c                     	sub	esp, 12
c0102f96: 8b 54 24 18                  	mov	edx, dword ptr [esp + 24]
c0102f9a: 8b 44 24 10                  	mov	eax, dword ptr [esp + 16]
c0102f9e: 83 fa 01                     	cmp	edx, 1
c0102fa1: 7f 0a                        	jg	0xc0102fad <InitSpinlock+0x1a>
c0102fa3: 83 ec 0c                     	sub	esp, 12
c0102fa6: 6a 0d                        	push	13
c0102fa8: e8 88 02 00 00               	call	0xc0103235 <Panic>
c0102fad: 31 c9                        	xor	ecx, ecx
c0102faf: 89 50 18                     	mov	dword ptr [eax + 24], edx
c0102fb2: 83 c0 08                     	add	eax, 8
c0102fb5: 89 48 f8                     	mov	dword ptr [eax - 8], ecx
c0102fb8: 89 48 fc                     	mov	dword ptr [eax - 4], ecx
c0102fbb: 89 44 24 10                  	mov	dword ptr [esp + 16], eax
c0102fbf: 83 c4 0c                     	add	esp, 12
c0102fc2: e9 90 e2 ff ff               	jmp	0xc0101257 <strcpy>

c0102fc7 <AcquireSpinlock>:
c0102fc7: 56                           	push	esi
c0102fc8: 53                           	push	ebx
c0102fc9: 50                           	push	eax
c0102fca: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c0102fce: 80 7c 24 14 00               	cmp	byte ptr [esp + 20], 0
c0102fd3: 8b 73 18                     	mov	esi, dword ptr [ebx + 24]
c0102fd6: 74 0e                        	je	0xc0102fe6 <AcquireSpinlock+0x1f>
c0102fd8: 83 ec 0c                     	sub	esp, 12
c0102fdb: 56                           	push	esi
c0102fdc: e8 0d eb ff ff               	call	0xc0101aee <RaiseIrql>
c0102fe1: 83 c4 10                     	add	esp, 16
c0102fe4: eb 13                        	jmp	0xc0102ff9 <AcquireSpinlock+0x32>
c0102fe6: e8 8b ea ff ff               	call	0xc0101a76 <GetIrql>
c0102feb: 39 f0                        	cmp	eax, esi
c0102fed: 74 0a                        	je	0xc0102ff9 <AcquireSpinlock+0x32>
c0102fef: 83 ec 0c                     	sub	esp, 12
c0102ff2: 6a 0d                        	push	13
c0102ff4: e8 3c 02 00 00               	call	0xc0103235 <Panic>
c0102ff9: 83 ec 0c                     	sub	esp, 12
c0102ffc: 53                           	push	ebx
c0102ffd: e8 66 09 00 00               	call	0xc0103968 <ArchIrqSpinlockAcquire>
c0103002: 8b 43 18                     	mov	eax, dword ptr [ebx + 24]
c0103005: 83 c4 14                     	add	esp, 20
c0103008: 5b                           	pop	ebx
c0103009: 5e                           	pop	esi
c010300a: c3                           	ret

c010300b <ReleaseSpinlock>:
c010300b: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c010300f: 31 d2                        	xor	edx, edx
c0103011: 89 50 04                     	mov	dword ptr [eax + 4], edx
c0103014: e9 6e 09 00 00               	jmp	0xc0103987 <ArchIrqSpinlockRelease>

c0103019 <ReleaseSpinlockAndLower>:
c0103019: 53                           	push	ebx
c010301a: 83 ec 14                     	sub	esp, 20
c010301d: 8b 5c 24 20                  	mov	ebx, dword ptr [esp + 32]
c0103021: ff 74 24 1c                  	push	dword ptr [esp + 28]
c0103025: e8 e1 ff ff ff               	call	0xc010300b <ReleaseSpinlock>
c010302a: 89 5c 24 20                  	mov	dword ptr [esp + 32], ebx
c010302e: 83 c4 18                     	add	esp, 24
c0103031: 5b                           	pop	ebx
c0103032: e9 e6 ea ff ff               	jmp	0xc0101b1d <LowerIrql>

c0103037 <AssertionFail>:
c0103037: 55                           	push	ebp
c0103038: 89 e5                        	mov	ebp, esp
c010303a: 83 ec 08                     	sub	esp, 8
c010303d: e8 a9 07 00 00               	call	0xc01037eb <ArchDisableInterrupts>
c0103042: 83 ec 0c                     	sub	esp, 12
c0103045: ff 75 0c                     	push	dword ptr [ebp + 12]
c0103048: ff 75 08                     	push	dword ptr [ebp + 8]
c010304b: ff 75 14                     	push	dword ptr [ebp + 20]
c010304e: ff 75 10                     	push	dword ptr [ebp + 16]
c0103051: 68 46 46 10 c0               	push	3222292038
c0103056: e8 b0 00 00 00               	call	0xc010310b <LogWriteSerial>
c010305b: 83 c4 14                     	add	esp, 20
c010305e: 68 68 46 10 c0               	push	3222292072
c0103063: e8 a3 00 00 00               	call	0xc010310b <LogWriteSerial>
c0103068: 5a                           	pop	edx
c0103069: 59                           	pop	ecx
c010306a: ff 75 04                     	push	dword ptr [ebp + 4]
c010306d: 68 76 46 10 c0               	push	3222292086
c0103072: e8 94 00 00 00               	call	0xc010310b <LogWriteSerial>
c0103077: 58                           	pop	eax
c0103078: 8b 45 00                     	mov	eax, dword ptr [ebp]
c010307b: 5a                           	pop	edx
c010307c: ff 70 04                     	push	dword ptr [eax + 4]
c010307f: 68 76 46 10 c0               	push	3222292086
c0103084: e8 82 00 00 00               	call	0xc010310b <LogWriteSerial>
c0103089: 8b 45 00                     	mov	eax, dword ptr [ebp]
c010308c: 59                           	pop	ecx
c010308d: 5a                           	pop	edx
c010308e: 8b 00                        	mov	eax, dword ptr [eax]
c0103090: ff 70 04                     	push	dword ptr [eax + 4]
c0103093: 68 76 46 10 c0               	push	3222292086
c0103098: e8 6e 00 00 00               	call	0xc010310b <LogWriteSerial>
c010309d: c7 04 24 09 00 00 00         	mov	dword ptr [esp], 9
c01030a4: e8 8c 01 00 00               	call	0xc0103235 <Panic>

c01030a9 <logcnv>:
c01030a9: 89 c1                        	mov	ecx, eax
c01030ab: ba fd 03 00 00               	mov	edx, 1021
c01030b0: ec                           	in	al, dx
c01030b1: a8 20                        	test	al, 32
c01030b3: 74 fb                        	je	0xc01030b0 <logcnv+0x7>
c01030b5: ba f8 03 00 00               	mov	edx, 1016
c01030ba: 89 c8                        	mov	eax, ecx
c01030bc: ee                           	out	dx, al
c01030bd: c3                           	ret

c01030be <log_intnv>:
c01030be: 55                           	push	ebp
c01030bf: 89 d1                        	mov	ecx, edx
c01030c1: 57                           	push	edi
c01030c2: 56                           	push	esi
c01030c3: 53                           	push	ebx
c01030c4: 89 c3                        	mov	ebx, eax
c01030c6: 83 ec 10                     	sub	esp, 16
c01030c9: 8d 74 24 04                  	lea	esi, [esp + 4]
c01030cd: 89 f7                        	mov	edi, esi
c01030cf: 89 c5                        	mov	ebp, eax
c01030d1: 31 d2                        	xor	edx, edx
c01030d3: 46                           	inc	esi
c01030d4: f7 f1                        	div	ecx
c01030d6: 39 cd                        	cmp	ebp, ecx
c01030d8: 73 f5                        	jae	0xc01030cf <log_intnv+0x11>
c01030da: c6 06 00                     	mov	byte ptr [esi], 0
c01030dd: 89 d8                        	mov	eax, ebx
c01030df: 31 d2                        	xor	edx, edx
c01030e1: 4e                           	dec	esi
c01030e2: f7 f1                        	div	ecx
c01030e4: 8a 92 80 46 10 c0            	mov	dl, byte ptr [edx - 1072675200]
c01030ea: 88 16                        	mov	byte ptr [esi], dl
c01030ec: 89 da                        	mov	edx, ebx
c01030ee: 89 c3                        	mov	ebx, eax
c01030f0: 39 ca                        	cmp	edx, ecx
c01030f2: 73 e9                        	jae	0xc01030dd <log_intnv+0x1f>
c01030f4: 0f be 07                     	movsx	eax, byte ptr [edi]
c01030f7: 84 c0                        	test	al, al
c01030f9: 74 08                        	je	0xc0103103 <log_intnv+0x45>
c01030fb: 47                           	inc	edi
c01030fc: e8 a8 ff ff ff               	call	0xc01030a9 <logcnv>
c0103101: eb f1                        	jmp	0xc01030f4 <log_intnv+0x36>
c0103103: 83 c4 10                     	add	esp, 16
c0103106: 5b                           	pop	ebx
c0103107: 5e                           	pop	esi
c0103108: 5f                           	pop	edi
c0103109: 5d                           	pop	ebp
c010310a: c3                           	ret

c010310b <LogWriteSerial>:
c010310b: 55                           	push	ebp
c010310c: 57                           	push	edi
c010310d: 56                           	push	esi
c010310e: 53                           	push	ebx
c010310f: 83 ec 1c                     	sub	esp, 28
c0103112: 8b 7c 24 30                  	mov	edi, dword ptr [esp + 48]
c0103116: 85 ff                        	test	edi, edi
c0103118: 75 10                        	jne	0xc010312a <LogWriteSerial+0x1f>
c010311a: 83 ec 0c                     	sub	esp, 12
c010311d: 68 91 46 10 c0               	push	3222292113
c0103122: e8 e4 ff ff ff               	call	0xc010310b <LogWriteSerial>
c0103127: 83 c4 10                     	add	esp, 16
c010312a: 8d 5c 24 34                  	lea	ebx, [esp + 52]
c010312e: 31 f6                        	xor	esi, esi
c0103130: 0f be 04 37                  	movsx	eax, byte ptr [edi + esi]
c0103134: 84 c0                        	test	al, al
c0103136: 0f 84 ae 00 00 00            	je	0xc01031ea <LogWriteSerial+0xdf>
c010313c: 3c 25                        	cmp	al, 37
c010313e: 0f 85 9b 00 00 00            	jne	0xc01031df <LogWriteSerial+0xd4>
c0103144: 46                           	inc	esi
c0103145: 8a 14 37                     	mov	dl, byte ptr [edi + esi]
c0103148: 80 fa 64                     	cmp	dl, 100
c010314b: 74 6c                        	je	0xc01031b9 <LogWriteSerial+0xae>
c010314d: 7f 2a                        	jg	0xc0103179 <LogWriteSerial+0x6e>
c010314f: 80 fa 58                     	cmp	dl, 88
c0103152: 74 56                        	je	0xc01031aa <LogWriteSerial+0x9f>
c0103154: 7f 11                        	jg	0xc0103167 <LogWriteSerial+0x5c>
c0103156: b8 25 00 00 00               	mov	eax, 37
c010315b: 80 fa 25                     	cmp	dl, 37
c010315e: 74 7f                        	je	0xc01031df <LogWriteSerial+0xd4>
c0103160: 80 fa 4c                     	cmp	dl, 76
c0103163: 74 4a                        	je	0xc01031af <LogWriteSerial+0xa4>
c0103165: eb 65                        	jmp	0xc01031cc <LogWriteSerial+0xc1>
c0103167: 80 fa 63                     	cmp	dl, 99
c010316a: 75 60                        	jne	0xc01031cc <LogWriteSerial+0xc1>
c010316c: 0f be 03                     	movsx	eax, byte ptr [ebx]
c010316f: 8d 6b 04                     	lea	ebp, [ebx + 4]
c0103172: e8 32 ff ff ff               	call	0xc01030a9 <logcnv>
c0103177: eb 4f                        	jmp	0xc01031c8 <LogWriteSerial+0xbd>
c0103179: 80 fa 75                     	cmp	dl, 117
c010317c: 74 3b                        	je	0xc01031b9 <LogWriteSerial+0xae>
c010317e: 7f 13                        	jg	0xc0103193 <LogWriteSerial+0x88>
c0103180: 80 fa 6c                     	cmp	dl, 108
c0103183: 74 2a                        	je	0xc01031af <LogWriteSerial+0xa4>
c0103185: 80 fa 73                     	cmp	dl, 115
c0103188: 75 42                        	jne	0xc01031cc <LogWriteSerial+0xc1>
c010318a: 89 d8                        	mov	eax, ebx
c010318c: 83 c3 04                     	add	ebx, 4
c010318f: 8b 28                        	mov	ebp, dword ptr [eax]
c0103191: eb 07                        	jmp	0xc010319a <LogWriteSerial+0x8f>
c0103193: 80 fa 78                     	cmp	dl, 120
c0103196: 74 12                        	je	0xc01031aa <LogWriteSerial+0x9f>
c0103198: eb 32                        	jmp	0xc01031cc <LogWriteSerial+0xc1>
c010319a: 0f be 45 00                  	movsx	eax, byte ptr [ebp]
c010319e: 84 c0                        	test	al, al
c01031a0: 74 42                        	je	0xc01031e4 <LogWriteSerial+0xd9>
c01031a2: 45                           	inc	ebp
c01031a3: e8 01 ff ff ff               	call	0xc01030a9 <logcnv>
c01031a8: eb f0                        	jmp	0xc010319a <LogWriteSerial+0x8f>
c01031aa: 8d 6b 04                     	lea	ebp, [ebx + 4]
c01031ad: eb 03                        	jmp	0xc01031b2 <LogWriteSerial+0xa7>
c01031af: 8d 6b 08                     	lea	ebp, [ebx + 8]
c01031b2: ba 10 00 00 00               	mov	edx, 16
c01031b7: eb 08                        	jmp	0xc01031c1 <LogWriteSerial+0xb6>
c01031b9: 8d 6b 04                     	lea	ebp, [ebx + 4]
c01031bc: ba 0a 00 00 00               	mov	edx, 10
c01031c1: 8b 03                        	mov	eax, dword ptr [ebx]
c01031c3: e8 f6 fe ff ff               	call	0xc01030be <log_intnv>
c01031c8: 89 eb                        	mov	ebx, ebp
c01031ca: eb 18                        	jmp	0xc01031e4 <LogWriteSerial+0xd9>
c01031cc: b8 25 00 00 00               	mov	eax, 37
c01031d1: 88 54 24 0f                  	mov	byte ptr [esp + 15], dl
c01031d5: e8 cf fe ff ff               	call	0xc01030a9 <logcnv>
c01031da: 0f be 44 24 0f               	movsx	eax, byte ptr [esp + 15]
c01031df: e8 c5 fe ff ff               	call	0xc01030a9 <logcnv>
c01031e4: 46                           	inc	esi
c01031e5: e9 46 ff ff ff               	jmp	0xc0103130 <LogWriteSerial+0x25>
c01031ea: 83 c4 1c                     	add	esp, 28
c01031ed: 5b                           	pop	ebx
c01031ee: 5e                           	pop	esi
c01031ef: 5f                           	pop	edi
c01031f0: 5d                           	pop	ebp
c01031f1: c3                           	ret

c01031f2 <PanicEx>:
c01031f2: 56                           	push	esi
c01031f3: 53                           	push	ebx
c01031f4: 83 ec 08                     	sub	esp, 8
c01031f7: 8b 5c 24 14                  	mov	ebx, dword ptr [esp + 20]
c01031fb: 8b 74 24 18                  	mov	esi, dword ptr [esp + 24]
c01031ff: 56                           	push	esi
c0103200: 53                           	push	ebx
c0103201: 68 96 46 10 c0               	push	3222292118
c0103206: e8 00 ff ff ff               	call	0xc010310b <LogWriteSerial>
c010320b: c7 04 24 29 00 00 00         	mov	dword ptr [esp], 41
c0103212: e8 d7 e8 ff ff               	call	0xc0101aee <RaiseIrql>
c0103217: 83 c4 0c                     	add	esp, 12
c010321a: 56                           	push	esi
c010321b: 53                           	push	ebx
c010321c: 68 a3 46 10 c0               	push	3222292131
c0103221: e8 e5 fe ff ff               	call	0xc010310b <LogWriteSerial>
c0103226: 83 c4 10                     	add	esp, 16
c0103229: e8 bd 05 00 00               	call	0xc01037eb <ArchDisableInterrupts>
c010322e: e8 ba 05 00 00               	call	0xc01037ed <ArchStallProcessor>
c0103233: eb f4                        	jmp	0xc0103229 <PanicEx+0x37>

c0103235 <Panic>:
c0103235: 83 ec 0c                     	sub	esp, 12
c0103238: ba f7 44 10 c0               	mov	edx, 3222291703
c010323d: 8b 44 24 10                  	mov	eax, dword ptr [esp + 16]
c0103241: 83 f8 0e                     	cmp	eax, 14
c0103244: 7f 07                        	jg	0xc010324d <Panic+0x18>
c0103246: 8b 14 85 20 41 10 c0         	mov	edx, dword ptr [4*eax - 1072676576]
c010324d: 51                           	push	ecx
c010324e: 51                           	push	ecx
c010324f: 52                           	push	edx
c0103250: 50                           	push	eax
c0103251: e8 9c ff ff ff               	call	0xc01031f2 <PanicEx>

c0103256 <ArchInitBootstrapCpu>:
c0103256: 83 ec 0c                     	sub	esp, 12
c0103259: e8 26 01 00 00               	call	0xc0103384 <x86InitGdt>
c010325e: e8 1a 02 00 00               	call	0xc010347d <x86InitIdt>
c0103263: e8 bb 02 00 00               	call	0xc0103523 <x86InitTss>
c0103268: e8 7a 00 00 00               	call	0xc01032e7 <InitPic>
c010326d: 83 c4 0c                     	add	esp, 12
c0103270: e9 74 05 00 00               	jmp	0xc01037e9 <ArchEnableInterrupts>

c0103275 <ArchInitNextCpu>:
c0103275: 31 c0                        	xor	eax, eax
c0103277: c3                           	ret

c0103278 <ArchReboot>:
c0103278: 83 ec 0c                     	sub	esp, 12
c010327b: e4 64                        	in	al, 100
c010327d: a8 02                        	test	al, 2
c010327f: 75 fa                        	jne	0xc010327b <ArchReboot+0x3>
c0103281: b0 fe                        	mov	al, -2
c0103283: e6 64                        	out	100, al
c0103285: e8 63 05 00 00               	call	0xc01037ed <ArchStallProcessor>
c010328a: eb f9                        	jmp	0xc0103285 <ArchReboot+0xd>

c010328c <x86HandleInterrupt>:
c010328c: c3                           	ret

c010328d <IsPicIrqSpurious>:
c010328d: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0103291: 83 f8 27                     	cmp	eax, 39
c0103294: 75 20                        	jne	0xc01032b6 <IsPicIrqSpurious+0x29>
c0103296: b0 0b                        	mov	al, 11
c0103298: e6 20                        	out	32, al
c010329a: e6 a0                        	out	160, al
c010329c: e4 a0                        	in	al, 160
c010329e: 89 c2                        	mov	edx, eax
c01032a0: e4 20                        	in	al, 32
c01032a2: c1 e2 08                     	shl	edx, 8
c01032a5: 0f b6 c0                     	movzx	eax, al
c01032a8: 09 c2                        	or	edx, eax
c01032aa: 66 c1 ea 07                  	shr	dx, 7
c01032ae: 83 f2 01                     	xor	edx, 1
c01032b1: 83 e2 01                     	and	edx, 1
c01032b4: eb 1e                        	jmp	0xc01032d4 <IsPicIrqSpurious+0x47>
c01032b6: 31 d2                        	xor	edx, edx
c01032b8: 83 f8 2f                     	cmp	eax, 47
c01032bb: 75 17                        	jne	0xc01032d4 <IsPicIrqSpurious+0x47>
c01032bd: b0 0b                        	mov	al, 11
c01032bf: e6 20                        	out	32, al
c01032c1: e6 a0                        	out	160, al
c01032c3: e4 a0                        	in	al, 160
c01032c5: 89 c1                        	mov	ecx, eax
c01032c7: e4 20                        	in	al, 32
c01032c9: 80 e1 80                     	and	cl, -128
c01032cc: 75 06                        	jne	0xc01032d4 <IsPicIrqSpurious+0x47>
c01032ce: b0 20                        	mov	al, 32
c01032d0: e6 20                        	out	32, al
c01032d2: b2 01                        	mov	dl, 1
c01032d4: 89 d0                        	mov	eax, edx
c01032d6: c3                           	ret

c01032d7 <SendPicEoi>:
c01032d7: 83 7c 24 04 27               	cmp	dword ptr [esp + 4], 39
c01032dc: 7e 04                        	jle	0xc01032e2 <SendPicEoi+0xb>
c01032de: b0 20                        	mov	al, 32
c01032e0: e6 a0                        	out	160, al
c01032e2: b0 20                        	mov	al, 32
c01032e4: e6 20                        	out	32, al
c01032e6: c3                           	ret

c01032e7 <InitPic>:
c01032e7: e4 21                        	in	al, 33
c01032e9: 89 c1                        	mov	ecx, eax
c01032eb: e4 a1                        	in	al, 161
c01032ed: 89 c2                        	mov	edx, eax
c01032ef: b0 11                        	mov	al, 17
c01032f1: e6 20                        	out	32, al
c01032f3: e6 a0                        	out	160, al
c01032f5: b0 20                        	mov	al, 32
c01032f7: e6 21                        	out	33, al
c01032f9: b0 28                        	mov	al, 40
c01032fb: e6 a1                        	out	161, al
c01032fd: b0 04                        	mov	al, 4
c01032ff: e6 21                        	out	33, al
c0103301: b0 02                        	mov	al, 2
c0103303: e6 a1                        	out	161, al
c0103305: b0 01                        	mov	al, 1
c0103307: e6 21                        	out	33, al
c0103309: e6 a1                        	out	161, al
c010330b: 89 c8                        	mov	eax, ecx
c010330d: e6 21                        	out	33, al
c010330f: 89 d0                        	mov	eax, edx
c0103311: e6 a1                        	out	161, al
c0103313: 31 c0                        	xor	eax, eax
c0103315: e6 21                        	out	33, al
c0103317: e6 a1                        	out	161, al
c0103319: c3                           	ret

c010331a <HandlePit>:
c010331a: 83 ec 14                     	sub	esp, 20
c010331d: ff 35 4c c0 12 c0            	push	dword ptr [-1072512948]
c0103323: ff 35 48 c0 12 c0            	push	dword ptr [-1072512952]
c0103329: e8 db e8 ff ff               	call	0xc0101c09 <ReceivedTimer>
c010332e: 31 c0                        	xor	eax, eax
c0103330: 83 c4 1c                     	add	esp, 28
c0103333: c3                           	ret

c0103334 <InitPit>:
c0103334: 53                           	push	ebx
c0103335: b8 dc 34 12 00               	mov	eax, 1193180
c010333a: 99                           	cdq
c010333b: 83 ec 08                     	sub	esp, 8
c010333e: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c0103342: f7 fb                        	idiv	ebx
c0103344: 89 c1                        	mov	ecx, eax
c0103346: b0 36                        	mov	al, 54
c0103348: e6 43                        	out	67, al
c010334a: 89 c8                        	mov	eax, ecx
c010334c: e6 40                        	out	64, al
c010334e: 89 c8                        	mov	eax, ecx
c0103350: c1 f8 08                     	sar	eax, 8
c0103353: e6 40                        	out	64, al
c0103355: 89 d8                        	mov	eax, ebx
c0103357: 99                           	cdq
c0103358: 52                           	push	edx
c0103359: 53                           	push	ebx
c010335a: 6a 00                        	push	0
c010335c: 68 00 ca 9a 3b               	push	1000000000
c0103361: e8 4a 06 00 00               	call	0xc01039b0 <__udivdi3>
c0103366: 59                           	pop	ecx
c0103367: 5b                           	pop	ebx
c0103368: 68 1a 33 10 c0               	push	3222287130
c010336d: 6a 20                        	push	32
c010336f: a3 48 c0 12 c0               	mov	dword ptr [3222454344], eax
c0103374: 89 15 4c c0 12 c0            	mov	dword ptr [-1072512948], edx
c010337a: e8 de e6 ff ff               	call	0xc0101a5d <RegisterIrqHandler>
c010337f: 83 c4 18                     	add	esp, 24
c0103382: 5b                           	pop	ebx
c0103383: c3                           	ret

c0103384 <x86InitGdt>:
c0103384: 83 ec 0c                     	sub	esp, 12
c0103387: e8 bd e6 ff ff               	call	0xc0101a49 <GetCpu>
c010338c: 31 d2                        	xor	edx, edx
c010338e: 83 ec 0c                     	sub	esp, 12
c0103391: 8b 40 08                     	mov	eax, dword ptr [eax + 8]
c0103394: 89 50 04                     	mov	dword ptr [eax + 4], edx
c0103397: 89 50 08                     	mov	dword ptr [eax + 8], edx
c010339a: 8d 50 04                     	lea	edx, [eax + 4]
c010339d: 05 84 08 00 00               	add	eax, 2180
c01033a2: c7 80 88 f7 ff ff ff ff 00 00	mov	dword ptr [eax - 2168], 65535
c01033ac: c7 80 8c f7 ff ff 00 9a cf 00	mov	dword ptr [eax - 2164], 13605376
c01033b6: c7 80 90 f7 ff ff ff ff 00 00	mov	dword ptr [eax - 2160], 65535
c01033c0: c7 80 94 f7 ff ff 00 92 cf 00	mov	dword ptr [eax - 2156], 13603328
c01033ca: c7 80 98 f7 ff ff ff ff 00 00	mov	dword ptr [eax - 2152], 65535
c01033d4: c7 80 9c f7 ff ff 00 fa cf 00	mov	dword ptr [eax - 2148], 13629952
c01033de: c7 80 a0 f7 ff ff ff ff 00 00	mov	dword ptr [eax - 2144], 65535
c01033e8: c7 80 a4 f7 ff ff 00 f2 cf 00	mov	dword ptr [eax - 2140], 13627904
c01033f2: 66 c7 00 7f 00               	mov	word ptr [eax], 127
c01033f7: 89 50 02                     	mov	dword ptr [eax + 2], edx
c01033fa: 50                           	push	eax
c01033fb: e8 b0 03 00 00               	call	0xc01037b0 <x86LoadGdt>
c0103400: 83 c4 1c                     	add	esp, 28
c0103403: c3                           	ret

c0103404 <x86AddTssToGdt>:
c0103404: 53                           	push	ebx
c0103405: 83 ec 08                     	sub	esp, 8
c0103408: 8b 5c 24 10                  	mov	ebx, dword ptr [esp + 16]
c010340c: e8 38 e6 ff ff               	call	0xc0101a49 <GetCpu>
c0103411: 8b 40 08                     	mov	eax, dword ptr [eax + 8]
c0103414: 89 da                        	mov	edx, ebx
c0103416: c1 ea 10                     	shr	edx, 16
c0103419: 66 89 58 2e                  	mov	word ptr [eax + 46], bx
c010341d: c1 eb 18                     	shr	ebx, 24
c0103420: 66 c7 40 2c 68 00            	mov	word ptr [eax + 44], 104
c0103426: 88 50 30                     	mov	byte ptr [eax + 48], dl
c0103429: 66 c7 40 31 89 00            	mov	word ptr [eax + 49], 137
c010342f: 88 58 33                     	mov	byte ptr [eax + 51], bl
c0103432: 83 c4 08                     	add	esp, 8
c0103435: b8 28 00 00 00               	mov	eax, 40
c010343a: 5b                           	pop	ebx
c010343b: c3                           	ret

c010343c <x86SetIdtEntry>:
c010343c: 57                           	push	edi
c010343d: 89 c7                        	mov	edi, eax
c010343f: 56                           	push	esi
c0103440: 89 ce                        	mov	esi, ecx
c0103442: 53                           	push	ebx
c0103443: 89 d3                        	mov	ebx, edx
c0103445: e8 ff e5 ff ff               	call	0xc0101a49 <GetCpu>
c010344a: 89 f2                        	mov	edx, esi
c010344c: 8b 40 08                     	mov	eax, dword ptr [eax + 8]
c010344f: 8d 04 f8                     	lea	eax, [eax + 8*edi]
c0103452: 66 89 98 84 00 00 00         	mov	word ptr [eax + 132], bx
c0103459: c1 eb 10                     	shr	ebx, 16
c010345c: 66 89 98 8a 00 00 00         	mov	word ptr [eax + 138], bx
c0103463: 66 c7 80 86 00 00 00 08 00   	mov	word ptr [eax + 134], 8
c010346c: c6 80 88 00 00 00 00         	mov	byte ptr [eax + 136], 0
c0103473: 88 90 89 00 00 00            	mov	byte ptr [eax + 137], dl
c0103479: 5b                           	pop	ebx
c010347a: 5e                           	pop	esi
c010347b: 5f                           	pop	edi
c010347c: c3                           	ret

c010347d <x86InitIdt>:
c010347d: 57                           	push	edi
c010347e: 56                           	push	esi
c010347f: be 60 41 10 c0               	mov	esi, 3222290784
c0103484: 53                           	push	ebx
c0103485: 81 ec a0 00 00 00            	sub	esp, 160
c010348b: e8 b9 e5 ff ff               	call	0xc0101a49 <GetCpu>
c0103490: 8d 7c 24 48                  	lea	edi, [esp + 72]
c0103494: b9 16 00 00 00               	mov	ecx, 22
c0103499: f3 a5                        	rep		movsd	dword ptr es:[edi], dword ptr [esi]
c010349b: 8b 58 08                     	mov	ebx, dword ptr [eax + 8]
c010349e: 8d 7c 24 08                  	lea	edi, [esp + 8]
c01034a2: be c0 41 10 c0               	mov	esi, 3222290880
c01034a7: b9 10 00 00 00               	mov	ecx, 16
c01034ac: f3 a5                        	rep		movsd	dword ptr es:[edi], dword ptr [esi]
c01034ae: 31 f6                        	xor	esi, esi
c01034b0: 8b 54 b4 48                  	mov	edx, dword ptr [esp + 4*esi + 72]
c01034b4: 89 f0                        	mov	eax, esi
c01034b6: b9 8e 00 00 00               	mov	ecx, 142
c01034bb: 46                           	inc	esi
c01034bc: e8 7b ff ff ff               	call	0xc010343c <x86SetIdtEntry>
c01034c1: 83 fe 15                     	cmp	esi, 21
c01034c4: 75 ea                        	jne	0xc01034b0 <x86InitIdt+0x33>
c01034c6: be 20 00 00 00               	mov	esi, 32
c01034cb: 8b 54 b4 88                  	mov	edx, dword ptr [esp + 4*esi - 120]
c01034cf: 89 f0                        	mov	eax, esi
c01034d1: b9 8e 00 00 00               	mov	ecx, 142
c01034d6: 46                           	inc	esi
c01034d7: e8 60 ff ff ff               	call	0xc010343c <x86SetIdtEntry>
c01034dc: 83 fe 30                     	cmp	esi, 48
c01034df: 75 ea                        	jne	0xc01034cb <x86InitIdt+0x4e>
c01034e1: b9 ee 00 00 00               	mov	ecx, 238
c01034e6: ba a9 38 10 c0               	mov	edx, 3222288553
c01034eb: b8 60 00 00 00               	mov	eax, 96
c01034f0: e8 47 ff ff ff               	call	0xc010343c <x86SetIdtEntry>
c01034f5: 8d 83 84 00 00 00            	lea	eax, [ebx + 132]
c01034fb: 83 ec 0c                     	sub	esp, 12
c01034fe: 66 c7 83 8a 08 00 00 ff 07   	mov	word ptr [ebx + 2186], 2047
c0103507: 89 83 8c 08 00 00            	mov	dword ptr [ebx + 2188], eax
c010350d: 81 c3 8a 08 00 00            	add	ebx, 2186
c0103513: 53                           	push	ebx
c0103514: e8 b7 02 00 00               	call	0xc01037d0 <x86LoadIdt>
c0103519: 81 c4 b0 00 00 00            	add	esp, 176
c010351f: 5b                           	pop	ebx
c0103520: 5e                           	pop	esi
c0103521: 5f                           	pop	edi
c0103522: c3                           	ret

c0103523 <x86InitTss>:
c0103523: 53                           	push	ebx
c0103524: 83 ec 08                     	sub	esp, 8
c0103527: e8 1d e5 ff ff               	call	0xc0101a49 <GetCpu>
c010352c: 83 ec 0c                     	sub	esp, 12
c010352f: 8b 58 08                     	mov	ebx, dword ptr [eax + 8]
c0103532: 6a 68                        	push	104
c0103534: e8 b7 ec ff ff               	call	0xc01021f0 <AllocHeap>
c0103539: 31 d2                        	xor	edx, edx
c010353b: 89 03                        	mov	dword ptr [ebx], eax
c010353d: 66 c7 00 10 00               	mov	word ptr [eax], 16
c0103542: 8b 03                        	mov	eax, dword ptr [ebx]
c0103544: 89 50 04                     	mov	dword ptr [eax + 4], edx
c0103547: 8b 03                        	mov	eax, dword ptr [ebx]
c0103549: 66 c7 40 08 10 00            	mov	word ptr [eax + 8], 16
c010354f: 8b 03                        	mov	eax, dword ptr [ebx]
c0103551: 66 c7 40 66 68 00            	mov	word ptr [eax + 102], 104
c0103557: 59                           	pop	ecx
c0103558: ff 33                        	push	dword ptr [ebx]
c010355a: e8 a5 fe ff ff               	call	0xc0103404 <x86AddTssToGdt>
c010355f: 0f b7 c0                     	movzx	eax, ax
c0103562: 89 04 24                     	mov	dword ptr [esp], eax
c0103565: e8 d6 03 00 00               	call	0xc0103940 <x86LoadTss>
c010356a: 83 c4 18                     	add	esp, 24
c010356d: 5b                           	pop	ebx
c010356e: c3                           	ret

c010356f <ArchGetMemory>:
c010356f: 56                           	push	esi
c0103570: 53                           	push	ebx
c0103571: 51                           	push	ecx
c0103572: 83 3d 60 c0 12 c0 00         	cmp	dword ptr [-1072512928], 0
c0103579: 75 35                        	jne	0xc01035b0 <ArchGetMemory+0x41>
c010357b: 8b 0d 4b 37 10 c0            	mov	ecx, dword ptr [-1072679093]
c0103581: e8 a9 00 00 00               	call	0xc010362f <x86KernelMemoryToPhysical>
c0103586: a3 4b 37 10 c0               	mov	dword ptr [3222288203], eax
c010358b: f6 00 40                     	test	byte ptr [eax], 64
c010358e: 75 0a                        	jne	0xc010359a <ArchGetMemory+0x2b>
c0103590: 83 ec 0c                     	sub	esp, 12
c0103593: 6a 0a                        	push	10
c0103595: e8 9b fc ff ff               	call	0xc0103235 <Panic>
c010359a: 8b 50 2c                     	mov	edx, dword ptr [eax + 44]
c010359d: 8b 48 30                     	mov	ecx, dword ptr [eax + 48]
c01035a0: 89 15 5c c0 12 c0            	mov	dword ptr [-1072512932], edx
c01035a6: e8 84 00 00 00               	call	0xc010362f <x86KernelMemoryToPhysical>
c01035ab: a3 60 c0 12 c0               	mov	dword ptr [3222454368], eax
c01035b0: 8b 1d 58 c0 12 c0            	mov	ebx, dword ptr [-1072512936]
c01035b6: 3b 1d 5c c0 12 c0            	cmp	ebx, dword ptr [-1072512932]
c01035bc: 7d 6b                        	jge	0xc0103629 <ArchGetMemory+0xba>
c01035be: 8b 15 60 c0 12 c0            	mov	edx, dword ptr [-1072512928]
c01035c4: 83 c8 ff                     	or	eax, -1
c01035c7: 8b 4a 04                     	mov	ecx, dword ptr [edx + 4]
c01035ca: 83 7a 10 00                  	cmp	dword ptr [edx + 16], 0
c01035ce: 8b 72 14                     	mov	esi, dword ptr [edx + 20]
c01035d1: 89 0d 50 c0 12 c0            	mov	dword ptr [-1072512944], ecx
c01035d7: 75 03                        	jne	0xc01035dc <ArchGetMemory+0x6d>
c01035d9: 8b 42 0c                     	mov	eax, dword ptr [edx + 12]
c01035dc: 83 c2 18                     	add	edx, 24
c01035df: 83 c3 18                     	add	ebx, 24
c01035e2: 4e                           	dec	esi
c01035e3: a3 54 c0 12 c0               	mov	dword ptr [3222454356], eax
c01035e8: 89 15 60 c0 12 c0            	mov	dword ptr [-1072512928], edx
c01035ee: 89 1d 58 c0 12 c0            	mov	dword ptr [-1072512936], ebx
c01035f4: 0f 85 78 ff ff ff            	jne	0xc0103572 <ArchGetMemory+0x3>
c01035fa: ba ff 3f 13 00               	mov	edx, 1261567
c01035ff: 01 c8                        	add	eax, ecx
c0103601: 81 e2 00 f0 ff ff            	and	edx, 4294963200
c0103607: 39 d0                        	cmp	eax, edx
c0103609: 0f 82 63 ff ff ff            	jb	0xc0103572 <ArchGetMemory+0x3>
c010360f: 39 d1                        	cmp	ecx, edx
c0103611: 72 07                        	jb	0xc010361a <ArchGetMemory+0xab>
c0103613: b8 50 c0 12 c0               	mov	eax, 3222454352
c0103618: eb 11                        	jmp	0xc010362b <ArchGetMemory+0xbc>
c010361a: 29 d0                        	sub	eax, edx
c010361c: 89 15 50 c0 12 c0            	mov	dword ptr [-1072512944], edx
c0103622: a3 54 c0 12 c0               	mov	dword ptr [3222454356], eax
c0103627: eb ea                        	jmp	0xc0103613 <ArchGetMemory+0xa4>
c0103629: 31 c0                        	xor	eax, eax
c010362b: 5a                           	pop	edx
c010362c: 5b                           	pop	ebx
c010362d: 5e                           	pop	esi
c010362e: c3                           	ret

c010362f <x86KernelMemoryToPhysical>:
c010362f: 8d 81 00 00 00 c0            	lea	eax, [ecx - 1073741824]
c0103635: c3                           	ret

c0103636 <ArchAddGlobalsToVas>:
c0103636: c3                           	ret

c0103637 <ArchSetVas>:
c0103637: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c010363b: 8b 40 04                     	mov	eax, dword ptr [eax + 4]
c010363e: 8b 00                        	mov	eax, dword ptr [eax]
c0103640: 89 44 24 04                  	mov	dword ptr [esp + 4], eax
c0103644: e9 0b 03 00 00               	jmp	0xc0103954 <x86SetCr3>

c0103649 <x86MapPage>:
c0103649: 55                           	push	ebp
c010364a: 57                           	push	edi
c010364b: 56                           	push	esi
c010364c: 53                           	push	ebx
c010364d: 83 ec 1c                     	sub	esp, 28
c0103650: 8b 44 24 34                  	mov	eax, dword ptr [esp + 52]
c0103654: 8b 6c 24 30                  	mov	ebp, dword ptr [esp + 48]
c0103658: 8b 5c 24 38                  	mov	ebx, dword ptr [esp + 56]
c010365c: 8b 7c 24 3c                  	mov	edi, dword ptr [esp + 60]
c0103660: 89 44 24 08                  	mov	dword ptr [esp + 8], eax
c0103664: 8b 45 04                     	mov	eax, dword ptr [ebp + 4]
c0103667: 89 de                        	mov	esi, ebx
c0103669: c1 eb 0c                     	shr	ebx, 12
c010366c: 8b 40 04                     	mov	eax, dword ptr [eax + 4]
c010366f: c1 ee 16                     	shr	esi, 22
c0103672: 81 e3 ff 03 00 00            	and	ebx, 1023
c0103678: 8d 0c b0                     	lea	ecx, [eax + 4*esi]
c010367b: f6 01 01                     	test	byte ptr [ecx], 1
c010367e: 75 37                        	jne	0xc01036b7 <x86MapPage+0x6e>
c0103680: 89 4c 24 0c                  	mov	dword ptr [esp + 12], ecx
c0103684: e8 2e ee ff ff               	call	0xc01024b7 <AllocPhys>
c0103689: 8b 4c 24 0c                  	mov	ecx, dword ptr [esp + 12]
c010368d: 83 ec 0c                     	sub	esp, 12
c0103690: 83 c8 03                     	or	eax, 3
c0103693: 89 01                        	mov	dword ptr [ecx], eax
c0103695: 55                           	push	ebp
c0103696: e8 9c ff ff ff               	call	0xc0103637 <ArchSetVas>
c010369b: 8d 86 00 fc 0f 00            	lea	eax, [esi + 1047552]
c01036a1: 83 c4 0c                     	add	esp, 12
c01036a4: c1 e0 0c                     	shl	eax, 12
c01036a7: 68 00 10 00 00               	push	4096
c01036ac: 6a 00                        	push	0
c01036ae: 50                           	push	eax
c01036af: e8 35 db ff ff               	call	0xc01011e9 <memset>
c01036b4: 83 c4 10                     	add	esp, 16
c01036b7: 8b 54 24 08                  	mov	edx, dword ptr [esp + 8]
c01036bb: c1 e6 0a                     	shl	esi, 10
c01036be: 8d 84 33 00 00 f0 3f         	lea	eax, [ebx + esi + 1072693248]
c01036c5: 09 d7                        	or	edi, edx
c01036c7: 89 3c 85 00 00 00 00         	mov	dword ptr [4*eax], edi
c01036ce: 89 6c 24 30                  	mov	dword ptr [esp + 48], ebp
c01036d2: 83 c4 1c                     	add	esp, 28
c01036d5: 5b                           	pop	ebx
c01036d6: 5e                           	pop	esi
c01036d7: 5f                           	pop	edi
c01036d8: 5d                           	pop	ebp
c01036d9: e9 59 ff ff ff               	jmp	0xc0103637 <ArchSetVas>

c01036de <ArchUpdateMapping>:
c01036de: 83 ec 0c                     	sub	esp, 12
c01036e1: 8b 4c 24 14                  	mov	ecx, dword ptr [esp + 20]
c01036e5: 8a 51 04                     	mov	dl, byte ptr [ecx + 4]
c01036e8: 89 d0                        	mov	eax, edx
c01036ea: 83 e0 88                     	and	eax, -120
c01036ed: 3c 80                        	cmp	al, -128
c01036ef: 0f 94 c0                     	sete	al
c01036f2: 83 e2 01                     	and	edx, 1
c01036f5: 0f b6 c0                     	movzx	eax, al
c01036f8: 01 c0                        	add	eax, eax
c01036fa: 09 d0                        	or	eax, edx
c01036fc: 50                           	push	eax
c01036fd: ff 31                        	push	dword ptr [ecx]
c01036ff: ff 71 10                     	push	dword ptr [ecx + 16]
c0103702: ff 74 24 1c                  	push	dword ptr [esp + 28]
c0103706: e8 3e ff ff ff               	call	0xc0103649 <x86MapPage>
c010370b: 83 c4 1c                     	add	esp, 28
c010370e: c3                           	ret

c010370f <ArchAddMapping>:
c010370f: eb cd                        	jmp	0xc01036de <ArchUpdateMapping>

c0103711 <ArchUnmap>:
c0103711: 83 ec 0c                     	sub	esp, 12
c0103714: 6a 00                        	push	0
c0103716: 8b 44 24 18                  	mov	eax, dword ptr [esp + 24]
c010371a: ff 30                        	push	dword ptr [eax]
c010371c: 6a 00                        	push	0
c010371e: ff 74 24 1c                  	push	dword ptr [esp + 28]
c0103722: e8 22 ff ff ff               	call	0xc0103649 <x86MapPage>
c0103727: 83 c4 1c                     	add	esp, 28
c010372a: c3                           	ret

c010372b <ArchFlushTlb>:
c010372b: e9 07 ff ff ff               	jmp	0xc0103637 <ArchSetVas>

c0103730 <ArchGetVirtFaultType>:
c0103730: 31 c0                        	xor	eax, eax
c0103732: c3                           	ret

c0103733 <ArchInitVirt>:
c0103733: c3                           	ret
c0103734: 66 90                        	nop
c0103736: 66 90                        	nop
c0103738: 66 90                        	nop
c010373a: 66 90                        	nop
c010373c: 66 90                        	nop
c010373e: 66 90                        	nop

c0103740 <vesa_depth>:
c0103740: 00 00                        	add	byte ptr [eax], al

c0103741 <vesa_framebuffer>:
c0103741: 00 00                        	add	byte ptr [eax], al
c0103743: 00 00                        	add	byte ptr [eax], al

c0103745 <vesa_width>:
c0103745: 00 00                        	add	byte ptr [eax], al

c0103747 <vesa_height>:
c0103747: 00 00                        	add	byte ptr [eax], al

c0103749 <vesa_pitch>:
c0103749: 00 00                        	add	byte ptr [eax], al

c010374b <x86_grub_table>:
c010374b: 00 00                        	add	byte ptr [eax], al
c010374d: 00 00                        	add	byte ptr [eax], al

c010374f <KernelEntryPoint>:
c010374f: 89 1d 4b 37 10 c0            	mov	dword ptr [-1072679093], ebx
c0103755: 66 a1 10 00 07 00            	mov	ax, word ptr [458768]
c010375b: 66 a3 49 37 10 c0            	mov	word ptr [3222288201], ax
c0103761: 66 a1 12 00 07 00            	mov	ax, word ptr [458770]
c0103767: 66 a3 45 37 10 c0            	mov	word ptr [3222288197], ax
c010376d: 66 a1 14 00 07 00            	mov	ax, word ptr [458772]
c0103773: 66 a3 47 37 10 c0            	mov	word ptr [3222288199], ax
c0103779: a0 19 00 07 00               	mov	al, byte ptr [458777]
c010377e: a2 40 37 10 c0               	mov	byte ptr [3222288192], al
c0103783: a1 28 00 07 00               	mov	eax, dword ptr [458792]
c0103788: a3 41 37 10 c0               	mov	dword ptr [3222288193], eax
c010378d: c7 05 00 10 13 c0 00 00 00 00	mov	dword ptr [-1072492544], 0
c0103797: 0f 20 d9                     	mov	ecx, cr3
c010379a: 0f 22 d9                     	mov	cr3, ecx
c010379d: 31 c0                        	xor	eax, eax
c010379f: 8e e0                        	mov	fs, eax
c01037a1: bc 00 10 13 c0               	mov	esp, 3222474752
c01037a6: e8 c6 e1 ff ff               	call	0xc0101971 <KernelMain>
c01037ab: fa                           	cli
c01037ac: f4                           	hlt
c01037ad: eb fe                        	jmp	0xc01037ad <KernelEntryPoint+0x5e>
c01037af: 90                           	nop

c01037b0 <x86LoadGdt>:
c01037b0: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01037b4: 0f 01 10                     	lgdtd	[eax]
c01037b7: ea be 37 10 c0 08 00         	ljmp	8, 3222288318

c01037be <x86LoadGdt.reloadSegments>:
c01037be: 66 b8 10 00                  	mov	ax, 16
c01037c2: 8e d8                        	mov	ds, eax
c01037c4: 8e c0                        	mov	es, eax
c01037c6: 8e d0                        	mov	ss, eax
c01037c8: c3                           	ret
c01037c9: 66 90                        	nop
c01037cb: 66 90                        	nop
c01037cd: 66 90                        	nop
c01037cf: 90                           	nop

c01037d0 <x86LoadIdt>:
c01037d0: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c01037d4: 0f 01 18                     	lidtd	[eax]
c01037d7: c3                           	ret
c01037d8: 66 90                        	nop
c01037da: 66 90                        	nop
c01037dc: 66 90                        	nop
c01037de: 66 90                        	nop

c01037e0 <ArchGetCurrentCpuIndex>:
c01037e0: 31 c0                        	xor	eax, eax
c01037e2: 66 8c e0                     	mov	ax, fs
c01037e5: c3                           	ret

c01037e6 <ArchReadTimestamp>:
c01037e6: 0f 31                        	rdtsc
c01037e8: c3                           	ret

c01037e9 <ArchEnableInterrupts>:
c01037e9: fb                           	sti
c01037ea: c3                           	ret

c01037eb <ArchDisableInterrupts>:
c01037eb: fa                           	cli
c01037ec: c3                           	ret

c01037ed <ArchStallProcessor>:
c01037ed: f4                           	hlt
c01037ee: c3                           	ret

c01037ef <x86AreCpusOn>:
c01037ef: 9c                           	pushfd
c01037f0: 58                           	pop	eax
c01037f1: 25 00 02 00 00               	and	eax, 512
c01037f6: c1 e8 09                     	shr	eax, 9
c01037f9: c3                           	ret
c01037fa: 66 90                        	nop
c01037fc: 66 90                        	nop
c01037fe: 66 90                        	nop

c0103800 <isr0>:
c0103800: 6a 00                        	push	0
c0103802: 6a 00                        	push	0
c0103804: e9 06 01 00 00               	jmp	0xc010390f <int_common_handler>

c0103809 <isr1>:
c0103809: 6a 00                        	push	0
c010380b: 6a 01                        	push	1
c010380d: e9 fd 00 00 00               	jmp	0xc010390f <int_common_handler>

c0103812 <isr2>:
c0103812: 6a 00                        	push	0
c0103814: 6a 02                        	push	2
c0103816: e9 f4 00 00 00               	jmp	0xc010390f <int_common_handler>

c010381b <isr3>:
c010381b: 6a 00                        	push	0
c010381d: 6a 03                        	push	3
c010381f: e9 eb 00 00 00               	jmp	0xc010390f <int_common_handler>

c0103824 <isr4>:
c0103824: 6a 00                        	push	0
c0103826: 6a 04                        	push	4
c0103828: e9 e2 00 00 00               	jmp	0xc010390f <int_common_handler>

c010382d <isr5>:
c010382d: 6a 00                        	push	0
c010382f: 6a 05                        	push	5
c0103831: e9 d9 00 00 00               	jmp	0xc010390f <int_common_handler>

c0103836 <isr6>:
c0103836: 6a 00                        	push	0
c0103838: 6a 06                        	push	6
c010383a: e9 d0 00 00 00               	jmp	0xc010390f <int_common_handler>

c010383f <isr7>:
c010383f: 6a 00                        	push	0
c0103841: 6a 07                        	push	7
c0103843: e9 c7 00 00 00               	jmp	0xc010390f <int_common_handler>

c0103848 <isr8>:
c0103848: 6a 08                        	push	8
c010384a: e9 c0 00 00 00               	jmp	0xc010390f <int_common_handler>

c010384f <isr9>:
c010384f: 6a 00                        	push	0
c0103851: 6a 09                        	push	9
c0103853: e9 b7 00 00 00               	jmp	0xc010390f <int_common_handler>

c0103858 <isr10>:
c0103858: 6a 0a                        	push	10
c010385a: e9 b0 00 00 00               	jmp	0xc010390f <int_common_handler>

c010385f <isr11>:
c010385f: 6a 0b                        	push	11
c0103861: e9 a9 00 00 00               	jmp	0xc010390f <int_common_handler>

c0103866 <isr12>:
c0103866: 6a 0c                        	push	12
c0103868: e9 a2 00 00 00               	jmp	0xc010390f <int_common_handler>

c010386d <isr13>:
c010386d: 6a 0d                        	push	13
c010386f: e9 9b 00 00 00               	jmp	0xc010390f <int_common_handler>

c0103874 <isr14>:
c0103874: 6a 0e                        	push	14
c0103876: e9 94 00 00 00               	jmp	0xc010390f <int_common_handler>

c010387b <isr15>:
c010387b: 6a 00                        	push	0
c010387d: 6a 0f                        	push	15
c010387f: e9 8b 00 00 00               	jmp	0xc010390f <int_common_handler>

c0103884 <isr16>:
c0103884: 6a 00                        	push	0
c0103886: 6a 10                        	push	16
c0103888: e9 82 00 00 00               	jmp	0xc010390f <int_common_handler>

c010388d <isr17>:
c010388d: 6a 11                        	push	17
c010388f: eb 7e                        	jmp	0xc010390f <int_common_handler>

c0103891 <isr18>:
c0103891: 6a 00                        	push	0
c0103893: 6a 12                        	push	18
c0103895: eb 78                        	jmp	0xc010390f <int_common_handler>

c0103897 <isr19>:
c0103897: 6a 00                        	push	0
c0103899: 6a 13                        	push	19
c010389b: eb 72                        	jmp	0xc010390f <int_common_handler>

c010389d <isr20>:
c010389d: 6a 00                        	push	0
c010389f: 6a 14                        	push	20
c01038a1: eb 6c                        	jmp	0xc010390f <int_common_handler>

c01038a3 <isr21>:
c01038a3: 6a 00                        	push	0
c01038a5: 6a 15                        	push	21
c01038a7: eb 66                        	jmp	0xc010390f <int_common_handler>

c01038a9 <isr96>:
c01038a9: 6a 00                        	push	0
c01038ab: 6a 60                        	push	96
c01038ad: eb 60                        	jmp	0xc010390f <int_common_handler>

c01038af <irq0>:
c01038af: 6a 00                        	push	0
c01038b1: 6a 20                        	push	32
c01038b3: eb 5a                        	jmp	0xc010390f <int_common_handler>

c01038b5 <irq1>:
c01038b5: 6a 00                        	push	0
c01038b7: 6a 21                        	push	33
c01038b9: eb 54                        	jmp	0xc010390f <int_common_handler>

c01038bb <irq2>:
c01038bb: 6a 00                        	push	0
c01038bd: 6a 22                        	push	34
c01038bf: eb 4e                        	jmp	0xc010390f <int_common_handler>

c01038c1 <irq3>:
c01038c1: 6a 00                        	push	0
c01038c3: 6a 23                        	push	35
c01038c5: eb 48                        	jmp	0xc010390f <int_common_handler>

c01038c7 <irq4>:
c01038c7: 6a 00                        	push	0
c01038c9: 6a 24                        	push	36
c01038cb: eb 42                        	jmp	0xc010390f <int_common_handler>

c01038cd <irq5>:
c01038cd: 6a 00                        	push	0
c01038cf: 6a 25                        	push	37
c01038d1: eb 3c                        	jmp	0xc010390f <int_common_handler>

c01038d3 <irq6>:
c01038d3: 6a 00                        	push	0
c01038d5: 6a 26                        	push	38
c01038d7: eb 36                        	jmp	0xc010390f <int_common_handler>

c01038d9 <irq7>:
c01038d9: 6a 00                        	push	0
c01038db: 6a 27                        	push	39
c01038dd: eb 30                        	jmp	0xc010390f <int_common_handler>

c01038df <irq8>:
c01038df: 6a 00                        	push	0
c01038e1: 6a 28                        	push	40
c01038e3: eb 2a                        	jmp	0xc010390f <int_common_handler>

c01038e5 <irq9>:
c01038e5: 6a 00                        	push	0
c01038e7: 6a 29                        	push	41
c01038e9: eb 24                        	jmp	0xc010390f <int_common_handler>

c01038eb <irq10>:
c01038eb: 6a 00                        	push	0
c01038ed: 6a 2a                        	push	42
c01038ef: eb 1e                        	jmp	0xc010390f <int_common_handler>

c01038f1 <irq11>:
c01038f1: 6a 00                        	push	0
c01038f3: 6a 2b                        	push	43
c01038f5: eb 18                        	jmp	0xc010390f <int_common_handler>

c01038f7 <irq12>:
c01038f7: 6a 00                        	push	0
c01038f9: 6a 2c                        	push	44
c01038fb: eb 12                        	jmp	0xc010390f <int_common_handler>

c01038fd <irq13>:
c01038fd: 6a 00                        	push	0
c01038ff: 6a 2d                        	push	45
c0103901: eb 0c                        	jmp	0xc010390f <int_common_handler>

c0103903 <irq14>:
c0103903: 6a 00                        	push	0
c0103905: 6a 2e                        	push	46
c0103907: eb 06                        	jmp	0xc010390f <int_common_handler>

c0103909 <irq15>:
c0103909: 6a 00                        	push	0
c010390b: 6a 2f                        	push	47
c010390d: eb 00                        	jmp	0xc010390f <int_common_handler>

c010390f <int_common_handler>:
c010390f: 60                           	pushal
c0103910: 1e                           	push	ds
c0103911: 06                           	push	es
c0103912: 0f a0                        	push	fs
c0103914: 0f a8                        	push	gs
c0103916: 66 b8 10 00                  	mov	ax, 16
c010391a: 8e d8                        	mov	ds, eax
c010391c: 8e c0                        	mov	es, eax
c010391e: fb                           	sti
c010391f: 54                           	push	esp
c0103920: fc                           	cld
c0103921: e8 66 f9 ff ff               	call	0xc010328c <x86HandleInterrupt>
c0103926: 83 c4 04                     	add	esp, 4
c0103929: 0f a9                        	pop	gs
c010392b: 0f a1                        	pop	fs
c010392d: 07                           	pop	es
c010392e: 1f                           	pop	ds
c010392f: 61                           	popal
c0103930: 83 c4 08                     	add	esp, 8
c0103933: cf                           	iretd
c0103934: 66 90                        	nop
c0103936: 66 90                        	nop
c0103938: 66 90                        	nop
c010393a: 66 90                        	nop
c010393c: 66 90                        	nop
c010393e: 66 90                        	nop

c0103940 <x86LoadTss>:
c0103940: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0103944: 0f 00 d8                     	ltr	ax
c0103947: c3                           	ret
c0103948: 66 90                        	nop
c010394a: 66 90                        	nop
c010394c: 66 90                        	nop
c010394e: 66 90                        	nop

c0103950 <ArchGetVirtFaultAddress>:
c0103950: 0f 20 d0                     	mov	eax, cr2
c0103953: c3                           	ret

c0103954 <x86SetCr3>:
c0103954: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c0103958: 0f 22 d8                     	mov	cr3, eax
c010395b: c3                           	ret
c010395c: 66 90                        	nop
c010395e: 66 90                        	nop

c0103960 <x86_allow_interrupts>:
c0103960: 00 00                        	add	byte ptr [eax], al
c0103962: 00 00                        	add	byte ptr [eax], al

c0103964 <x86_spinlocks_held>:
c0103964: 00 00                        	add	byte ptr [eax], al
c0103966: 00 00                        	add	byte ptr [eax], al

c0103968 <ArchIrqSpinlockAcquire>:
c0103968: fa                           	cli
c0103969: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]

c010396d <ArchIrqSpinlockAcquire.try_acquire>:
c010396d: f0                           	lock
c010396e: 0f ba 28 00                  	bts	dword ptr [eax], 0
c0103972: 72 07                        	jb	0xc010397b <ArchIrqSpinlockAcquire.spin_wait>
c0103974: ff 05 64 39 10 c0            	inc	dword ptr [-1072678556]
c010397a: c3                           	ret

c010397b <ArchIrqSpinlockAcquire.spin_wait>:
c010397b: f3 90                        	pause
c010397d: f7 00 01 00 00 00            	test	dword ptr [eax], 1
c0103983: 75 f6                        	jne	0xc010397b <ArchIrqSpinlockAcquire.spin_wait>
c0103985: eb e6                        	jmp	0xc010396d <ArchIrqSpinlockAcquire.try_acquire>

c0103987 <ArchIrqSpinlockRelease>:
c0103987: 8b 44 24 04                  	mov	eax, dword ptr [esp + 4]
c010398b: ff 0d 64 39 10 c0            	dec	dword ptr [-1072678556]
c0103991: 75 0a                        	jne	0xc010399d <ArchIrqSpinlockRelease.noEnableIRQ>
c0103993: 83 3d 60 39 10 c0 00         	cmp	dword ptr [-1072678560], 0
c010399a: 74 01                        	je	0xc010399d <ArchIrqSpinlockRelease.noEnableIRQ>
c010399c: fb                           	sti

c010399d <ArchIrqSpinlockRelease.noEnableIRQ>:
c010399d: f0                           	lock
c010399e: 0f ba 30 00                  	btr	dword ptr [eax], 0
c01039a2: c3                           	ret
c01039a3: 66 90                        	nop
c01039a5: 66 90                        	nop
c01039a7: 66 90                        	nop
c01039a9: 66 90                        	nop
c01039ab: 66 90                        	nop
c01039ad: 66 90                        	nop
c01039af: 90                           	nop

c01039b0 <__udivdi3>:
c01039b0: 55                           	push	ebp
c01039b1: 89 e5                        	mov	ebp, esp
c01039b3: 57                           	push	edi
c01039b4: 56                           	push	esi
c01039b5: 53                           	push	ebx
c01039b6: 83 ec 1c                     	sub	esp, 28
c01039b9: 8b 7d 08                     	mov	edi, dword ptr [ebp + 8]
c01039bc: 8b 45 14                     	mov	eax, dword ptr [ebp + 20]
c01039bf: 8b 75 0c                     	mov	esi, dword ptr [ebp + 12]
c01039c2: 8b 5d 10                     	mov	ebx, dword ptr [ebp + 16]
c01039c5: 89 7d e4                     	mov	dword ptr [ebp - 28], edi
c01039c8: 85 c0                        	test	eax, eax
c01039ca: 75 1c                        	jne	0xc01039e8 <__udivdi3+0x38>
c01039cc: 39 de                        	cmp	esi, ebx
c01039ce: 73 50                        	jae	0xc0103a20 <__udivdi3+0x70>
c01039d0: 89 f8                        	mov	eax, edi
c01039d2: 31 ff                        	xor	edi, edi
c01039d4: 89 f2                        	mov	edx, esi
c01039d6: f7 f3                        	div	ebx
c01039d8: 89 fa                        	mov	edx, edi
c01039da: 83 c4 1c                     	add	esp, 28
c01039dd: 5b                           	pop	ebx
c01039de: 5e                           	pop	esi
c01039df: 5f                           	pop	edi
c01039e0: 5d                           	pop	ebp
c01039e1: c3                           	ret
c01039e2: 8d b6 00 00 00 00            	lea	esi, [esi]
c01039e8: 39 c6                        	cmp	esi, eax
c01039ea: 73 14                        	jae	0xc0103a00 <__udivdi3+0x50>
c01039ec: 31 ff                        	xor	edi, edi
c01039ee: 31 c0                        	xor	eax, eax
c01039f0: 89 fa                        	mov	edx, edi
c01039f2: 83 c4 1c                     	add	esp, 28
c01039f5: 5b                           	pop	ebx
c01039f6: 5e                           	pop	esi
c01039f7: 5f                           	pop	edi
c01039f8: 5d                           	pop	ebp
c01039f9: c3                           	ret
c01039fa: 8d b6 00 00 00 00            	lea	esi, [esi]
c0103a00: 0f bd f8                     	bsr	edi, eax
c0103a03: 83 f7 1f                     	xor	edi, 31
c0103a06: 75 48                        	jne	0xc0103a50 <__udivdi3+0xa0>
c0103a08: 39 f0                        	cmp	eax, esi
c0103a0a: 72 07                        	jb	0xc0103a13 <__udivdi3+0x63>
c0103a0c: 31 c0                        	xor	eax, eax
c0103a0e: 39 5d e4                     	cmp	dword ptr [ebp - 28], ebx
c0103a11: 72 dd                        	jb	0xc01039f0 <__udivdi3+0x40>
c0103a13: b8 01 00 00 00               	mov	eax, 1
c0103a18: eb d6                        	jmp	0xc01039f0 <__udivdi3+0x40>
c0103a1a: 8d b6 00 00 00 00            	lea	esi, [esi]
c0103a20: 89 d9                        	mov	ecx, ebx
c0103a22: 85 db                        	test	ebx, ebx
c0103a24: 75 0b                        	jne	0xc0103a31 <__udivdi3+0x81>
c0103a26: b8 01 00 00 00               	mov	eax, 1
c0103a2b: 31 d2                        	xor	edx, edx
c0103a2d: f7 f3                        	div	ebx
c0103a2f: 89 c1                        	mov	ecx, eax
c0103a31: 31 d2                        	xor	edx, edx
c0103a33: 89 f0                        	mov	eax, esi
c0103a35: f7 f1                        	div	ecx
c0103a37: 89 c6                        	mov	esi, eax
c0103a39: 8b 45 e4                     	mov	eax, dword ptr [ebp - 28]
c0103a3c: 89 f7                        	mov	edi, esi
c0103a3e: f7 f1                        	div	ecx
c0103a40: 89 fa                        	mov	edx, edi
c0103a42: 83 c4 1c                     	add	esp, 28
c0103a45: 5b                           	pop	ebx
c0103a46: 5e                           	pop	esi
c0103a47: 5f                           	pop	edi
c0103a48: 5d                           	pop	ebp
c0103a49: c3                           	ret
c0103a4a: 8d b6 00 00 00 00            	lea	esi, [esi]
c0103a50: 89 f9                        	mov	ecx, edi
c0103a52: ba 20 00 00 00               	mov	edx, 32
c0103a57: 29 fa                        	sub	edx, edi
c0103a59: d3 e0                        	shl	eax, cl
c0103a5b: 89 45 e0                     	mov	dword ptr [ebp - 32], eax
c0103a5e: 89 d1                        	mov	ecx, edx
c0103a60: 89 d8                        	mov	eax, ebx
c0103a62: d3 e8                        	shr	eax, cl
c0103a64: 89 c1                        	mov	ecx, eax
c0103a66: 8b 45 e0                     	mov	eax, dword ptr [ebp - 32]
c0103a69: 09 c1                        	or	ecx, eax
c0103a6b: 89 f0                        	mov	eax, esi
c0103a6d: 89 4d e0                     	mov	dword ptr [ebp - 32], ecx
c0103a70: 89 f9                        	mov	ecx, edi
c0103a72: d3 e3                        	shl	ebx, cl
c0103a74: 89 d1                        	mov	ecx, edx
c0103a76: d3 e8                        	shr	eax, cl
c0103a78: 89 5d dc                     	mov	dword ptr [ebp - 36], ebx
c0103a7b: 89 f9                        	mov	ecx, edi
c0103a7d: 8b 5d e4                     	mov	ebx, dword ptr [ebp - 28]
c0103a80: d3 e6                        	shl	esi, cl
c0103a82: 89 d1                        	mov	ecx, edx
c0103a84: d3 eb                        	shr	ebx, cl
c0103a86: 09 f3                        	or	ebx, esi
c0103a88: 89 c6                        	mov	esi, eax
c0103a8a: 89 f2                        	mov	edx, esi
c0103a8c: 89 d8                        	mov	eax, ebx
c0103a8e: f7 75 e0                     	div	dword ptr [ebp - 32]
c0103a91: 89 d6                        	mov	esi, edx
c0103a93: 89 c3                        	mov	ebx, eax
c0103a95: f7 65 dc                     	mul	dword ptr [ebp - 36]
c0103a98: 89 55 e0                     	mov	dword ptr [ebp - 32], edx
c0103a9b: 39 d6                        	cmp	esi, edx
c0103a9d: 72 21                        	jb	0xc0103ac0 <__udivdi3+0x110>
c0103a9f: 8b 55 e4                     	mov	edx, dword ptr [ebp - 28]
c0103aa2: 89 f9                        	mov	ecx, edi
c0103aa4: d3 e2                        	shl	edx, cl
c0103aa6: 39 c2                        	cmp	edx, eax
c0103aa8: 73 07                        	jae	0xc0103ab1 <__udivdi3+0x101>
c0103aaa: 8b 55 e0                     	mov	edx, dword ptr [ebp - 32]
c0103aad: 39 d6                        	cmp	esi, edx
c0103aaf: 74 0f                        	je	0xc0103ac0 <__udivdi3+0x110>
c0103ab1: 89 d8                        	mov	eax, ebx
c0103ab3: 31 ff                        	xor	edi, edi
c0103ab5: e9 36 ff ff ff               	jmp	0xc01039f0 <__udivdi3+0x40>
c0103aba: 8d b6 00 00 00 00            	lea	esi, [esi]
c0103ac0: 8d 43 ff                     	lea	eax, [ebx - 1]
c0103ac3: 31 ff                        	xor	edi, edi
c0103ac5: e9 26 ff ff ff               	jmp	0xc01039f0 <__udivdi3+0x40>
