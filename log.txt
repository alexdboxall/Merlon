KernelMain: kernel is initialising...
memory here: 0x1000 -> 0x80000
memory here: 0x137000 -> 0x1E0000
memory here: 0x1E0000 -> 0x200000
memory here: 0xFFFC0000 -> 0x0
Grabbing from emo block of size 0x4000, for request 0x1000
Grabbing from emo block of size 0x3000, for request 0x1000
backup heap: largest is 0x2000, total is 0x2000
Grabbing from emo block of size 0x2000, for request 0x1000
backup heap: largest is 0x4000, total is 0x5000
Grabbing from emo block of size 0x1000, for request 0x1000
backup heap: largest is 0x4000, total is 0x4000
Grabbing from emo block of size 0x4000, for request 0x1000
backup heap: largest is 0x3000, total is 0x3000
Grabbing from emo block of size 0x3000, for request 0x1000
backup heap: largest is 0x4000, total is 0x6000
Grabbing from emo block of size 0x2000, for request 0x1000
backup heap: largest is 0x4000, total is 0x5000
Grabbing from emo block of size 0x1000, for request 0x1000
backup heap: largest is 0x4000, total is 0x4000
Grabbing from emo block of size 0x4000, for request 0x1000
backup heap: largest is 0x3000, total is 0x3000
Grabbing from emo block of size 0x3000, for request 0x1000
backup heap: largest is 0x4000, total is 0x6000
Grabbing from emo block of size 0x2000, for request 0x1000
backup heap: largest is 0x4000, total is 0x5000
Grabbing from emo block of size 0x1000, for request 0x1000
backup heap: largest is 0x4000, total is 0x4000
Grabbing from emo block of size 0x4000, for request 0x1000
backup heap: largest is 0x3000, total is 0x3000

  NOS Kernel
  Copyright Alex Boxall 2022-2023

  1076 / 1340 KB used

  ...Grabbing from emo block of size 0x3000, for request 0x1000
backup heap: largest is 0x4000, total is 0x6000
This was called by something living within a process.
The second process is waiting 2 seconds...
The second process is waiting 2 seconds...
The second process is waiting 2 seconds...
The second process is about to terminate with status 111!
STACK OF REAPED IS 0xD025B000
Thread is scheduled to die... with stack at 0xD025B000
list index = 2
STACK OF REAPER IS 0xD025E000
Properly terminating a thread, with stack at 0xD025E000
list index = 2
Terminating a thread that was scheduled to die... stack at 0xD025B000
Properly terminating a thread, with stack at 0xD025B000
Cleaning up stack here: 0xD025E000
(Our stack is at 0xD0259000)
Cleaned up stack!!
list index = 0
Cleaning up stack here: 0xD025B000
(Our stack is at 0xD0259000)
Page fault: cr2 0x14, eip 0xC01036E9, nos-err 0x0
HandleVirtFault A, 0x14, 0
PANIC 12 invalid irq level


 *** KERNEL PANIC ***

0xC - invalid irq level


  --- KERNEL PANIC ---

  Error Code: 12
  Message: invalid irq level
